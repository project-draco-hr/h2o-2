{
  for (int k=0; k < _nclass; k++) {
    final DTree tree=_trees[k];
    if (tree == null)     continue;
    if (tree.root() instanceof LeafNode)     continue;
    final Chunk nids=chk_nids(chks,k);
    final Chunk ct=chk_tree(chks,k);
    for (int row=0; row < nids._len; row++) {
      int nid=(int)nids.at80(row);
      if (isOOBRow(nid)) {
        nid=oob2Nid(nid);
        if (tree.node(nid) instanceof UndecidedNode)         nid=tree.node(nid).pid();
        DecidedNode dn=tree.decided(nid);
        if (dn._split.col() == -1)         dn=tree.decided(tree.node(nid).pid());
        int leafnid=dn.ns(chks,row);
        ct.set0(row,(float)(ct.at0(row) + ((LeafNode)tree.node(leafnid)).pred()));
      }
      nids.set0(row,0);
    }
  }
}
