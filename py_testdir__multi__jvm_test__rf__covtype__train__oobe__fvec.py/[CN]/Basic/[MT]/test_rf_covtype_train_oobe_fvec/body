def test_rf_covtype_train_oobe_fvec(self):
    h2o.beta_features = True
    print '\nRun test iterations/compare with covtype.data'
    rfv1 = self.rf_covtype_train_oobe('covtype.data', checkExpectedResults=False)
    (ce1, classErrorPctList, totalScores) = h2o_rf.simpleCheckRFView(rfv=rfv1)
    print '\nRun test iterations/compare with covtype.shuffled.data'
    rfv2 = self.rf_covtype_train_oobe('covtype.shuffled.data', checkExpectedResults=True)
    (ce2, classErrorPctList, totalScores) = h2o_rf.simpleCheckRFView(rfv=rfv2)
    print '\nRun test iterations/compare with covtype.sorted.data'
    rfv3 = self.rf_covtype_train_oobe('covtype.sorted.data', checkExpectedResults=False)
    (ce3, classErrorPctList, totalScores) = h2o_rf.simpleCheckRFView(rfv=rfv3)
    print 'rfv3, from covtype.sorted.data'
    print '\nJsonDiff covtype.data rfv, to covtype.sorted.data rfv'
    df = h2o_util.JsonDiff(rfv1, rfv3, with_values=True)
    print 'df.difference:', h2o.dump_json(df.difference)
    self.assertAlmostEqual(ce1, ce2, delta=0.5, msg=("classication error %s isn't close to that when sorted %s" % (ce1, ce2)))
    self.assertAlmostEqual(ce1, ce3, delta=0.5, msg=("classication error %s isn't close to that when sorted %s" % (ce1, ce3)))
