{
  assert(cm != null);
  long acts[]=new long[cm.length];
  long preds[]=new long[cm[0].length];
  for (int a=0; a < cm.length; a++) {
    long sum=0;
    for (int p=0; p < cm[a].length; p++) {
      sum+=cm[a][p];
      preds[p]+=cm[a][p];
    }
    acts[a]=sum;
  }
  Vec vaE=null, vpE=null;
  String adomain[]=null;
  String pdomain[]=null;
  try {
    vaE=vactual.toEnum();
    vpE=vpredict.toEnum();
    adomain=ConfusionMatrix.show(acts,vaE.domain());
    pdomain=ConfusionMatrix.show(preds,vpE.domain());
  }
 catch (  Throwable t) {
    Log.err(t);
    return Double.NaN;
  }
 finally {
    if (vaE != null)     UKV.remove(vaE._key);
    if (vpE != null)     UKV.remove(vpE._key);
  }
  int maxlen=0;
  for (  String s : pdomain)   if (s != null)   maxlen=Math.max(maxlen,s.length());
  long sum=0;
  for (int a=0; a < cm.length; a++) {
    if (adomain[a] == null)     continue;
    for (int p=0; p < pdomain.length; p++) {
      if (pdomain[p] == null)       continue;
      sum+=cm[a][p];
    }
  }
  maxlen=Math.max(8,Math.max(maxlen,String.valueOf(sum).length()) + 2);
  final String fmt="%" + maxlen + "d";
  final String fmtS="%" + maxlen + "s";
  sb.append(String.format(fmtS,"Act/Prd"));
  for (  String s : pdomain)   if (s != null)   sb.append(String.format(fmtS,s));
  sb.append("   " + String.format(fmtS,"Error\n"));
  long terr=0;
  for (int a=0; a < cm.length; a++) {
    if (adomain[a] == null)     continue;
    sb.append(String.format(fmtS,adomain[a]));
    long correct=0;
    for (int p=0; p < pdomain.length; p++) {
      if (pdomain[p] == null)       continue;
      if (adomain[a].equals(pdomain[p]))       correct=cm[a][p];
      sb.append(String.format(fmt,cm[a][p]));
    }
    long err=acts[a] - correct;
    terr+=err;
    sb.append("   " + String.format("%5.3f = %d / %d\n",(double)err / acts[a],err,acts[a]));
  }
  sb.append(String.format(fmtS,"Totals"));
  for (int p=0; p < pdomain.length; p++)   if (pdomain[p] != null)   sb.append(String.format(fmt,preds[p]));
  double total_err_rate=(double)terr / vactual.length();
  sb.append("   " + String.format("%5.3f = %d / %d\n",total_err_rate,terr,vactual.length()));
  return total_err_rate;
}
