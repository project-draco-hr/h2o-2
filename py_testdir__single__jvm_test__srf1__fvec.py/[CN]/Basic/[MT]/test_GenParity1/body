def test_GenParity1(self):
    h2o.beta_features = True
    SYNDATASETS_DIR = h2o.make_syn_dir()
    parityPl = h2o.find_file('syn_scripts/parity.pl')
    print '\nAssuming two row dataset is illegal. avoiding'
    for x in xrange(10, 100, 10):
        shCmdString = ((((('perl ' + parityPl) + ' 128 4 ') + str(x)) + ' quad ') + SYNDATASETS_DIR)
        h2o.spawn_cmd_and_wait('parity.pl', shCmdString.split())
        csvFilename = (('parity_128_4_' + str(x)) + '_quad.data')
    trees = 6
    timeoutSecs = 20
    for x in xrange(10, 100, 10):
        sys.stdout.write('.')
        sys.stdout.flush()
        csvFilename = (('parity_128_4_' + str(x)) + '_quad.data')
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        parseResult = h2i.import_parse(path=csvPathname, schema='put')
        h2o_cmd.runSpeeDRF(parseResult=parseResult, response=8, num_trees=trees, timeoutSecs=timeoutSecs)
        trees += 10
        timeoutSecs += 2
