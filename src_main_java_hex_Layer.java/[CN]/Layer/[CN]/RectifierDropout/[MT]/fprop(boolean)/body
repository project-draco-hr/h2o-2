{
  if (_rand == null) {
    _rand=new MersenneTwisterRNG(MersenneTwisterRNG.SEEDS);
    _bits=new byte[(units + 7) / 8];
  }
  _rand.nextBytes(_bits);
  for (int o=0; o < _a.length; o++) {
    _a[o]=0;
    boolean b=(_bits[o / 8] & (1 << (o % 8))) != 0;
    if (!training || b) {
      for (int i=0; i < _previous._a.length; i++)       _a[o]+=_w[o * _previous._a.length + i] * _previous._a[i];
      _a[o]+=_b[o];
      if (_a[o] < 0)       _a[o]=0;
 else       if (!training)       _a[o]*=.5f;
    }
  }
}
