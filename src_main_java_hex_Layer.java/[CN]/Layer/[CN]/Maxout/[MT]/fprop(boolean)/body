{
  if (_rand == null) {
    _rand=new MersenneTwisterRNG(MersenneTwisterRNG.SEEDS);
    _bits=new byte[units / 8 + 1];
  }
  _rand.nextBytes(_bits);
  float max=0;
  for (int o=0; o < _a.length; o++) {
    _a[o]=0;
    boolean b=(_bits[o >> 3] & (1 << o)) != 0;
    if (!training || b) {
      _a[o]=Float.NEGATIVE_INFINITY;
      for (int i=0; i < _previous._a.length; i++)       _a[o]=Math.max(_a[o],_w[o * _previous._a.length + i] * _previous._a[i]);
      if (!training) {
        _a[o]*=.5f;
      }
      _a[o]+=_b[o];
      if (max < _a[o])       max=_a[o];
    }
  }
  if (max > 1)   for (int o=0; o < _a.length; o++)   _a[o]/=max;
}
