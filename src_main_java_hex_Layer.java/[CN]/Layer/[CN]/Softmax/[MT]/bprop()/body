{
  long processed=_training.processed();
  float m=momentum(processed);
  float r=rate(processed) * (1 - m);
  int label=target();
  for (int u=0; u < _a.length; u++) {
    final float targetval=(u == label ? 1 : 0);
    float g=targetval - _a[u];
    if (loss == NeuralNet.Loss.CrossEntropy) {
    }
 else     if (loss == NeuralNet.Loss.MeanSquare) {
      g*=(1 - _a[u]) * _a[u];
    }
    bprop(u,g,r,m);
  }
}
