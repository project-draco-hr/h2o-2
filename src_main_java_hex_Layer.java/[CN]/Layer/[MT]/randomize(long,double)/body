{
  if (_w == null)   return;
  final Random rng=water.util.Utils.getDeterRNG(seed);
  if (params.initial_weight_distribution == NeuralNet.InitialWeightDistribution.UniformAdaptive) {
    final double range=prefactor * Math.sqrt(6. / (_previous.units + units));
    for (int i=0; i < _w.length; i++)     _w[i]=(float)uniformDist(rng,-range,range);
  }
 else {
    if (params.initial_weight_distribution == NeuralNet.InitialWeightDistribution.Uniform) {
      for (int i=0; i < _w.length; i++) {
        _w[i]=(float)uniformDist(rng,-params.initial_weight_scale,params.initial_weight_scale);
      }
    }
 else     if (params.initial_weight_distribution == NeuralNet.InitialWeightDistribution.Normal) {
      for (int i=0; i < _w.length; i++) {
        _w[i]=(float)(0 + rng.nextGaussian() * params.initial_weight_scale);
      }
    }
  }
}
