{
  DRFTree tree=(DRFTree)_tree;
  int[] cols=new int[hs.length];
  int len=0;
  for (int i=0; i < hs.length; i++) {
    if (hs[i] == null || hs[i]._nbins == 1)     continue;
    if (hs[i]._mins[0] == hs[i]._maxs[hs[i]._nbins - 1])     continue;
    cols[len++]=i;
  }
  double bs=Double.MAX_VALUE;
  int idx=-1;
  for (int i=0; i < tree._mtrys; i++) {
    if (len == 0)     break;
    int idx2=tree._rand.nextInt(len);
    int col=cols[idx2];
    cols[idx2]=cols[--len];
    double s=hs[col].score();
    if (s < bs) {
      bs=s;
      idx=col;
    }
    if (s <= 0)     break;
  }
  return idx;
}
