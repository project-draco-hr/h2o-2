def test_parse_summary_airline_s3(self):
    h2o.beta_features = True
    csvFilelist = [('allyears2k.csv', 300), ('year1987.csv', 600), ('allyears.csv', 900)]
    bucket = 'h2o-airlines-unpacked'
    (importHDFSResult, importPattern) = h2i.import_only(bucket=bucket, path='*', schema='s3')
    s3nFullList = importHDFSResult['succeeded']
    self.assertGreater(len(s3nFullList), 1, 'Should see more than 1 files in s3n?')
    print '\nTrying StoreView after the import s3'
    h2o_cmd.runStoreView(timeoutSecs=120)
    trial = 0
    for (csvFilename, timeoutSecs) in csvFilelist:
        trialStart = time.time()
        csvPathname = csvFilename
        hex_key = (((csvFilename + '_') + str(trial)) + '.hex')
        start = time.time()
        parseResult = h2i.import_parse(bucket=bucket, path=csvPathname, schema='s3', hex_key=hex_key, timeoutSecs=timeoutSecs, retryDelaySecs=10, pollTimeoutSecs=120)
        elapsed = (time.time() - start)
        print 'parse end on ', parseResult['destination_key'], 'took', elapsed, 'seconds', ('%d pct. of timeout' % ((elapsed * 100) / timeoutSecs))
        start = time.time()
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'], timeoutSecs=360)
        print 'Inspect:', parseResult['destination_key'], 'took', (time.time() - start), 'seconds'
        h2o_cmd.infoFromInspect(inspect, csvPathname)
        goodX = h2o_glm.goodXFromColumnInfo(y='IsArrDelayed', key=parseResult['destination_key'], timeoutSecs=300)
        summaryResult = h2o_cmd.runSummary(key=hex_key, timeoutSecs=360)
        h2o_cmd.infoFromSummary(summaryResult)
        print '\nTrying StoreView after the parse'
        h2o_cmd.runStoreView(timeoutSecs=120)
        print 'Trial #', trial, 'completed in', (time.time() - trialStart), 'seconds.'
        trial += 1
