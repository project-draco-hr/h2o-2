{
  int numClasses=classes();
  int votes[]=new int[numClasses + 1];
  preds=new float[numClasses + 1];
  for (int i=0; i < treeCount(); i++)   votes[(int)Tree.classify(new AutoBuffer(tree(i)),data,numClasses)]++;
  float s=0.f;
  for (  int v : votes)   s+=(float)v;
  for (int i=0; i < votes.length - 1; ++i)   preds[i + 1]=(float)votes[i] / s;
  preds[0]=(float)(classify(votes,null,null) + get_response().min());
  return preds;
}
