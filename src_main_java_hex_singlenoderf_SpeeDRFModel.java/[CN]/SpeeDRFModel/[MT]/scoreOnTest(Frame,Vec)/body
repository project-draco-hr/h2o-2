{
  Frame scored=score(fr);
  water.api.ConfusionMatrix cm=new water.api.ConfusionMatrix();
  cm.vactual=fr.lastVec();
  cm.vpredict=scored.anyVec();
  cm.invoke();
  if (regression) {
    float mse=(float)cm.mse;
    errs[errs.length - 1]=mse;
    cms[cms.length - 1]=null;
  }
 else {
    this.cm=cm.cm;
    errs[errs.length - 1]=-1f;
    ConfusionMatrix new_cm=new ConfusionMatrix(this.cm);
    cms[cms.length - 1]=new_cm;
    if (classes() == 2 && !scored.lastVec().isInt()) {
      AUC auc_calc=new AUC();
      auc_calc.vactual=cm.vactual;
      auc_calc.vpredict=scored.lastVec();
      auc_calc.invoke();
      validAUC=auc_calc.data();
    }
    if (importance && !regression)     varimp=doVarImpCalc(fr,this,modelResp);
  }
}
