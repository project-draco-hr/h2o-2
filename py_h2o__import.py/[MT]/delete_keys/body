def delete_keys(node=None, pattern=None, timeoutSecs=120):
    if (not node):
        node = h2o.nodes[0]
    kwargs = {'filter': pattern, }
    deletedCnt = 0
    triedKeys = []
    while True:
        storeViewResult = h2o_cmd.runStoreView(node, timeoutSecs=timeoutSecs, view=20, **kwargs)
        keys = storeViewResult['keys']
        if (not keys):
            break
        deletedThisTime = 0
        for k in keys:
            if (k in triedKeys):
                print ('Already tried to delete %s. Must have failed. Not trying again' % k)
            elif ('__Tree__' in k):
                print ('Not deleting a tree key from DRF: %s' % k)
            elif ('DRF_' in k):
                print ('Not deleting DRF key..they may be problematic in flight: %s' % k)
            elif ('_distcp_' in k):
                print ('Not deleting _distcp_ key..got a timeout before trying: %s' % k)
            else:
                print 'Deleting', k['key'], 'at', node
                node.remove_key(k['key'], timeoutSecs=timeoutSecs)
                deletedCnt += 1
                deletedThisTime += 1
            triedKeys.append(k)
        if (deletedThisTime == 0):
            break
    return deletedCnt
