{
  try {
    H2O.getAWSCredentials();
  }
 catch (  Exception ex) {
    System.out.println("Please add AWS credentials to './AwsCredentials.properties'");
    System.out.println("File format is:");
    System.out.println("accessKey=XXXXXXXXXXXXXXXXXXXX");
    System.out.println("secretKey=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    return;
  }
  Config config;
  int count;
  String[] remaining;
  try {
    Arguments arguments=new Arguments(args);
    config=new Config();
    arguments.extract(config);
    remaining=Arrays.copyOfRange(args,arguments.firstFlag(),args.length);
    count=Integer.parseInt(remaining[0]);
    remaining=Arrays.copyOfRange(remaining,1,remaining.length);
  }
 catch (  Exception ex) {
    Config defaults=new Config();
    System.out.println("Usage: h2o_on_ec2 [options] <machine_count> args");
    System.out.println();
    System.out.println("Options and default values:");
    System.out.println("  -region=" + defaults.region);
    System.out.println("  -type=" + defaults.type);
    System.out.println("  -secg=" + defaults.secg + " (Security Group, must allow ssh (TCP 22))");
    System.out.println("  -confirm=" + defaults.confirm + " (Confirm before starting new instances)");
    System.out.println("  -incl='' (additional rsync includes, e.g. py:smalldata)");
    System.out.println("  -excl='' (additional rsync excludes, e.g. sandbox:*.pyc)");
    System.out.println("  -java_args='' (java args for cluster JVMs)");
    return;
  }
  run(config,count,remaining);
}
