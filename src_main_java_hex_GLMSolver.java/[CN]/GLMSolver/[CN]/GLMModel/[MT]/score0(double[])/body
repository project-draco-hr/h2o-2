{
  double p=0;
  for (int i=0; i < data.length; i++) {
    int idx=_colCatMap[i];
    if (idx + 1 == _colCatMap[i + 1]) {
      double d=(data[i] - _normSub[idx]) * _normMul[idx];
      p+=_beta[idx] * d;
    }
 else {
      int d=(int)data[i];
      idx+=d;
      if (idx < _colCatMap[i + 1])       p+=_beta[idx];
 else       p=Double.NaN;
    }
  }
  p+=_beta[_beta.length - 1];
  double pp=_glmParams._l.linkInv(p);
  if (_glmParams._f == Family.binomial)   return pp >= _vals[0].bestThreshold() ? 1.0 : 0.0;
  return pp;
}
