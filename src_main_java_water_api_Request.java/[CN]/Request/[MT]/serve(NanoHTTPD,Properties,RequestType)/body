{
switch (type) {
case help:
    return wrap(server,build(Response.done(serveHelp())));
case json:
case www:
  String query=checkArguments(args,type);
if (H2O.OPT_ARGS.no_requests_log == null) {
  String log=getClass().getSimpleName();
  for (  Argument arg : _arguments) {
    Object value=arg.record()._value;
    if (value instanceof Value)     value=((Value)value)._key;
    log+=" " + arg._name + "="+ value;
  }
  L.info(this,Sys.HTTPD,log);
}
if (query != null) return wrap(server,query,type);
long time=System.currentTimeMillis();
Response response=serve();
response.setTimeStart(time);
if (type == RequestType.json) return wrap(server,response.toJson());
return wrap(server,build(response));
case debug:
response=serve_debug();
return wrap(server,build(response));
case query:
query=checkArguments(args,type);
return wrap(server,query);
default :
throw new RuntimeException("Invalid request type " + type.toString());
}
}
