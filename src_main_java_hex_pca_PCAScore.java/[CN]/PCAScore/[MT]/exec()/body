{
  Frame fr=model.adapt(source,true,false)[0];
  int nfeat=model._names.length;
  Vec[] vecs=Arrays.copyOf(fr.vecs(),nfeat + num_pc);
  for (int i=0; i < num_pc; i++)   vecs[nfeat + i]=vecs[0].makeZero();
  boolean temp=model.params.standardize == 1 ? true : false;
  PCAScoreTask tsk=new PCAScoreTask(this,nfeat,num_pc,model.eigVec,temp);
  tsk.doIt(new Frame(vecs));
  Vec[] outputVecs=Arrays.copyOfRange(tsk._fr.vecs(),nfeat,nfeat + num_pc);
  String[] names=new String[num_pc];
  for (int i=0; i < num_pc; i++)   names[i]="PC" + i;
  Frame f=new Frame(names,outputVecs);
  DKV.put(destination_key,f);
}
