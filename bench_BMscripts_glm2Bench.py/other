import os, sys, time, csv
sys.path.append('../py/')
sys.path.extend(['.', '..'])
import h2o_cmd, h2o, h2o_hosts, h2o_browse as h2b, h2o_import as h2i, h2o_rf, h2o_jobs
from pprint import pprint
csv_header = ('h2o_build', 'java_heap_GB', 'dataset', 'nTrainRows', 'nTestRows', 'nCols', 'trainParseWallTime', 'nfolds', 'glmBuildTime', 'testParseWallTime', 'scoreTime', 'AUC', 'AIC', 'error')
files = {'Airlines': {'train': ('AirlinesTrain1x', 'AirlinesTrain10x', 'AirlinesTrain100x'), 'test': 'AirlinesTest', }, 'AllBedrooms': {'train': ('AllBedroomsTrain1x', 'AllBedroomsTrain10x', 'AllBedroomsTrain100x'), 'test': 'AllBedroomsTest', }, }
build = ''
debug = False
if (__name__ == '__main__'):
    debug = sys.argv.pop((-1))
    build = sys.argv.pop((-1))
    h2o.parse_our_args()
    h2o_hosts.build_cloud_with_hosts()
    h2o.beta_features = True
    bench = 'bench'
    if debug:
        bench = 'bench/debug'
    airlinesTestParseStart = time.time()
    hK = 'AirlinesHeader.csv'
    headerPathname = (((bench + '/Airlines') + '/') + hK)
    h2i.import_only(bucket='home-0xdiag-datasets', path=headerPathname)
    headerKey = h2i.find_key(hK)
    testFile = h2i.import_parse(bucket='home-0xdiag-datasets', path=(bench + '/Airlines/AirlinesTest.csv'), schema='local', hex_key='atest.hex', header=1, header_from_file=headerKey, separator=44, noPoll=True, doSummary=False)
    h2o_jobs.pollWaitJobs(timeoutSecs=7200, pollTimeoutSecs=7200, retryDelaySecs=5)
    elapsedAirlinesTestParse = (time.time() - airlinesTestParseStart)
    row = {'testParseWallTime': elapsedAirlinesTestParse, }
    x = None
    doGLM2(files['Airlines'], 'Airlines', family='binomial', lambda_=1e-05, alpha=0.5, nfolds=10, y='IsDepDelayed', x=x, testFilehex='atest.hex', row=row, case_mode='%3D', case_val=1.0)
    allBedroomsTestParseStart = time.time()
    hK = 'AllBedroomsHeader.csv'
    headerPathname = (((bench + '/AllBedrooms') + '/') + hK)
    h2i.import_only(bucket='home-0xdiag-datasets', path=headerPathname)
    headerKey = h2i.find_key(hK)
    testFile = h2i.import_parse(bucket='home-0xdiag-datasets', path=(bench + '/AllBedrooms/AllBedroomsTest.csv'), schema='local', hex_key='allBtest.hex', header=1, header_from_file=headerKey, separator=44, noPoll=True, doSummary=False)
    h2o_jobs.pollWaitJobs(timeoutSecs=7200, pollTimeoutSecs=7200, retryDelaySecs=5)
    elapsedAllBedroomsTestParse = (time.time() - allBedroomsTestParseStart)
    row = {'testParseWallTime': elapsedAllBedroomsTestParse, }
    x = 'county,place,Rent_Type,mcd'
    doGLM2(files['AllBedrooms'], 'AllBedrooms', family='gaussian', lambda_=0.0001, alpha=0.75, nfolds=10, y='medrent', x=x, testFilehex='allBtest.hex', row=row, case_mode='n/a', case_val=0.0)
    h2o.tear_down_cloud()
