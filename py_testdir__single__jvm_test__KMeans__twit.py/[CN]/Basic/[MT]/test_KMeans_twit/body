def test_KMeans_twit(self):
    csvFilename = 'Twitter2DB.txt'
    print '\nStarting', csvFilename
    csvPathname = h2o.find_file(('smalldata/' + csvFilename))
    parseResult = h2o_cmd.parseFile(csvPathname=csvPathname, key2=(csvFilename + '.hex'))
    expected = [([310527.2, 13433.89], 11340, None), ([5647967.1, 40487.76], 550, None), ([21765291.7, 93129.26], 14, None)]
    allowedDelta = (0.01, 0.01, 0.01)
    for trial in range(2):
        kwargs = {'k': 3, 'max_iter': 50, 'epsilon': 0.0001, 'normalize': 0, 'cols': '0,1', 'initialization': 'Furthest', 'destination_key': 'kmeans_dest_key', 'seed': 265211114317615310, }
        kmeans = h2o_cmd.runKMeansOnly(parseResult=parseKey, timeoutSecs=5, **kwargs)
        (centers, tupleResultList) = h2o_kmeans.bigCheckResults(self, kmeans, csvPathname, parseResult, 'd', **kwargs)
        if (1 == 0):
            h2b.browseJsonHistoryAsUrlLastMatch('KMeansScore')
            h2b.browseJsonHistoryAsUrlLastMatch('KMeansApply')
            h2b.browseJsonHistoryAsUrlLastMatch('KMeans')
            time.sleep(3600)
        h2o_kmeans.compareResultsToExpected(self, tupleResultList, expected, allowedDelta, trial=trial)
