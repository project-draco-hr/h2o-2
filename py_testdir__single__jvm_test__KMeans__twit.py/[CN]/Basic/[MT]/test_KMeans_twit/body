def test_KMeans_twit(self):
    csvFilename = 'Twitter2DB.txt'
    print '\nStarting', csvFilename
    parseResult = h2i.import_parse(bucket='smalldata', path=csvFilename, hex_key=(csvFilename + '.hex'), schema='put')
    expected1 = [([310527.2, 13433.89], 11340, None), ([5647967.1, 40487.76], 550, None), ([21765291.7, 93129.26], 14, None)]
    expected2 = [([351104.74065255735, 15421.749823633158], 11340, 5021682274541967.0), ([7292636.589090909, 7575.630909090909], 550, 6373072701775582.0), ([34406781.071428575, 244878.0], 14, 123310713697348.92)]
    allowedDelta = (0.0001, 0.0001, 0.0001)
    for trial in range(2):
        kwargs = {'k': 3, 'max_iter': 50, 'normalize': 0, 'cols': '0,1', 'initialization': 'Furthest', 'destination_key': 'kmeans_dest_key', 'seed': 265211114317615310, }
        kmeans = h2o_cmd.runKMeans(parseResult=parseResult, timeoutSecs=5, **kwargs)
        (centers, tupleResultList) = h2o_kmeans.bigCheckResults(self, kmeans, csvFilename, parseResult, 'd', **kwargs)
        if (1 == 0):
            h2b.browseJsonHistoryAsUrlLastMatch('KMeansScore')
            h2b.browseJsonHistoryAsUrlLastMatch('KMeansApply')
            h2b.browseJsonHistoryAsUrlLastMatch('KMeans')
        h2o_kmeans.compareResultsToExpected(self, tupleResultList, expected2, allowedDelta, trial=trial)
