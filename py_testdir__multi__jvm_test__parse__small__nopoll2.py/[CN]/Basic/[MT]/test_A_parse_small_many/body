def test_A_parse_small_many(self):
    SEED = 6204672511291494176
    random.seed(SEED)
    print '\nUsing random seed:', SEED
    SYNDATASETS_DIR = h2o.make_syn_dir()
    eol = '\n'
    row = 'a,b,c,d,e,f,g'
    timeoutSecs = 10
    node = h2o.nodes[0]
    for sizeTrial in range(25):
        size = random.randint(2, 129)
        print '\nparsing with rows:', size
        csvFilename = (('p' + '_') + str(size))
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        writeRows(csvPathname, row, eol, size)
        key = csvFilename
        pkey = node.put_file(csvPathname, key=key, timeoutSecs=timeoutSecs)
        print h2o.dump_json(pkey)
        trialMax = 100
        for trial in range(trialMax):
            key2 = (((csvFilename + '_') + str(trial)) + '.hex')
            noPoll = (trial == (trialMax - 1))
            node.parse(pkey, key2, timeoutSecs=timeoutSecs, retryDelaySecs=0.0, noPoll=noPoll)
            if (not (trial % 10)):
                sys.stdout.write('.')
                sys.stdout.flush()
        if (1 == 0):
            for node in h2o.nodes:
                storeView = node.store_view()
    print "Sleeping for 120 secs so the next jenkins job doesn't see all our tcp_wait ports"
    time.sleep(120)
