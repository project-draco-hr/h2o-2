{
  Key okey=loadAndParseKey("credit.hex","smalldata/kaggle/creditsample-training.csv.gz");
  UKV.remove(Key.make("smalldata/kaggle/creditsample-training.csv.gz_UNZIPPED"));
  UKV.remove(Key.make("smalldata\\kaggle\\creditsample-training.csv.gz_UNZIPPED"));
  ValueArray val=DKV.get(okey).get();
  assertEquals("Number of chunks",4,val.chunks());
  assertEquals("Number of rows",150000,val.numRows());
  assertEquals("Number of cols",12,val.numCols());
  int ntrees=3;
  int depth=30;
  int gini=StatType.GINI.ordinal();
  int seed=42;
  StatType statType=StatType.values()[gini];
  final int cols[]=new int[]{0,2,3,4,5,7,8,9,10,11,1};
  final Key modelKey=Key.make("model");
  DRFFuture result=hex.rf.DRF.execute(modelKey,cols,val,ntrees,depth,(short)1024,statType,seed,true,null,-1,Sampling.Strategy.RANDOM,1.0f,null,0,0);
  result.get();
  RFModel model=UKV.get(modelKey);
  assertEquals("Number of classes",2,model.classes());
  assertEquals("Number of trees",ntrees,model.size());
  model.deleteKeys();
  UKV.remove(modelKey);
  UKV.remove(okey);
}
