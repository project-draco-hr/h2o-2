def test_NN_covtype_1(self):
    csvFilename = 'covtype.data'
    csvPathname = ('UCI/UCI-large/covtype/' + csvFilename)
    parseResult = h2i.import_parse(bucket='datasets', path=csvPathname, schema='put', timeoutSecs=10)
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    print ('\n' + csvPathname), '    num_rows:', '{:,}'.format(inspect['num_rows']), '    num_cols:', '{:,}'.format(inspect['num_cols'])
    print 'WARNING: just doing the first 33 features, for comparison to ??? numbers'
    x = ','.join(map(str, range(33)))
    response = 54
    kwargs = {'cols': x, 'response': response, 'activation': 'Tanh', 'hidden': 500, 'rate': 0.01, 'l2': 0.0001, 'epochs': 100, 'destination_key': 'a.hex', }
    timeoutSecs = 600
    start = time.time()
    nnResult = h2o_cmd.runNNet(parseResult=parseResult, timeoutSecs=timeoutSecs, noPoll=True, **kwargs)
    print "Hack: neural net apparently doesn't support the right polling response yet?"
    h2o_jobs.pollWaitJobs(pattern=None, timeoutSecs=300, pollTimeoutSecs=10, retryDelaySecs=5)
    print 'neural net end on ', csvPathname, 'took', (time.time() - start), 'seconds'
