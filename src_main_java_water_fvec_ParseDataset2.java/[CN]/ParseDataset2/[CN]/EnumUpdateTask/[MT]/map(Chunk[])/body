{
  int[][] emap=emap(_chunk2Enum[chks[0].cidx()]);
  final int cidx=chks[0].cidx();
  for (int i=0; i < chks.length; ++i) {
    Chunk chk=chks[i];
    if (_gDomain[i] == null)     DKV.put(chk._vec.chunkKey(chk.cidx()),new C0DChunk(Double.NaN,chk._len));
 else     for (int j=0; j < chk._len; ++j) {
      if (chk.isNA0(j))       continue;
      long l=chk.at80(j);
      if (l < 0 || l >= emap[i].length) {
        Chunk chk2=chk._chk2;
        chk._chk2=null;
        StringBuilder sb=new StringBuilder("Enum renumber task, column # " + i + ": Found OOB index "+ l+ " (expected 0 - "+ emap[i].length+ ", global domain has "+ _gDomain[i].length+ " levels) pulled from "+ chk.getClass().getSimpleName()+ "\n");
        int k=0;
        for (; k < Math.min(5,chk._len); ++k)         sb.append("at8[" + (k + chk._start) + "] = "+ chk.at80(k)+ ", chk2 = "+ (chk2 != null ? chk2.at80(k) : "")+ "\n");
        k=Math.max(k,j - 2);
        sb.append("...\n");
        for (; k < Math.min(chk._len,j + 2); ++k)         sb.append("at8[" + (k + chk._start) + "] = "+ chk.at80(k)+ ", chk2 = "+ (chk2 != null ? chk2.at80(k) : "")+ "\n");
        sb.append("...\n");
        k=Math.max(k,chk._len - 5);
        for (; k < chk._len; ++k)         sb.append("at8[" + (k + chk._start) + "] = "+ chk.at80(k)+ ", chk2 = "+ (chk2 != null ? chk2.at80(k) : "")+ "\n");
        throw new RuntimeException(sb.toString());
      }
      if (emap[i][(int)l] < 0)       throw new RuntimeException(H2O.SELF.toString() + ": missing enum at col:" + i+ ", line: "+ j+ ", val = "+ l+ ", chunk="+ chk.getClass().getSimpleName());
      chk.set0(j,emap[i][(int)l]);
    }
    chk.close(cidx,_fs);
  }
}
