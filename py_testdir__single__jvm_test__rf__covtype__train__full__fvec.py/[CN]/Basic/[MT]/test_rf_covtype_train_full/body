def test_rf_covtype_train_full(self):
    h2o.beta_features = True
    csvFilename = 'covtype.data'
    csvPathname = ('standard/' + csvFilename)
    parseResult = h2i.import_parse(bucket='home-0xdiag-datasets', path=csvPathname, schema='put', hex_key=(csvFilename + '.hex'), timeoutSecs=180)
    for trial in range(1):
        kwargs = paramDict
        timeoutSecs = (30 + (kwargs['ntrees'] * 20))
        start = time.time()
        print 'Note train.csv is used for both train and validation'
        rfView = h2o_cmd.runRF(parseResult=parseResult, timeoutSecs=timeoutSecs, **kwargs)
        elapsed = (time.time() - start)
        print 'RF end on ', csvPathname, 'took', elapsed, 'seconds.', ('%d pct. of timeout' % ((elapsed / timeoutSecs) * 100))
        (classification_error, classErrorPctList, totalScores) = h2o_rf.simpleCheckRFView(rfv=rfView)
        self.assertLess(classification_error, 3, ('train.csv should have full classification error: %s < 3' % classification_error))
        print 'Trial #', trial, 'completed'
