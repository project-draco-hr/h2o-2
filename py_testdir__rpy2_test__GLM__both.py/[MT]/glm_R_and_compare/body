def glm_R_and_compare(csvPathname, family, formula, y, header=False, h2oResults=None):
    df = ro.DataFrame.from_csvfile(csvPathname, header=False)
    cn = ro.r.colnames(df)
    fit = ro.r.glm(formula=ro.r(formula), data=df, family=ro.r((family + '(link="logit")')))
    gsummary = ro.r.summary(fit)
    coef = ro.r.coef(fit)
    warningsR = []
    interceptR = coef[0]
    cListR = coef[1:]
    if (h2oResults is not None):
        (warningsH2o, cListH2o, interceptH2o) = h2oResults
        interceptDelta = abs((abs(interceptH2o) - abs(interceptR)))
        cDelta = [abs((abs(a) - abs(b))) for (a, b) in zip(cListH2o, cListR)]
    else:
        interceptDelta = None
        cDelta = [None for a in cListR]

    def printit(a, b, c, d):
        print ('%-20s %-20.5e %8s %5.2f%% %10s %-20.5e' % ((((('R ' + a) + ' ') + b) + ':'), c, 'diff:', (abs((d / c)) * 100), 'abs diff:', d))
    print 
    printit('intercept', '', interceptR, interceptDelta)
    print 'clistR:', cListR
    print 'cn:', cn
    print 'cDelta:', cDelta
    for (i, cValue) in enumerate(cListR):
        if (i >= y):
            cnIndex = (i + 1)
        else:
            cnIndex = i
        print 'i:', i, 'cnIndex:', cnIndex
        printit('coefficient', cn[cnIndex], cValue, cDelta[i])
    gsummaryIndexDesc = ['call', 'terms', 'family', 'deviance', 'aic', 'contrasts', 'df.residual', 'null.deviance', 'df.null', 'iter', 'deviance.resid', 'coefficients', 'aliased', 'dispersion', 'df', 'cov.unscaled', 'cov.scaled']
    whatIwant = ['family', 'deviance', 'aic', 'df.residual', 'null.deviance', 'df.null', 'iter']
    for (i, v) in enumerate(gsummary):
        d = gsummaryIndexDesc[i]
        if (d in whatIwant):
            print ('%s %s %15s %s' % ('R gsummary', i, (d + ':\t'), gsummary[i][0]))
    return (warningsR, cListR, interceptR)
