{
  if (resKey == null)   resKey=PCAModel.makeKey();
  GramMatrixFunc gramF=new GramMatrixFunc(data,new GLMParams(Family.gaussian),null);
  Gram gram=gramF.apply(job,data);
  Matrix myGram=new Matrix(gram.getXX());
  SingularValueDecomposition mySVD=myGram.svd();
  double[] Sval=mySVD.getSingularValues();
  int ncomp=getNumPC(Sval,params._tol);
  double[] sdev=new double[ncomp];
  double totVar=0;
  for (int i=0; i < ncomp; i++) {
    sdev[i]=Math.sqrt(Sval[i]);
    totVar+=Sval[i];
  }
  Matrix eigV=mySVD.getV();
  int nfeat=eigV.getRowDimension();
  double[][] eigVec=new double[ncomp][nfeat];
  double[] propVar=new double[ncomp];
  for (int i=0; i < ncomp; i++) {
    eigVec[i]=eigV.getMatrix(0,nfeat - 1,i,i).getColumnPackedCopy();
    propVar[i]=Sval[i] / totVar;
  }
  PCAModel myModel=new PCAModel(Status.Done,0.0f,resKey,data,sdev,propVar,eigVec,0,ncomp,params);
  myModel.store();
  return myModel;
}
