{
  GLMParams temp=new GLMParams(Family.gaussian);
  GramMatrixFunc gramF=new GramMatrixFunc(data,temp,null);
  Gram gram=gramF.apply(job,data);
  Matrix myGram=new Matrix(gram.getXX());
  SingularValueDecomposition mySVD=myGram.svd();
  double[] Sval=mySVD.getSingularValues();
  int ncomp=Math.min(num_pc,Sval.length);
  final double[] sdev=new double[ncomp];
  for (int i=0; i < ncomp; i++)   sdev[i]=Math.sqrt(Sval[i]);
  Matrix eigV=mySVD.getV();
  int nfeat=eigV.getRowDimension();
  double[][] eigVsub=new double[ncomp][nfeat];
  for (int i=0; i < ncomp; i++) {
    eigVsub[i]=eigV.getMatrix(0,nfeat - 1,i,i).getColumnPackedCopy();
  }
  PCAParams params=new PCAParams(ncomp);
  PCAModel myModel=new PCAModel(Status.Done,0.0f,resKey,data,sdev,eigVsub,0,params);
  return myModel;
}
