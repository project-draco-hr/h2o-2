{
  ParserSetup.TypeInfo[] res=new ParserSetup.TypeInfo[_ncols];
  for (int i=0; i < res.length; ++i)   res[i]=new ParserSetup.TypeInfo();
  for (int i=0; i < _ncols; ++i) {
    if (_domains[i].size() <= 1 && _nnums[i] >= .2)     res[i]._type=ParserSetup.Coltype.NUM;
 else     if (_domains[i].size() > 2 && (double)_nstrings[i] / _nlines[i] >= .95) {
      res[i]._type=ParserSetup.Coltype.STR;
      res[i]._strongGuess=(double)_nstrings[i] / _nlines[i] >= .99;
    }
 else     if (_domains[i].size() == 2) {
      String[] domain=_domains[i].toArray(new String[2]);
      for (int j=0; j < domain.length; ++j)       domain[j]=domain[j].toUpperCase();
      Arrays.sort(domain);
      if (Arrays.deepEquals(domain,new String[]{"N","Y"}) || Arrays.deepEquals(domain,new String[]{"'N'","'Y'"}) || Arrays.deepEquals(domain,new String[]{"\"N\"","\"Y\""})|| Arrays.deepEquals(domain,new String[]{"NO","YES"})|| Arrays.deepEquals(domain,new String[]{"'NO'","'YES'"})|| Arrays.deepEquals(domain,new String[]{"\"NO\"","\"YES'"})|| Arrays.deepEquals(domain,new String[]{"F","T"})|| Arrays.deepEquals(domain,new String[]{"'F'","'T'"})|| Arrays.deepEquals(domain,new String[]{"\"F\"","\"T\""})|| Arrays.deepEquals(domain,new String[]{"FALSE","TRUE"})|| Arrays.deepEquals(domain,new String[]{"'FALSE'","'TRUE'"})|| Arrays.deepEquals(domain,new String[]{"\"FALSE\"","\"TRUE\""})) {
        res[i]._type=ParserSetup.Coltype.STR;
        res[i]._strongGuess=true;
        if (_nzeros[i] > 0 && _nzeros[i] + _nstrings[i] == _nlines[i])         res[i]._naStr=new ValueString("0");
      }
 else {
        if ((double)_nstrings[i] / _nlines[i] >= .95) {
          res[i]._type=ParserSetup.Coltype.STR;
          res[i]._strongGuess=(double)_nstrings[i] / _nlines[i] >= .99;
        }
 else         if (_nnums[i] > 0 && (double)_nnums[i] / _nlines[i] > .2)         res[i]._type=ParserSetup.Coltype.NUM;
      }
    }
  }
  return res;
}
