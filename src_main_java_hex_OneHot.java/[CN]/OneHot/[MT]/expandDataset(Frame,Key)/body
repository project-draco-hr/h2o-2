{
  ArrayList<Vec> nvecs=new ArrayList<Vec>();
  ArrayList<Vec> evecs=new ArrayList<Vec>();
  ArrayList<String> eNames=new ArrayList<String>();
  ArrayList<String> nNames=new ArrayList<String>();
  int[] offsets=new int[fr.numCols() + 1];
  Vec[] vecs=fr.vecs();
  int c=0;
  for (int i=0; i < fr.numCols(); i++) {
    if (vecs[i].isEnum()) {
      offsets[evecs.size()]=c;
      evecs.add(vecs[i]);
      String name=fr._names[i];
      c+=vecs[i]._domain.length;
      for (      String s : vecs[i]._domain)       eNames.add(name + "." + s);
    }
 else {
      nvecs.add(vecs[i]);
      nNames.add(fr._names[i]);
    }
  }
  offsets[evecs.size()]=c;
  if (evecs.isEmpty())   return fr;
  offsets=Arrays.copyOf(offsets,evecs.size() + 1);
  OneHot ss=new OneHot();
  ss._offsets=offsets;
  int l=offsets[evecs.size()];
  ss.doAll(l,evecs.toArray(new Vec[evecs.size()]));
  Frame fr2=ss.outputFrame(destkey,eNames.toArray(new String[eNames.size()]),new String[l][]);
  fr2.add(new Frame(nNames.toArray(new String[nNames.size()]),nvecs.toArray(new Vec[nvecs.size()])),false);
  return fr2;
}
