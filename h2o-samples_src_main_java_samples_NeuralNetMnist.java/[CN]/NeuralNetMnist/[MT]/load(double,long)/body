{
  assert(fraction > 0 && fraction <= 1);
  Frame trainf=TestUtil.parseFromH2OFolder("smalldata/mnist/train.csv.gz");
  Frame testf=TestUtil.parseFromH2OFolder("smalldata/mnist/test.csv.gz");
  if (fraction < 1) {
    System.out.println("Sampling " + fraction * 100 + "% of data with random seed: " + seed + ".");
    FrameSplit split=new FrameSplit();
    final double[] ratios={fraction,1 - fraction};
    trainf=split.splitFrame(trainf,ratios,seed)[0];
    testf=split.splitFrame(testf,ratios,seed)[0];
    if (false) {
      UKV.put(water.Key.make("train" + fraction),trainf);
      UKV.put(water.Key.make("test" + fraction),testf);
    }
  }
  train=trainf.vecs();
  test=testf.vecs();
  NeuralNet.reChunk(train);
}
