{
  String key=f.getName();
  key=key.substring(0,key.lastIndexOf('.'));
  byte[] kb=null;
  if ((key.length() <= 2) || (key.charAt(0) != '%') || (key.charAt(1) < '0')|| (key.charAt(1) > '9')) {
    byte[] nkb=new byte[key.length()];
    int j=0;
    for (int i=0; i < key.length(); ++i) {
      byte b=(byte)key.charAt(i);
      if (b == '%') {
switch (key.charAt(++i)) {
case '%':
          b='%';
        break;
case 'b':
      b='\\';
    break;
case 'c':
  b=':';
break;
case 'd':
b='.';
break;
case 's':
b='/';
break;
case 'z':
b='\0';
break;
default :
System.err.println("Invalid format of filename " + f.getName() + " at index "+ i);
}
}
nkb[j++]=b;
kb=new byte[j];
System.arraycopy(nkb,0,kb,0,j);
}
}
 else {
kb=new byte[(key.length() - 1) / 2];
int j=0;
for (int i=1; i < key.length(); i+=2) {
char b0=(char)(key.charAt(i + 0) - '0');
if (b0 > 9) b0+='0' + 10 - 'A';
char b1=(char)(key.charAt(i + 1) - '0');
if (b1 > 9) b1+='0' + 10 - 'A';
kb[j++]=(byte)((b0 << 4) | b1);
}
}
return Key.make(kb,decodeReplication(f));
}
