{
  StringBuilder sb=new StringBuilder();
  double error=Double.POSITIVE_INFINITY;
  if (auc != null) {
    assert(isClassifier());
    assert(nclasses() == 2);
    auc.actual=ftest;
    auc.vactual=vactual;
    auc.predict=fpreds;
    auc.vpredict=fpreds.vecs()[2];
    auc.threshold_criterion=AUC.ThresholdCriterion.maximum_F1;
    auc.invoke();
    auc.toASCII(sb);
    error=auc.err();
  }
  if (cm != null) {
    if (auc != null) {
      cm.cm=auc.cm();
    }
 else {
      cm.actual=ftest;
      cm.vactual=vactual;
      cm.predict=fpreds;
      cm.vpredict=fpreds.vecs()[0];
      cm.invoke();
      if (cm.cm == null || cm.cm.length <= max_conf_mat_size)       cm.toASCII(sb);
      error=isClassifier() ? new hex.ConfusionMatrix(cm.cm).err() : cm.mse;
    }
  }
  if (hr != null) {
    assert(isClassifier());
    hr.actual=ftest;
    hr.vactual=vactual;
    hr.predict=hitratio_fpreds;
    hr.invoke();
    hr.toASCII(sb);
  }
  if (printMe && sb.length() > 0) {
    Log.info("Scoring on " + label + " data:");
    for (    String s : sb.toString().split("\n"))     Log.info(s);
  }
  return error;
}
