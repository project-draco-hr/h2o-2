def log_network(self, initOnly=False):
    nioc = psutil.network_io_counters()
    niocSpotSentMBSec = ((nioc.bytes_sent - self.pollStats['bytes_sent']) / (1000000.0 * self.elapsedTime))
    niocSpotRecvMBSec = ((nioc.bytes_recv - self.pollStats['bytes_recv']) / (1000000.0 * self.elapsedTime))
    if (1 == 1):
        niocSpotDropIn = (nioc.dropin - self.pollStats['dropin'])
        niocSpotDropOut = (nioc.dropout - self.pollStats['dropout'])
        niocSpotErrIn = (nioc.errin - self.pollStats['errin'])
        niocSpotErrOut = (nioc.errout - self.pollStats['errout'])
    else:
        niocSpotDropIn = 0
        niocSpotDropOut = 0
        niocSpotErrIn = 0
        niocSpotErrOut = 0
    l = 'Network. Spot RecvMB/s: {:>6.2f} Spot SentMB/s: {:>6.2f} {!s} {!s} {!s} {!s}'.format(niocSpotRecvMBSec, niocSpotSentMBSec, niocSpotDropIn, niocSpotDropOut, niocSpotErrIn, niocSpotErrOut)
    if (not initOnly):
        logging.critical(l)
    self.save(nioc=nioc)
