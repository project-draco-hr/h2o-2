def test_GenParity1(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    for x in [1000]:
        shCmdString = (((('perl ' + h2o.find_file('syn_scripts/parity.pl')) + ' 128 4 ') + str(x)) + ' quad')
        h2o.spawn_cmd_and_wait('parity.pl', shCmdString.split(), 4)
        csvFilename = (('parity_128_4_' + str(x)) + '_quad.data')
    for trial in xrange(1, 5, 1):
        sys.stdout.write('.')
        sys.stdout.flush()
        csvFilename = (('parity_128_4_' + str(1000)) + '_quad.data')
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        put = h2o.nodes[0].put_file(csvPathname)
        parseKey = h2o.nodes[0].parse(put['key'])
        h2o.verboseprint('Trial', trial)
        start = time.time()
        cmd.runRFOnly(parseKey=parseKey, trees=1000, depth=2, timeoutSecs=600, retryDelaySecs=3)
        print 'RF #', trial, 'end on ', csvFilename, 'took', (time.time() - start), 'seconds'
