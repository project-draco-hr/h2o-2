def runGLM2Score(node=None, dataKey=None, modelKey=None, predictKey='Predict.hex', vactual='C1', vpredict=1, expectedAuc=0.5, timeoutSecs=200):
    predictKey = 'Predict.hex'
    start = time.time()
    predictResult = runPredict(data_key=dataKey, model_key=modelKey, destination_key=predictKey, timeoutSecs=timeoutSecs)
    resultAUC = h2o.nodes[0].generate_auc(thresholds=None, actual=dataKey, predict='Predict.hex', vactual=vactual, vpredict=vpredict)
    auc = resultAUC['AUC']
    h2o_util.assertApproxEqual(auc, expectedAuc, tol=0.15, msg=('actual auc: %s not close enough to %s' % (auc, expectedAuc)))
    predictCMResult = h2o.nodes[0].predict_confusion_matrix(actual=dataKey, predict=predictKey, vactual=vactual, vpredict='predict')
    cm = predictCMResult['cm']
    pctWrong = h2o_gbm.pp_cm_summary(cm)
    print '\nTest\n==========\n'
    print h2o_gbm.pp_cm(cm)
