def runRFOnly(node=None, parseKey=None, trees=5, timeoutSecs=20, retryDelaySecs=2, rfview=True, noise=None, **kwargs):
    if (not parseKey):
        raise Exception('No parsed key for RF specified')
    if (not node):
        node = h2o.nodes[0]
    h2o.verboseprint('runRFOnly parseKey:', parseKey)
    Key = parseKey['destination_key']
    rf = node.random_forest(Key, trees, timeoutSecs, **kwargs)
    data_key = rf['data_key']
    kwargs.pop('model_key', None)
    kwargs.pop('model_key', None)
    model_key = rf['model_key']
    rfCloud = rf['response']['h2o']
    kwargs.pop('ntree', None)
    ntree = rf['ntree']
    rfClass = rf['response_variable']
    rfViewResult = None
    if rfview:
        rfViewResult = runRFView(node, data_key, model_key, ntree, timeoutSecs, retryDelaySecs, noise=noise, **kwargs)
    return rfViewResult
