def infoFromSummary(summaryResult, noPrint=False, numCols=None, numRows=None):
    if (not summaryResult):
        raise Exception('summaryResult is empty for infoFromSummary')
    summaries = summaryResult['summaries']
    if ((1 == 0) and numCols and (len(summaries) != numCols)):
        raise Exception(('Expected numCols: %s cols in summary. Got %s' % (numCols, len(summaries))))
    coltypeList = []
    for column in summaries:
        colname = column['colname']
        coltype = column['type']
        nacnt = column['nacnt']
        stats = column['stats']
        stattype = stats['type']
        coltypeList.append(stattype)
        h2o_exec.checkForBadFP(nacnt, ('nacnt for colname: %s stattype: %s' % (colname, stattype)))
        if (stattype == 'Enum'):
            cardinality = stats['cardinality']
            h2o_exec.checkForBadFP(cardinality, ('cardinality for colname: %s stattype: %s' % (colname, stattype)))
        else:
            mean = stats['mean']
            sd = stats['sd']
            zeros = stats['zeros']
            mins = stats['mins']
            maxs = stats['maxs']
            pct = stats['pct']
            pctile = stats['pctile']
            h2o_exec.checkForBadFP(mean, ('mean for colname: %s stattype: %s' % (colname, stattype)), nanOkay=True, infOkay=True)
            h2o_exec.checkForBadFP(sd, ('sd for colname: %s stattype %s' % (colname, stattype)), nanOkay=True, infOkay=True)
            h2o_exec.checkForBadFP(zeros, ('zeros for colname: %s stattype %s' % (colname, stattype)))
            if (numRows and (nacnt == numRows)):
                print ('%s is all NAs with type: %s. no checking for min/max/mean/sigma' % (colname, stattype))
            else:
                if (not mins):
                    print dump_json(column)
                    print ('Why is min[] empty for a %s col (%s) ? %s %s %s' % (mins, stattype, colname, nacnt, numRows))
                if (not maxs):
                    print dump_json(column)
                    print ('Why is max[] empty for a %s col? (%s) ? %s %s %s' % (maxs, stattype, colname, nacnt, numRows))
        hstart = column['hstart']
        hstep = column['hstep']
        hbrk = column['hbrk']
        hcnt = column['hcnt']
        if (not noPrint):
            print '\n\n************************'
            print 'colname:', colname
            print 'coltype:', coltype
            print 'nacnt:', nacnt
            print 'stattype:', stattype
            if (stattype == 'Enum'):
                print 'cardinality:', cardinality
            else:
                print 'mean:', mean
                print 'sd:', sd
                print 'zeros:', zeros
                print 'mins:', mins
                print 'maxs:', maxs
                print 'pct:', pct
                print 'pctile:', pctile
            print 'hstart:', hstart
            print 'hstep:', hstep
            print 'hbrk:', hbrk
            print 'hcnt:', hcnt
    return coltypeList
