{
  final KMeans job=new KMeans(dest,k,cols);
  int cols2[]=Arrays.copyOf(cols,cols.length + 1);
  cols2[cols.length]=-1;
  final KMeansModel res=new KMeansModel(job.dest(),cols2,va._key);
  res._normalized=normalize;
  res._randSeed=randSeed;
  UKV.put(job.dest(),res);
  final int[] filteredCols=res.columnMapping(va.colNames());
  H2OCountedCompleter task=new H2OCountedCompleter(){
    @Override public void compute2(){
      job.run(res,va,k,epsilon,filteredCols);
      tryComplete();
    }
  }
;
  H2O.submitTask(job.start(task));
  return job;
}
