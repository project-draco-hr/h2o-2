{
  double[][] res=new double[k][];
  res[0]=points[0];
  int count=1;
  ClusterDist cd=new ClusterDist();
switch (init) {
case PlusPlus:
{
      while (count < res.length) {
        double sum=0;
        for (int i=0; i < points.length; i++)         sum+=minSqr(res,points[i],cd,count);
        for (int i=0; i < points.length; i++) {
          if (minSqr(res,points[i],cd,count) >= rand.nextDouble() * sum) {
            res[count++]=points[i];
            break;
          }
        }
      }
      break;
    }
case Furthest:
{
    while (count < res.length) {
      double max=0;
      int index=0;
      for (int i=0; i < points.length; i++) {
        double sqr=minSqr(res,points[i],cd,count);
        if (sqr > max) {
          max=sqr;
          index=i;
        }
      }
      res[count++]=points[index];
    }
    break;
  }
default :
throw new IllegalStateException();
}
return res;
}
