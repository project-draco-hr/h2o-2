def parse_args(argv):
    global g_base_port
    global g_num_clouds
    global g_wipe_test_state
    global g_wipe_output_dir
    global g_test_to_run
    global g_test_list_file
    global g_test_group
    global g_use_cloud
    global g_use_ip
    global g_use_port
    global g_no_run
    i = 1
    while (i < len(argv)):
        s = argv[i]
        if (s == '--baseport'):
            i += 1
            if (i > len(argv)):
                usage()
            g_base_port = int(argv[i])
        elif (s == '--numclouds'):
            i += 1
            if (i > len(argv)):
                usage()
            g_num_clouds = int(argv[i])
        elif (s == '--wipeall'):
            g_wipe_test_state = True
            g_wipe_output_dir = True
        elif (s == '--wipe'):
            g_wipe_output_dir = True
        elif (s == '--test'):
            i += 1
            if (i > len(argv)):
                usage()
            g_test_to_run = RUnitRunner.find_test(argv[i])
        elif (s == '--testlist'):
            i += 1
            if (i > len(argv)):
                usage()
            g_test_list_file = argv[i]
        elif (s == '--testgroup'):
            i += 1
            if (i > len(argv)):
                usage()
            g_test_group = argv[i]
        elif (s == '--usecloud'):
            i += 1
            if (i > len(argv)):
                usage()
            s = argv[i]
            m = re.match('(\\S+):([1-9][0-9]*)', s)
            if (m is None):
                unknown_arg(s)
            g_use_cloud = True
            g_use_ip = m.group(1)
            port_string = m.group(2)
            g_use_port = int(port_string)
        elif (s == '--norun'):
            g_no_run = True
        elif ((s == '-h') or (s == '--h') or (s == '-help') or (s == '--help')):
            usage()
        else:
            unknown_arg(s)
        i += 1
