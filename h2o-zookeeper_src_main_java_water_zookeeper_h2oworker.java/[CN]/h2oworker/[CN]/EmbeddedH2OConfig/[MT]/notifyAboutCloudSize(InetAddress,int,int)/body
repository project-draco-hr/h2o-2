{
  _embeddedWebServerIp=ip.getHostAddress();
  _embeddedWebServerPort=port;
  System.out.printf("EmbeddedH2OConfig: notifyAboutCloudSize called (%s, %d, %d)\n",ip.getHostAddress(),port,size);
  if (size == _numNodes) {
    System.out.printf("EmbeddedH2OConfig: notifyAboutCloudSize attempting to claim master...\n");
    ZooKeeper z=null;
    try {
      z=ZooKeeperFactory.makeZk(_zk);
      MasterPayload mp=new MasterPayload();
      mp.ip=ip.getHostAddress();
      mp.port=port;
      mp.pid=getProcessId();
      byte[] payload;
      payload=mp.toPayload();
      z.create(_zkroot + "/master",payload,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);
      System.out.printf("EmbeddedH2OConfig: notifyAboutCloudSize claimed master\n");
    }
 catch (    KeeperException.NodeExistsException e) {
      System.out.printf("EmbeddedH2OConfig: notifyAboutCloudSize lost claiming race to another node (this is normal)\n");
    }
catch (    Exception e) {
      e.printStackTrace();
      System.exit(1);
    }
 finally {
      if (z != null) {
        try {
          z.close();
        }
 catch (        Exception xe) {
        }
      }
    }
  }
}
