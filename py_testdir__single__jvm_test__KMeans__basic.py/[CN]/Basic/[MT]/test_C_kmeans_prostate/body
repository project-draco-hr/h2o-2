def test_C_kmeans_prostate(self):
    csvFilename = 'prostate.csv'
    print '\nStarting', csvFilename
    parseResult = h2i.import_parse(bucket='smalldata', path=('logreg/' + csvFilename), schema='put', hex_key=(csvFilename + '.hex'))
    expected = [([63.0, 0.384, 67.696, 1.088, 2.32, 1.168, 16.680799999999998, 15.549599999999995, 6.664], 125, 267074.35439999995), ([188.5, 0.47619047619047616, 65.26190476190476, 1.1031746031746033, 2.3174603174603177, 1.0873015873015872, 16.17603174603175, 15.611825396825397, 6.436507936507937], 126, 257264.28207380953), ([316.0, 0.3488372093023256, 65.1937984496124, 1.069767441860465, 2.1782945736434107, 1.069767441860465, 13.426356589147293, 16.264496124031005, 6.062015503875969], 129, 278906.3168310078)]
    allowedDelta = (0.01, 0.01, 0.01)
    for trial in range(2):
        kwargs = {'k': 3, 'initialization': 'Furthest', 'cols': None, 'destination_key': 'prostate_k.hex', 'max_iter': 50, 'seed': 265211114317615310, }
        kmeans = h2o_cmd.runKMeans(parseResult=parseResult, timeoutSecs=5, **kwargs)
        (centers, tupleResultList) = h2o_kmeans.bigCheckResults(self, kmeans, csvFilename, parseResult, 'd', **kwargs)
        h2o_kmeans.compareResultsToExpected(self, tupleResultList, expected, allowedDelta, trial=trial)
