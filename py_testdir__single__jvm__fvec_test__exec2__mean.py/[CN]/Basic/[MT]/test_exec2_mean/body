def test_exec2_mean(self):
    print 'https://0xdata.atlassian.net/browse/PUB-228'
    bucket = 'smalldata'
    csvPathname = 'iris/iris2.csv'
    hexKey = 'r.hex'
    parseResult = h2i.import_parse(bucket=bucket, path=csvPathname, schema='put', hex_key=hexKey)
    execExprList = ['x=r.hex[,1]; rcnt=nrow(x)-sum(is.na(x))', 'x=r.hex[,1]; total=sum(ifelse(is.na(x),0,x)); rcnt=nrow(x)-sum(is.na(x))', 'x=r.hex[,1]; total=sum(ifelse(is.na(x),0,x)); rcnt=nrow(x)-sum(is.na(x)); mean=total / rcnt', 'x=r.hex[,1]; total=sum(ifelse(is.na(x),0,x)); rcnt=nrow(x)-sum(is.na(x)); mean=total / rcnt; x=ifelse(is.na(x),mean,x)', ((((('apply( ' + 'r.hex,2,function(x){total=sum(ifelse(is.na(x),0,x)); ') + 'rcnt=nrow(x)-sum(is.na(x)); ') + 'mean=total / rcnt; ') + 'ifelse(is.na(x),mean,x)} ') + ')')]
    for execExpr in execExprList:
        start = time.time()
        h2e.exec_expr(execExpr=execExpr, timeoutSecs=30)
        print 'exec end on ', 'operators', 'took', (time.time() - start), 'seconds'
        h2o.check_sandbox_for_errors()
