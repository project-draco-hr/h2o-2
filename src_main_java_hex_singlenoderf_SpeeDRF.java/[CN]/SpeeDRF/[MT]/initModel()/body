{
  try {
    source.read_lock(self());
    float[] samples=new float[(int)(response.max() - response.min() + 1)];
    for (int i=0; i < samples.length; ++i)     samples[i]=(float)67.0;
    Frame train=FrameTask.DataInfo.prepareFrame(source,response,ignored_cols,false,false,false);
    SpeeDRFModel model=new SpeeDRFModel(dest(),self(),source._key,train,response,new Key[0],seed);
    model.bin_limit=bin_limit;
    if (mtry == -1) {
      model.mtry=(int)Math.floor(Math.sqrt(source.numCols()));
    }
    model.features=source.numCols();
    model.sampling_strategy=Sampling.Strategy.RANDOM;
    model.sample=(float)sample;
    model.weights=null;
    model.time=0;
    model.total_trees=num_trees;
    model.strata_samples=samples;
    model.depth=max_depth;
    model.oobee=oobee;
    return model;
  }
  finally {
    source.unlock(self());
  }
}
