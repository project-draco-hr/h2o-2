{
  super.queryArgumentValueSet(arg,inputArgs);
  if (arg._name.equals("classification")) {
    arg.setRefreshOnChange();
  }
  if (arg._name.equals("balance_classes")) {
    arg.setRefreshOnChange();
    if (regression) {
      arg.disable("Class balancing is only for classification.");
    }
  }
  if (arg._name.equals("classification")) {
    regression=!this.classification;
  }
  if (arg._name.equals("select_stat_type")) {
    if (regression) {
      arg.disable("Minimize MSE for regression.");
    }
  }
  if (arg._name.equals("class_weights")) {
    if (source == null || response == null) {
      arg.disable("Requires source and response to be specified.");
    }
    if (regression) {
      arg.disable("No class weights for regression.");
    }
  }
  if (arg._name.equals("sampling_strategy")) {
    arg.setRefreshOnChange();
    if (regression) {
      arg.disable("Random Sampling for regression trees.");
    }
  }
  if (arg._name.equals("strata_samples")) {
    if (sampling_strategy != Sampling.Strategy.STRATIFIED_LOCAL) {
      arg.disable("No Strata for Random sampling.");
    }
    if (regression) {
      arg.disable("No strata for regression.");
    }
  }
  if (arg._name.equals("importance")) {
    if (regression) {
      arg.disable("Variable Importance not supported in SpeeDRF regression.");
    }
  }
  if (classification) {
    if (arg._name.equals("max_after_balance_size") && !balance_classes) {
      arg.disable("Requires balance classes flag to be set.",inputArgs);
    }
  }
}
