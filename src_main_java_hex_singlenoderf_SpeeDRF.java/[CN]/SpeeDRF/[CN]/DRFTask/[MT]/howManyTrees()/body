{
  Frame fr=_rfmodel.fr;
  final long num_chunks=fr.anyVec().nChunks();
  final int num_nodes=H2O.CLOUD.size();
  HashSet<H2ONode> nodes=new HashSet<H2ONode>();
  for (int i=0; i < num_chunks; i++) {
    nodes.add(fr.anyVec().chunkKey(i).home_node());
    if (nodes.size() == num_nodes)     break;
  }
  H2ONode[] array=nodes.toArray(new H2ONode[nodes.size()]);
  Arrays.sort(array);
  int ntrees=_params.num_trees / nodes.size();
  if (Arrays.binarySearch(array,H2O.SELF) < _params.num_trees - ntrees * nodes.size())   ++ntrees;
  return ntrees;
}
