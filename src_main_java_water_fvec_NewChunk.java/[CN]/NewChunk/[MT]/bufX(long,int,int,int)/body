{
  byte[] bs=new byte[(_len << log) + off];
  for (int i=0; i < _len; i++) {
    int x=_xs[i] - scale;
    long le=x >= 0 ? _ls[i] * DParseTask.pow10i(x) : _ls[i] / DParseTask.pow10i(-x);
    le-=bias;
switch (log) {
case 0:
      bs[i + off]=(byte)le;
    break;
case 1:
  UDP.set2(bs,(i << 1) + off,(short)le);
break;
case 2:
UDP.set4(bs,(i << 2) + off,(int)le);
break;
case 3:
UDP.set8(bs,(i << 3) + off,le);
break;
default :
H2O.fail();
}
}
return bs;
}
