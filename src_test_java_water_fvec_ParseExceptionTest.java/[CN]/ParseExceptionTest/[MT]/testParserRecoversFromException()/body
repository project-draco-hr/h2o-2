{
  Throwable ex=null;
  Key fkey0=null, fkey1=null, fkey2=null, okey=null;
  CustomParser.ParserSetup setup=null;
  try {
    okey=Key.make("junk.hex");
    fkey0=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_0.csv"));
    fkey1=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_1.csv"));
    fkey2=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_2.csv"));
    setup=new GuessSetup.GuessSetupTsk(new CustomParser.ParserSetup(),true).invoke(fkey0,fkey1,fkey2)._gSetup._setup;
    new Break(fkey1).invokeOnAllNodes();
    ParseDataset2.parse(okey,new Key[]{fkey0,fkey1,fkey2},setup,true);
  }
 catch (  Throwable e2) {
    ex=e2;
  }
  assertTrue("Parse should throw an NPE",ex != null);
  assertTrue("All input & output keys not removed",DKV.get(fkey0) == null);
  assertTrue("All input & output keys not removed",DKV.get(fkey1) == null);
  assertTrue("All input & output keys not removed",DKV.get(fkey2) == null);
  assertTrue("All input & output keys not removed",DKV.get(okey) == null);
  okey=Key.make("junk.hex");
  fkey0=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_0.csv"));
  fkey1=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_1.csv"));
  fkey2=NFSFileVec.make(new File("smalldata/parse_folder_test/prostate_2.csv"));
  Frame fr=ParseDataset2.parse(okey,new Key[]{fkey0,fkey1,fkey2});
  fr.delete();
  assertTrue("All input & output keys not removed",DKV.get(fkey0) == null);
  assertTrue("All input & output keys not removed",DKV.get(fkey1) == null);
  assertTrue("All input & output keys not removed",DKV.get(fkey2) == null);
  assertTrue("All input & output keys not removed",DKV.get(okey) == null);
}
