{
  sums=new double[clusters.length][chunks.length];
  counts=new int[clusters.length];
  for (int row=0; row < chunks[0]._len; row++) {
    int nearest=-1;
    double minSqr=Double.MAX_VALUE;
    for (int cluster=0; cluster < clusters.length; cluster++) {
      double sqr=0;
      for (int column=0; column < chunks.length; column++) {
        double delta=chunks[column].at0(row) - clusters[cluster][column];
        sqr+=delta * delta;
      }
      if (sqr < minSqr) {
        nearest=cluster;
        minSqr=sqr;
      }
    }
    error+=minSqr;
    for (int column=0; column < chunks.length; column++)     sums[nearest][column]+=chunks[column].at0(row);
    counts[nearest]++;
  }
  clusters=null;
}
