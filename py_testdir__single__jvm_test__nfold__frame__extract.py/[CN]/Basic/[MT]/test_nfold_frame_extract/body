def test_nfold_frame_extract(self):
    h2o.beta_features = True
    csvFilename = 'covtype.data'
    csvPathname = ('standard/' + csvFilename)
    hex_key = 'covtype.hex'
    parseResult = h2i.import_parse(bucket='home-0xdiag-datasets', path=csvPathname, hex_key=hex_key, schema='local', timeoutSecs=10)
    print 'Just nfold_frame_extract away and see if anything blows up'
    splitMe = hex_key
    inspect = h2o_cmd.runInspect(key=splitMe)
    origNumRows = inspect['numRows']
    origNumCols = inspect['numCols']
    for s in range(20):
        inspect = h2o_cmd.runInspect(key=splitMe)
        numRows = inspect['numRows']
        numCols = inspect['numCols']
        fs = h2o.nodes[0].nfold_frame_extract(source=splitMe, nfolds=2, afold=random.randint(0, 1))
        print 'fs', h2o.dump_json(fs)
        split0_key = fs['split_keys'][0]
        split1_key = fs['split_keys'][1]
        split0_rows = fs['split_rows'][0]
        split1_rows = fs['split_rows'][1]
        print 'Iteration', s, 'split0_rows:', split0_rows, 'split1_rows:', split1_rows
        splitMe = split0_key
        if (split0_rows <= 2):
            break
        print 'Iteration', s
