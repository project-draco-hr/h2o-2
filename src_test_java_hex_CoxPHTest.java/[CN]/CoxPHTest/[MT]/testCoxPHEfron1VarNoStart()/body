{
  Key parsed=Key.make("coxph_efron_test_data_parsed");
  Key modelKey=Key.make("coxph_efron_test");
  CoxPHModel model=null;
  Frame fr=null;
  try {
    fr=getFrameForFile(parsed,"smalldata/heart.csv");
    CoxPH job=new CoxPH();
    job.destination_key=modelKey;
    job.source=fr;
    job.use_start_column=false;
    job.start_column=fr.vec("start");
    job.stop_column=fr.vec("stop");
    job.event_column=fr.vec("event");
    job.x_column=fr.vec("age");
    job.ties=CoxPHTies.efron;
    job.fork();
    job.get();
    model=DKV.get(modelKey).get();
    testHTML(model);
    assertEquals(model.coef,0.0289468187293998,1e-8);
    assertEquals(model.var_coef,0.000210975113029285,1e-8);
    assertEquals(model.null_loglik,-314.148170059513,1e-8);
    assertEquals(model.loglik,-311.946958322919,1e-8);
    assertEquals(model.score_test,3.97716015008595,1e-8);
    assert(model.iter >= 1);
    assertEquals(model.x_mean,-2.48402655078554,1e-8);
    assertEquals(model.n,172);
    assertEquals(model.total_event,75);
    assertEquals(model.wald_test,3.97164529276219,1e-8);
  }
  finally {
    if (fr != null)     fr.delete();
    if (model != null)     model.delete();
  }
}
