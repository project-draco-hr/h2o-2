def test_loop_random_param_covtype(self):
    start = time.time()
    csvPathname = h2o.find_dataset('UCI/UCI-large/covtype/covtype.data')
    parseKey = h2o_cmd.parseFile(csvPathname=csvPathname)
    print 'upload/parse end on ', csvPathname, 'took', (time.time() - start), 'seconds'
    kwargs = define_params()
    for trial in range(3):
        timeoutSecs = (60 + (kwargs['n_folds'] * 20))
        timeoutSecs = max(timeoutSecs, (8 * (kwargs['max_iter'] + 1)))
        start = time.time()
        glm = h2o_cmd.runGLMOnly(timeoutSecs=timeoutSecs, parseKey=parseKey, **kwargs)
        print 'glm end on ', csvPathname, 'took', (time.time() - start), 'seconds'
        h2o_glm.simpleCheckGLM(self, glm, None, **kwargs)
        print 'Trial #', trial, 'completed\n'
