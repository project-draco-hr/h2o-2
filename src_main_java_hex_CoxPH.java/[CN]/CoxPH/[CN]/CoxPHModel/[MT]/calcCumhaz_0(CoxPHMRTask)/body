{
switch (parameters.ties) {
case efron:
    for (int t=0; t < cumhaz_0.length; t++) {
      cumhaz_0[t]=0;
      var_cumhaz_1[t]=0;
      var_cumhaz_2[t]=0;
      for (long e=0; e < coxMR.countEvents[t]; e++) {
        double frac=((double)e) / ((double)coxMR.countEvents[t]);
        double haz=1 / (coxMR.rcumsumRisk[t] - frac * coxMR.sumRiskEvents[t]);
        cumhaz_0[t]+=haz;
        var_cumhaz_1[t]+=haz * haz;
        var_cumhaz_2[t]+=(coxMR.rcumsumXRisk[t] - frac * coxMR.sumXRiskEvents[t]) * haz * haz;
      }
    }
  break;
case breslow:
for (int t=0; t < cumhaz_0.length; t++) {
  cumhaz_0[t]=coxMR.countEvents[t] / coxMR.rcumsumRisk[t];
  var_cumhaz_1[t]=coxMR.countEvents[t] / (coxMR.rcumsumRisk[t] * coxMR.rcumsumRisk[t]);
  var_cumhaz_2[t]=(coxMR.rcumsumXRisk[t] / coxMR.rcumsumRisk[t]) * cumhaz_0[t];
}
break;
default :
throw new IllegalArgumentException("ties method must be either efron or breslow");
}
for (int t=1; t < cumhaz_0.length; t++) {
cumhaz_0[t]=cumhaz_0[t - 1] + cumhaz_0[t];
var_cumhaz_1[t]=var_cumhaz_1[t - 1] + var_cumhaz_1[t];
var_cumhaz_2[t]=var_cumhaz_2[t - 1] + var_cumhaz_2[t];
}
}
