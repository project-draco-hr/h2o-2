{
  if (Double.isNaN(x_new))   x_new=x_mean;
  int n_time=time.length;
  Vec[] vecs=Vec.makeNewCons((long)n_time,4,0,null);
  Vec timevec=vecs[0];
  Vec cumhaz=vecs[1];
  Vec se_cumhaz=vecs[2];
  Vec surv=vecs[3];
  double x_centered=x_new - x_mean;
  double risk_new=Math.exp(coef * x_centered);
  for (int t=0; t < n_time; t++) {
    double gamma=x_centered * cumhaz_0[t] - var_cumhaz_2[t];
    double cumhaz_1=risk_new * cumhaz_0[t];
    timevec.set(t,time[t]);
    cumhaz.set(t,cumhaz_1);
    se_cumhaz.set(t,risk_new * Math.sqrt(var_cumhaz_1[t] + (gamma * var_coef * gamma)));
    surv.set(t,Math.exp(-cumhaz_1));
  }
  Frame fr=new Frame(key,new String[]{"time","cumhaz","se_cumhaz","surv"},vecs);
  Futures fs=new Futures();
  DKV.put(key,fr,fs);
  fs.blockForPending();
  return fr;
}
