{
  final int n_coef=_beta.length;
  countRiskSet=MemoryManager.malloc8(_n_time);
  countCensored=MemoryManager.malloc8(_n_time);
  countEvents=MemoryManager.malloc8(_n_time);
  sumRiskEvents=MemoryManager.malloc8d(_n_time);
  sumLogRiskEvents=MemoryManager.malloc8d(_n_time);
  rcumsumRisk=MemoryManager.malloc8d(_n_time);
  sumXEvents=new double[n_coef][];
  sumXRiskEvents=new double[n_coef][];
  rcumsumXRisk=new double[n_coef][];
  sumXXRiskEvents=new double[n_coef][n_coef][];
  rcumsumXXRisk=new double[n_coef][n_coef][];
  for (int j=0; j < n_coef; j++) {
    sumXEvents[j]=MemoryManager.malloc8d(_n_time);
    sumXRiskEvents[j]=MemoryManager.malloc8d(_n_time);
    rcumsumXRisk[j]=MemoryManager.malloc8d(_n_time);
    for (int k=0; k < n_coef; k++) {
      sumXXRiskEvents[j][k]=MemoryManager.malloc8d(_n_time);
      rcumsumXXRisk[j][k]=MemoryManager.malloc8d(_n_time);
    }
  }
}
