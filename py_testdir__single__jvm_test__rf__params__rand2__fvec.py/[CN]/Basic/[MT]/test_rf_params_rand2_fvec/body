def test_rf_params_rand2_fvec(self):
    h2o.beta_features = True
    csvPathname = 'standard/covtype.data'
    hex_key = 'covtype.data.hex'
    for trial in range(2):
        params = {'ntrees': 13, 'mtries': 7, 'balance_classes': 0, 'importance': 0, }
        colX = h2o_rf.pickRandRfParams(paramDict, params)
        if (('cols' in params) and params['cols']):
            pass
        elif (('ignored_cols_by_name' in params) and params['ignored_cols_by_name']):
            params['mtries'] = random.randint(1, 53)
        else:
            params['mtries'] = random.randint(1, 54)
        kwargs = params.copy()
        timeoutSecs = (30 + ((kwargs['ntrees'] * 80) * max(1, (kwargs['mtries'] / 60))))
        start = time.time()
        parseResult = h2i.import_parse(bucket='home-0xdiag-datasets', path=csvPathname, schema='put', hex_key=hex_key)
        h2o_cmd.runRF(parseResult=parseResult, timeoutSecs=timeoutSecs, retryDelaySecs=1, **kwargs)
        elapsed = (time.time() - start)
        print 'Trial #', trial, 'completed in', elapsed, 'seconds.', ('%d pct. of timeout' % ((elapsed * 100) / timeoutSecs))
