def test_rf_tnc3_fvec(self):
    csvPathname = 'tnc3.csv'
    print ('\n' + csvPathname)
    hex_key = 'tnc3.hex'
    parseResult = h2i.import_parse(bucket='smalldata', path=csvPathname, hex_key=hex_key, schema='put', timeoutSecs=10, header=1)
    print "Parse result['Key']:", parseResult['destination_key']
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    h2b.browseJsonHistoryAsUrlLastMatch('Inspect')
    if (1 == 1):
        lenNodes = len(h2o.nodes)
        colResultList = h2e.exec_expr_list_across_cols(lenNodes, numExprList, hex_key, maxCol=10, incrementingResult=False, timeoutSecs=10)
        print '\ncolResultList after num swap', colResultList
    if (1 == 1):
        print "\nWe're not CM data getting back from RFView.json that we can check!. so look at the browser"
        print 'The good case with ignore="boat,body"'
        rfv = h2o_cmd.runRF(parseResult=parseResult, trees=5, timeoutSecs=10, ignored_cols_by_name='boat,body')
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    h2b.browseJsonHistoryAsUrlLastMatch('RFView')
    if (1 == 0):
        colResultList = h2e.exec_expr_list_across_cols(lenNodes, charExprList, hex_key, maxCol=10, incrementingResult=False, timeoutSecs=10)
        print '\ncolResultList after char swap', colResultList
    if (1 == 1):
        print '\nNow the bad case (no ignore)'
        rfv = h2o_cmd.runRF(parseResult=parseResult, trees=5, timeoutSecs=10)
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    h2b.browseJsonHistoryAsUrlLastMatch('RFView')
