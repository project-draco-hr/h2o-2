def test_GLM2_tnc3_10(self):
    csvFilename = 'tnc3_10.csv'
    print ('\n' + csvFilename)
    hex_key = 'tnc3.hex'
    parseResult = h2i.import_parse(bucket='smalldata', path=csvFilename, schema='put', hex_key=hex_key, timeoutSecs=10)
    print "Parse result['Key']:", parseResult['destination_key']
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    if (1 == 0):
        lenNodes = len(h2o.nodes)
        colResultList = h2e.exec_expr_list_across_cols(lenNodes, numExprList, hex_key, maxCol=10, incrementingResult=False, timeoutSecs=10)
        print '\ncolResultList after num swap', colResultList
    if (1 == 1):
        start = time.time()
        kwargs = {'response': 13, 'n_folds': 6, }
        glm = h2o_cmd.runGLM(parseResult=parseResult, timeoutSecs=300, **kwargs)
        h2o_glm.simpleCheckGLM(self, glm, None, **kwargs)
        print 'glm end on ', csvFilename, 'took', (time.time() - start), 'seconds'
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    if (1 == 0):
        colResultList = h2e.exec_expr_list_across_cols(lenNodes, charExprList, hex_key, maxCol=10, incrementingResult=False, timeoutSecs=10)
        print '\ncolResultList after char swap', colResultList
    if (1 == 1):
        start = time.time()
        kwargs = {'response': 13, 'n_folds': 6, }
        glm = h2o_cmd.runGLM(parseResult=parseResult, timeoutSecs=300, **kwargs)
        h2o_glm.simpleCheckGLM(self, glm, None, **kwargs)
        print 'glm end on ', csvFilename, 'took', (time.time() - start), 'seconds'
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
