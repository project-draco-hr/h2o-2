{
  water.ModelMetrics metrics=water.ModelMetrics.getFromDKV(score_model,frame);
  if (null == metrics) {
    water.util.Log.info("Cache miss: computing ModelMetrics. . .");
    long before=System.currentTimeMillis();
    Frame predictions=score_model.score(frame,true);
    long after=System.currentTimeMillis();
    ConfusionMatrix cm=new ConfusionMatrix();
    AUC auc=null;
    HitRatio hr=null;
    if (score_model.isClassifier()) {
      auc=new AUC();
      score_model.calcError(frame,frame.vec(score_model.responseName()),predictions,predictions,"Prediction error:",true,20,cm,auc,hr);
    }
 else {
      score_model.calcError(frame,frame.vec(score_model.responseName()),predictions,predictions,"Prediction error:",true,20,cm,null,null);
    }
    metrics=new water.ModelMetrics(score_model.getUniqueId(),score_model.getModelCategory(),frame.getUniqueId(),after - before,after,auc,cm);
    metrics.putInDKV();
  }
 else {
    water.util.Log.info("using ModelMetrics from the cache. . .");
  }
  JsonObject metricsJson=metrics.toJSON();
  JsonArray metricsArray=new JsonArray();
  metricsArray.add(metricsJson);
  JsonObject result=new JsonObject();
  result.add("metrics",metricsArray);
  return Response.done(result);
}
