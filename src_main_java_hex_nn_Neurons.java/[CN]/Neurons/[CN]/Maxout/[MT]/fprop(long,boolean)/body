{
  if (dropout != null && training) {
    dropout.fillBytes(seed);
  }
  double max=0;
  for (int o=0; o < _a.length; o++) {
    _a[o]=0;
    if (!training || (dropout != null && dropout.unit_active(o))) {
      final int off=o * _previous._a.length;
      _a[o]=Double.NEGATIVE_INFINITY;
      for (int i=0; i < _previous._a.length; i++)       _a[o]=Math.max(_a[o],_w[off + i] * _previous._a[i]);
      _a[o]+=_b[o];
      if (!training)       _a[o]*=.5f;
      if (max < _a[o])       max=_a[o];
    }
  }
  if (max > 1)   for (int o=0; o < _a.length; o++)   _a[o]/=max;
}
