{
  double max=Double.NEGATIVE_INFINITY;
  for (int o=0; o < _a.length; o++) {
    _a[o]=0;
    final int off=o * _previous._a.length;
    for (int i=0; i < _previous._a.length; i++)     _a[o]+=_w[off + i] * _previous._a[i];
    _a[o]+=_b[o];
    if (max < _a[o])     max=_a[o];
  }
  double scale=0;
  for (int o=0; o < _a.length; o++) {
    _a[o]=Math.exp(_a[o] - max);
    scale+=_a[o];
  }
  for (int o=0; o < _a.length; o++) {
    if (Double.isNaN(_a[o]))     throw new RuntimeException("Numerical instability, predicted NaN.");
    _a[o]/=scale;
  }
}
