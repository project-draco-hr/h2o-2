{
  double r2=0;
  final int off=u * _previous._a.length;
  for (int i=0; i < _previous._a.length; i++) {
    int w=off + i;
    if (_previous._e != null)     _previous._e[i]+=g * _w[w];
    double d=g * _previous._a[i] - _w[w] * l2 - Math.signum(_w[w]) * l1;
    if (_wm != null) {
      _wm[w]*=m;
      _wm[w]+=d;
      d=_wm[w];
    }
    _w[w]+=r * d;
    if (max_w2 != Double.POSITIVE_INFINITY)     r2+=_w[w] * _w[w];
  }
  if (max_w2 != Double.POSITIVE_INFINITY && r2 > max_w2) {
    final double scale=Math.sqrt(max_w2 / r2);
    for (int i=0; i < _previous._a.length; i++)     _w[off + i]*=scale;
  }
  double d=g;
  if (_bm != null) {
    _bm[u]*=m;
    _bm[u]+=d;
    d=_bm[u];
  }
  _b[u]+=r * d;
}
