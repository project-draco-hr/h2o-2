def test_NOPASS_exec2_function_phrases(self):
    if DO_IRIS:
        bucket = 'smalldata'
        csvPathname = 'iris/iris2.csv'
    else:
        bucket = 'home-0xdiag-datasets'
        csvPathname = 'standard/covtype.data'
    hexKey = 'i.hex'
    parseResult = h2i.import_parse(bucket=bucket, path=csvPathname, schema='put', hex_key=hexKey)
    exprList = []
    bigExprList = []
    while (len(exprList) != 500):
        expr = (random.choice(phrases) + ' ;')
        exprList.append(expr)
    for (resultKey, execExpr) in initList:
        execExpr = (('func1 = function(x,y,z,rhex){ a=' + execExpr) + ' }')
        h2e.exec_expr(h2o.nodes[0], execExpr, resultKey=resultKey, timeoutSecs=4)
    for execExpr in exprList:
        execExpr = (('func2 = function(x,y,z,rhex){ a=' + execExpr) + ' }')
        h2e.exec_expr(h2o.nodes[0], execExpr, resultKey=None, timeoutSecs=4)
        execExpr = 'func2(0,0,0,i.hex)'
        h2e.exec_expr(h2o.nodes[0], execExpr, resultKey=None, timeoutSecs=4)
    for j in range(50):
        execExpr = ((('a=' + random.choice(exprList)) + 'b=') + random.choice(exprList))
        execExpr = (('func3 = function(x,y,z,rhex){ ' + execExpr) + ' }')
        h2e.exec_expr(h2o.nodes[0], execExpr, resultKey=None, timeoutSecs=4)
        execExpr = 'func3(0,0,0,i.hex)'
        h2e.exec_expr(h2o.nodes[0], execExpr, resultKey=None, timeoutSecs=4)
    for j in range(50):
        execExpr = ((((('a=' + random.choice(exprList)) + 'b=') + random.choice(exprList)) + 'd=') + random.choice(exprList))
        execExpr = (('func4 = function(x,y,z,rhex){ ' + execExpr) + ' }')
        h2e.exec_expr(h2o.nodes[0], execExpr, resultKey=None, timeoutSecs=4)
        execExpr = 'func4(0,0,0,i.hex)'
        h2e.exec_expr(h2o.nodes[0], execExpr, resultKey=None, timeoutSecs=4)
