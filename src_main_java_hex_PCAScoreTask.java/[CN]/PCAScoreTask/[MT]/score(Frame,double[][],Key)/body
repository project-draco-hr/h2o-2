{
  int ncomp=smatrix[0].length;
  int nfeat=lmatrix._vecs.length;
  Vec[] vecs=Arrays.copyOf(lmatrix._vecs,nfeat + ncomp);
  VectorGroup vg=lmatrix._vecs[0].group();
  Key[] keys=vg.addVecs(ncomp);
  for (int i=0; i < ncomp; i++) {
    vecs[nfeat + i]=new AppendableVec(keys[i]);
  }
  PCAScoreTask tsk=new PCAScoreTask(nfeat,ncomp,smatrix).doAll(vecs);
  Vec[] outputVecs=Arrays.copyOfRange(tsk._fr._vecs,nfeat,nfeat + ncomp);
  String[] names=new String[ncomp];
  for (int i=0; i < ncomp; i++)   names[i]="PC" + i;
  Frame f=new Frame(names,outputVecs);
  DKV.put(destKey,f);
  return f;
}
