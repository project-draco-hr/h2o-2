{
  try {
    if (destination_key.record()._originalValue.equals(source_key.record()._originalValue))     throw new IllegalArgumentException("destination_key cannot be source_key");
    hex.KMeans job=start(destination_key.value(),k.value(),max_iter.value());
    JsonObject response=new JsonObject();
    response.addProperty(JOB,job.self().toString());
    response.addProperty(DEST_KEY,job.dest().toString());
    Response r=Progress.redirect(response,job.self(),job.dest());
    r.setBuilder(DEST_KEY,new KeyElementBuilder());
    return r;
  }
 catch (  IllegalArgumentException e) {
    return Response.error(e.getMessage());
  }
catch (  Error e) {
    return Response.error(e.getMessage());
  }
}
