{
  gemv(_a.raw(),_w.raw(),_previous._a.raw(),_b.raw(),null);
  final float max=Utils.maxValue(_a.raw());
  float scale=0;
  for (int o=0; o < _a.size(); o++) {
    _a.set(o,(float)Math.exp(_a.get(o) - max));
    scale+=_a.get(o);
  }
  for (int o=0; o < _a.size(); o++) {
    if (Float.isNaN(_a.get(o)))     throw new RuntimeException("Numerical instability, predicted NaN.");
    _a.raw()[o]/=scale;
  }
}
