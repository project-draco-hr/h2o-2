def test_GLM_moneypuck(self):
    if (1 == 1):
        csvFilenameList = [('hdb-2007-02-05/Scoring.csv', 240, 'Scoring'), ('hdb-2007-02-05/ScoringSC.csv', 240, 'ScoringSC'), ('hdb-2007-02-05/Teams.csv', 240, 'Teams'), ('hdb-2007-02-05/TeamsHalf.csv', 240, 'TeamsHalf'), ('hdb-2007-02-05/TeamsPost.csv', 240, 'TeamsPost'), ('hdb-2007-02-05/TeamsSC.csv', 240, 'TeamsSC'), ('tricks-2012-06-23/HatTricks.csv', 240, 'HatTricks'), ('bkb090621/abbrev.csv', 240, 'abbrev'), ('bkb090621/AwardsCoaches.csv', 240, 'AwardsCoaches'), ('bkb090621/AwardsPlayers.csv', 240, 'AwardsPlayers'), ('bkb090621/Coaches.csv', 240, 'Coaches'), ('bkb090621/PlayersAllstar.csv', 240, 'PlayersAllstar'), ('bkb090621/Players.csv', 240, 'Players'), ('bkb090621/PlayersPlayoffs.csv', 240, 'PlayersPlayoffs'), ('bkb090621/Teams.csv', 240, 'Teams'), ('hdb-2007-02-05/abbrev.csv', 240, 'abbrev'), ('hdb-2007-02-05/AwardsPlayers.csv', 240, 'AwardsPlayers')]
    h2b.browseTheCloud()
    importFolderPath = '/home/0xdiag/datasets/hockey'
    h2i.setupImportFolder(None, importFolderPath)
    for (csvFilename, timeoutSecs, key2) in csvFilenameList:
        parseResult = h2i.parseImportFolderFile(None, csvFilename, importFolderPath, timeoutSecs=2000, key2=key2)
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
        csvPathname = ((importFolderPath + '/') + csvFilename)
        num_rows = inspect['num_rows']
        num_cols = inspect['num_cols']
        print ('\n' + csvPathname), '    num_rows:', '{:,}'.format(num_rows), '    num_cols:', '{:,}'.format(num_cols)
        max_iter = 9
        y = (num_cols - 1)
        kwargs = {'y': y, 'family': 'poisson', 'link': 'log', 'n_folds': 0, 'max_iter': max_iter, 'beta_epsilon': 0.001, }
        if (1 == 0):
            kwargs.update({'alpha': 0, 'lambda': 0, })
            start = time.time()
            glm = h2o_cmd.runGLMOnly(parseResult=parseResult, timeoutSecs=timeoutSecs, **kwargs)
            print 'glm (L2) end on ', csvPathname, 'took', (time.time() - start), 'seconds'
            column_names = glm['GLMModel']['column_names']
            print 'column_names[0]:', column_names[0]
            h2o_glm.simpleCheckGLM(self, glm, None, **kwargs)
            h2b.browseJsonHistoryAsUrlLastMatch('GLM')
        kwargs.update({'alpha': 0.5, 'lambda': 0.0001, })
        start = time.time()
        glm = h2o_cmd.runGLMOnly(parseResult=parseResult, timeoutSecs=timeoutSecs, **kwargs)
        print 'glm (Elastic) end on ', csvPathname, 'took', (time.time() - start), 'seconds'
        h2o_glm.simpleCheckGLM(self, glm, None, **kwargs)
        kwargs.update({'alpha': 1.0, 'lambda': 0.0001, })
        start = time.time()
        glm = h2o_cmd.runGLMOnly(parseResult=parseResult, timeoutSecs=timeoutSecs, **kwargs)
        print 'glm (L1) end on ', csvPathname, 'took', (time.time() - start), 'seconds'
        h2o_glm.simpleCheckGLM(self, glm, None, **kwargs)
