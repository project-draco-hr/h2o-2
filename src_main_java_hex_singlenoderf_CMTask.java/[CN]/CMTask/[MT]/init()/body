{
  _rowsPerNode=new int[H2O.CLOUD.size()];
  long chunksCount=_data.anyVec().nChunks();
  for (int ci=0; ci < chunksCount; ci++) {
    Key cKey=_data.anyVec().chunkKey(ci);
    _rowsPerNode[cKey.home_node().index()]+=_data.anyVec().chunkLen(ci);
  }
  _remoteChunksKeys=new Key[H2O.CLOUD.size()][];
  int[] _remoteChunksCounter=new int[H2O.CLOUD.size()];
  for (int i=0; i < _data.anyVec().nChunks(); ++i) {
    _remoteChunksCounter[_data.anyVec().chunkKey(i).home(H2O.CLOUD)]++;
  }
  for (int i=0; i < H2O.CLOUD.size(); ++i)   _remoteChunksKeys[i]=new Key[_remoteChunksCounter[i]];
  int[] cnter=new int[H2O.CLOUD.size()];
  for (int i=0; i < _data.anyVec().nChunks(); ++i) {
    int node_idx=_data.anyVec().chunkKey(i).home(H2O.CLOUD);
    _remoteChunksKeys[node_idx][cnter[node_idx]++]=_data.anyVec().chunkKey(i);
  }
}
