def test_import_multi_syn_datasets(self):
    print 'This imports a folder of csv files..i.e points to syn_datasets with no regex'
    print "Doesn't put anything in syn_datasets. When run with import folder redirected"
    print 'to import S3, there is a syn_datasets with 100 files'
    print 'FIX! When run locally, I should have some multi-files in', importFolderPath, '/syn_datasets?'
    timeoutSecs = 500
    if h2o.nodes[0].redirect_import_folder_to_s3_path:
        csvFilenameAll = ['syn_datasets/*_10000x200*']
    else:
        csvFilenameAll = ['syn_datasets/*']
    csvFilenameList = csvFilenameAll
    importFolderPath = 'datasets'
    for csvFilename in csvFilenameList:
        csvPathname = ((importFolderPath + '/') + csvFilename)
        parseResult = h2i.import_parse(path=csvPathname, hex_key='syn_datasets.hex', schema='local', timeoutSecs=500)
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
        print ('\n' + csvPathname), 'from all files num_rows:', '{:,}'.format(inspect['num_rows']), 'num_cols:', '{:,}'.format(inspect['num_cols'])
        print csvFilename, 'parse time:', parseResult['response']['time']
        print "Parse result['destination_key']:", parseResult['destination_key']
        kwargs = {'sample': 75, 'depth': 25, 'ntree': 1, }
        start = time.time()
        RFview = h2o_cmd.runRF(parseResult=parseResult, timeoutSecs=timeoutSecs, **kwargs)
        elapsed = (time.time() - start)
        print ('%d pct. of timeout' % ((elapsed / timeoutSecs) * 100))
