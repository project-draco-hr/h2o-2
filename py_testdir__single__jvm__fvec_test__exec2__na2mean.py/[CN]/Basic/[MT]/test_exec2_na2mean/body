def test_exec2_na2mean(self):
    h2o.beta_features = True
    print 'https://0xdata.atlassian.net/browse/PUB-228'
    bucket = 'home-0xdiag-datasets'
    csvPathname = 'standard/covtype.data'
    hexKey = 'r.hex'
    parseResult = h2i.import_parse(bucket=bucket, path=csvPathname, schema='put', hex_key=hexKey)
    execExprList = ['rcnt = c(0)', 'total = c(0)', 'mean = c(0)', 's.hex = r.hex', 'x=r.hex[,1]; rcnt=nrow(x)-sum(is.na(x))', 'x=r.hex[,1]; total=sum(ifelse(is.na(x),0,x)); rcnt=nrow(x)-sum(is.na(x))', 'x=r.hex[,1]; total=sum(ifelse(is.na(x),0,x)); rcnt=nrow(x)-sum(is.na(x)); mean=total / rcnt', 'x=r.hex[,1]; total=sum(ifelse(is.na(x),0,x)); rcnt=nrow(x)-sum(is.na(x)); mean=total / rcnt; x=ifelse(is.na(x),mean,x)']
    execExprList2 = [((((('s.hex = apply(r.hex,2,' + 'function(x){total=sum(ifelse(is.na(x),0,x)); ') + 'rcnt=nrow(x)-sum(is.na(x)); ') + 'mean=total / rcnt; ') + 'ifelse(is.na(x),mean,x)} ') + ')'), 's=r.hex[,1]; s.hex[,1]=ifelse(is.na(x),0,x)']
    execExprList += execExprList2
    results = []
    for execExpr in execExprList:
        start = time.time()
        (resultExec, result) = h2e.exec_expr(execExpr=execExpr, timeoutSecs=30)
        results.append(result)
        print 'exec end on ', 'operators', 'took', (time.time() - start), 'seconds'
        print 'exec result:', result
        print 'exec result (full):', h2o.dump_json(resultExec)
        h2o.check_sandbox_for_errors()
    rSummary = h2o_cmd.runSummary(key='r.hex', cols='0')
    h2o_cmd.infoFromSummary(rSummary)
    sSummary = h2o_cmd.runSummary(key='s.hex', cols='0')
    h2o_cmd.infoFromSummary(sSummary)
    print 'Comparing summary of r.hex to summary of s.hex'
    df = h2o_util.JsonDiff(rSummary, sSummary, with_values=True)
    print 'df.difference:', h2o.dump_json(df.difference)
    self.assertLess(len(df.difference), 2)
    print 'results from the individual exec expresssions (ignore last which was an apply)'
    print 'results:', results
    self.assertEqual(results, [0.0, 0.0, 0.0, 1859.0, 581012.0, 581012.0, 2959.365300544567, 1859.0, 1859.0])
