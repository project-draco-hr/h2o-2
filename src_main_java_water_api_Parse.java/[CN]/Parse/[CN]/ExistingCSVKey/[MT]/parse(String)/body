{
  final Pattern p=makePattern(input);
  final Pattern exclude;
  if (_hdrFrom.specified())   _header.setValue(true);
  exclude=_excludeExpression.specified() ? makePattern(_excludeExpression.value()) : null;
  final Key[] keyAry=H2O.KeySnapshot.globalSnapshot().filter(new H2O.KVFilter(){
    @Override public boolean filter(    H2O.KeyInfo k){
      if (k._rawData) {
        String ks=k._key.toString();
        return (p.matcher(ks).matches() && (exclude == null || !exclude.matcher(ks).matches()));
      }
      return false;
    }
  }
).keys();
  ArrayList<Key> keys=new ArrayList<Key>(keyAry.length);
  for (  Key k : keyAry)   keys.add(k);
  Key hKey=null;
  if (_hdrFrom.specified()) {
    hKey=_hdrFrom.value()._key;
    _header.setValue(true);
  }
  boolean checkHeader=!_header.specified();
  boolean hasHeader=_header.value();
  CustomParser.ParserSetup userSetup=new CustomParser.ParserSetup(_parserType.value(),_separator.value(),hasHeader,_sQuotes.value());
  CustomParser.PSetupGuess setup=null;
  try {
    setup=GuessSetup.guessSetup(keys,hKey,userSetup,checkHeader);
  }
 catch (  GuessSetup.ParseSetupGuessException e) {
    throw new IllegalArgumentException(e.getMessage());
  }
  if (setup._isValid) {
    if (setup._hdrFromFile != null)     _hdrFrom.setValue(DKV.get(setup._hdrFromFile));
    if (!_header.specified())     _header.setValue(setup._setup._header);
 else     setup._setup._header=_header.value();
    if (!_header.value())     _hdrFrom.disable("Header is disabled.");
    PSetup res=new PSetup(keys,null,setup);
    _parserType.setValue(setup._setup._pType);
    _separator.setValue(setup._setup._separator);
    _hdrFrom._hideInQuery=_header._hideInQuery=_separator._hideInQuery=setup._setup._pType != CustomParser.ParserType.CSV;
    Set<String> dups=setup.checkDupColumnNames();
    if (!dups.isEmpty())     throw new IllegalArgumentException("Column labels must be unique but these labels are repeated: " + dups.toString());
    return res;
  }
 else   throw new IllegalArgumentException("Invalid parser setup. " + setup.toString());
}
