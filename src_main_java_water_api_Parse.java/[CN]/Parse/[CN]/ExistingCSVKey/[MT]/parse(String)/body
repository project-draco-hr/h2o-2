{
  Pattern p=makePattern(input);
  Pattern exclude=null;
  if (_hdrFrom.specified())   _header.setValue(true);
  if (_excludeExpression.specified())   exclude=makePattern(_excludeExpression.value());
  ArrayList<Key> keys=new ArrayList();
  for (  Key key : H2O.globalKeySet(null)) {
    if (!key.user_allowed())     continue;
    String ks=key.toString();
    if (!p.matcher(ks).matches())     continue;
    if (exclude != null && exclude.matcher(ks).matches())     continue;
    Value v2=DKV.get(key);
    if (!v2.isRawData())     continue;
    keys.add(key);
  }
  if (keys.size() == 0)   throw new IllegalArgumentException("I did not find any keys matching this pattern!");
  Collections.sort(keys);
  Key hKey=null;
  if (_hdrFrom.specified()) {
    hKey=_hdrFrom.value()._key;
    _header.setValue(true);
  }
  boolean checkHeader=!_header.specified();
  boolean hasHeader=_header.value();
  CustomParser.ParserSetup userSetup=new CustomParser.ParserSetup(_parserType.value(),_separator.value(),hasHeader);
  CustomParser.PSetupGuess setup=null;
  try {
    setup=ParseDataset.guessSetup(keys,hKey,userSetup,checkHeader);
  }
 catch (  ParseDataset.ParseSetupGuessException e) {
    throw new IllegalArgumentException(e.getMessage());
  }
  if (setup._isValid) {
    if (setup._hdrFromFile != null)     _hdrFrom.setValue(DKV.get(setup._hdrFromFile));
    if (!_header.specified())     _header.setValue(setup._setup._header);
 else     setup._setup._header=_header.value();
    if (!_header.value())     _hdrFrom.disable("Header is disabled.");
    PSetup res=new PSetup(keys,null,setup);
    _parserType.setValue(setup._setup._pType);
    _separator.setValue(setup._setup._separator);
    _hdrFrom._hideInQuery=_header._hideInQuery=_separator._hideInQuery=setup._setup._pType != CustomParser.ParserType.CSV;
    Set<String> dups=setup.checkDupColumnNames();
    if (!dups.isEmpty())     throw new IllegalArgumentException("Column labels must be unique but these labels are repeated: " + dups.toString());
    return res;
  }
 else   throw new IllegalArgumentException("Invalid parser setup. " + setup.toString());
}
