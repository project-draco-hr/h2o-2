def test_C_kmeans_prostate(self):
    importFolderPath = 'standard'
    csvFilename = 'prostate.csv'
    hex_key = 'prostate.hex'
    csvPathname = ((importFolderPath + '/') + csvFilename)
    parseResult = h2i.import_parse(bucket='home-0xdiag-datasets', path=csvPathname, hex_key=hex_key, header=1, timeoutSecs=180)
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    print '\nStarting', csvFilename
    expected = [([55.63235294117647], 68, 667.8088235294117), ([63.93984962406015], 133, 611.5187969924812), ([71.55307262569832], 179, 1474.2458100558654)]
    allowedDelta = (0.01, 0.01, 0.01)
    for k in range(2, 6):
        kwargs = {'k': k, 'initialization': 'Furthest', 'destination_key': 'prostate_k.hex', 'seed': 265211114317615310, }
        kwargs.update({'max_iter': 50, })
        kmeans = h2o_cmd.runKMeans(parseResult=parseResult, timeoutSecs=5, noPoll=h2o.beta_features, **kwargs)
        if h2o.beta_features:
            h2o_jobs.pollWaitJobs(timeoutSecs=300, pollTimeoutSecs=300, retryDelaySecs=5)
            kmeans['destination_key'] = 'prostate_k.hex'
        modelView = h2o.nodes[0].kmeans_model_view(model='prostate_k.hex')
        print 'KMeans2ModelView:', h2o.dump_json(modelView)
        model = modelView['model']
        clusters = model['clusters']
        cluster_variances = model['cluster_variances']
        error = model['error']
        print 'cluster_variances:', cluster_variances
        print 'error:', error
