def test_kmeans_benign(self):
    importFolderPath = 'logreg'
    csvFilename = 'benign.csv'
    hex_key = 'benign.hex'
    csvPathname = ((importFolderPath + '/') + csvFilename)
    print '\nStarting', csvFilename
    parseResult = h2i.import_parse(bucket='smalldata', path=csvPathname, hex_key=hex_key, header=1, timeoutSecs=180, doSummary=False)
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    print '\nStarting', csvFilename
    expected = [([8.86, 2.43, 35.53, 0.31, 13.22, 1.47, 1.33, 20.06, 13.08, 0.53, 2.12, 128.61, 35.33, 1.57], 49, None), ([33.47, 2.29, 50.92, 0.34, 12.82, 1.33, 1.36, 21.43, 13.3, 0.37, 2.52, 125.4, 43.91, 1.79], 87, None), ([27.64, 2.87, 48.11, 0.09, 11.8, 0.98, 1.51, 21.02, 12.53, 0.58, 2.89, 171.27, 42.73, 1.53], 55, None), ([26.0, 2.67, 46.67, 0.0, 13.0, 1.33, 1.67, 21.56, 11.44, 0.22, 2.89, 234.56, 39.22, 1.56], 9, None)]
    allowedDelta = (0.01, 0.01, 0.01, 0.01)
    for trial in range(1):
        kmeansSeed = random.randint(0, sys.maxint)
        kwargs = {'k': 4, 'initialization': 'PlusPlus', 'destination_key': 'benign_k.hex', 'max_iter': 50, 'seed': kmeansSeed, }
        kmeans = h2o_cmd.runKMeans(parseResult=parseResult, timeoutSecs=5, **kwargs)
        modelView = h2o.nodes[0].kmeans_view(model='benign_k.hex')
        h2o.verboseprint('KMeans2ModelView:', h2o.dump_json(modelView))
        model = modelView['model']
        clusters = model['centers']
        within_cluster_variances = model['within_cluster_variances']
        total_within_SS = model['total_within_SS']
        print 'within_cluster_variances:', within_cluster_variances
        print 'total_within_SS:', total_within_SS
        (centers, tupleResultList) = h2o_kmeans.bigCheckResults(self, kmeans, csvPathname, parseResult, 'd', **kwargs)
