def test_B_kmeans_benign(self):
    importFolderPath = 'standard'
    csvFilename = 'benign.csv'
    hex_key = 'benign.hex'
    csvPathname = ((importFolderPath + '/') + csvFilename)
    parseResult = h2i.import_parse(bucket='home-0xdiag-datasets', path=csvPathname, hex_key=hex_key, header=1, timeoutSecs=180, noPoll=h2o.beta_features, doSummary=False)
    if h2o.beta_features:
        h2o_jobs.pollWaitJobs(timeoutSecs=300, pollTimeoutSecs=300, retryDelaySecs=5)
        parseResult['destination_key'] = hex_key
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    print '\nStarting', csvFilename
    expected = [([24.538961038961038, 2.772727272727273, 46.89032467532467, 0.1266233766233766, 12.012142857142857, 1.0105194805194804, 1.5222727272727272, 22.26039690646432, 12.582467532467534, 0.5275062016635049, 2.9477601050634767, 162.52136363636365, 41.94558441558441, 1.661883116883117], 77, 46889.32010560476), ([25.587719298245613, 2.2719298245614037, 45.64035087719298, 0.35964912280701755, 13.026315789473685, 1.4298245614035088, 1.3070175438596492, 24.393307707470925, 13.333333333333334, 0.5244431302976542, 2.7326039818647745, 122.46491228070175, 40.973684210526315, 1.6754385964912282], 114, 64011.20272144667), ([30.833333333333332, 2.9166666666666665, 46.833333333333336, 0.0, 13.083333333333334, 1.4166666666666667, 1.5833333333333333, 24.298220973782772, 11.666666666666666, 0.37640449438202245, 3.404494382022472, 224.91666666666666, 39.75, 1.4166666666666667], 12, 13000.485226507595)]
    allowedDelta = (0.01, 0.01, 0.01)
    for k in range(2, 6):
        kwargs = {'k': k, 'ignored_cols_by_name': None, 'destination_key': 'benign_k.hex', 'seed': 265211114317615310, }
        kwargs.update({'max_iter': 10, })
        kmeans = h2o_cmd.runKMeans(parseResult=parseResult, timeoutSecs=5, noPoll=h2o.beta_features, **kwargs)
        if h2o.beta_features:
            h2o_jobs.pollWaitJobs(timeoutSecs=300, pollTimeoutSecs=300, retryDelaySecs=5)
            kmeans['destination_key'] = 'benign_k.hex'
        h2o.verboseprint('kmeans result:', h2o.dump_json(kmeans))
        modelView = h2o.nodes[0].kmeans_model_view(model='benign_k.hex')
        print 'KMeans2ModelView:', h2o.dump_json(modelView)
        model = modelView['model']
        clusters = model['clusters']
        cluster_variances = model['cluster_variances']
        error = model['error']
        print 'cluster_variances:', cluster_variances
        print 'error:', error
