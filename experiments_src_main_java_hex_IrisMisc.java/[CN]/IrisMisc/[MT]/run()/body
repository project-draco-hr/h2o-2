{
  load();
  Layer[] ls=new Layer[3];
  ls[0]=new FrameInput(_train);
  ls[1]=new Layer.Tanh();
  ls[2]=new Softmax();
  ls[1]._rate=0.99f;
  ls[2]._rate=0.99f;
  ls[1]._l2=.001f;
  ls[2]._l2=.001f;
  ls[0].init(null,4);
  ls[1].init(ls[0],7);
  ls[2].init(ls[1],3);
  for (int i=1; i < ls.length; i++)   ls[i].randomize();
  final Trainer.Direct trainer=new Trainer.Direct(ls);
  Input input=(Input)ls[0];
  for (int s=0; s < 1000000; s++) {
    trainer.step();
    input.move();
  }
  Weights a=Weights.get(ls,true);
  eval("a",ls);
  for (int s=0; s < 100000; s++) {
    trainer.step();
    input.move();
  }
  Weights b=Weights.get(ls,true);
  eval("b",ls);
  for (int s=0; s < 100000; s++) {
    trainer.step();
    input.move();
  }
  Weights c=Weights.get(ls,true);
  eval("c",ls);
  b.set(ls);
  eval("b",ls);
  Weights w=Weights.get(ls,true);
  for (int y=1; y < ls.length; y++) {
    for (int i=0; i < ls[y]._w.length; i++)     w._ws[y][i]+=b._ws[y][i] - a._ws[y][i];
    for (int i=0; i < ls[y]._b.length; i++)     w._bs[y][i]+=b._bs[y][i] - a._bs[y][i];
  }
  w.set(ls);
  eval("w",ls);
  Log.info("Done!");
  System.exit(0);
}
