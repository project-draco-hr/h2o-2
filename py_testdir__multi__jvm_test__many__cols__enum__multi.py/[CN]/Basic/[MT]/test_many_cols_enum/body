def test_many_cols_enum(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    tryList = [(100, 1000, 0, 'cH', 120), (100, 1000, 1, 'cI', 120), (100, 2000, 1, 'cI', 120), (100, 3000, 1, 'cI', 120), (100, 4000, 1, 'cI', 120), (100, 5000, 0, 'cG', 180), (100, 9000, 0, 'cC', 180), (100, 10000, 1, 'cB', 180)]
    lenNodes = len(h2o.nodes)
    cnum = 0
    for (rowCount, colCount, header, hex_key, timeoutSecs) in tryList:
        cnum += 1
        csvFilename = (((((('syn_' + str(SEED)) + '_') + str(rowCount)) + 'x') + str(colCount)) + '.csv')
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        print 'Creating random', csvPathname
        write_syn_dataset(csvPathname, rowCount, colCount, header, SEED)
        parseResult = h2i.import_parse(path=csvPathname, schema='put', header=header, hex_key=hex_key, timeoutSecs=timeoutSecs)
        print "Parse result['destination_key']:", parseResult['destination_key']
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
        print ('\n' + csvFilename)
        if (not h2o.browse_disable):
            h2b.browseJsonHistoryAsUrlLastMatch('Inspect')
            time.sleep(5)
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'], offset=100, view=100)
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'], offset=99, view=89)
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'], offset=(-1), view=53)
