def compareResultsToExpected(self, tupleResultList, expected=None, allowedDelta=None, trial=0):
    from operator import itemgetter
    tupleResultList.sort(key=itemgetter(0))
    if (expected is not None):
        expected.sort(key=itemgetter(0))
        print ('\nTrial #%d Expected:' % trial)
        for e in expected:
            print e
    print ('\nTrial #%d Actual:' % trial)
    for t in tupleResultList:
        print t, ','
    if (expected is not None):
        for (i, (expCenter, expRows, expError)) in enumerate(expected):
            (actCenter, actRows, actError) = tupleResultList[i]
            for (a, b) in zip(expCenter, actCenter):
                absAllowedDelta = (allowedDelta[0] * a)
                self.assertAlmostEqual(a, b, delta=allowedDelta, msg=('Trial %d Center expected: %s actual: %s delta > %s' % (trial, expCenter, actCenter, absAllowedDelta)))
            absAllowedDelta = (allowedDelta[1] * expRows)
            self.assertAlmostEqual(expRows, actRows, delta=absAllowedDelta, msg=('Trial %d Rows expected: %s actual: %s delta > %s' % (trial, expRows, actRows, absAllowedDelta)))
            if (expError is not None):
                absAllowedDelta = (allowedDelta[2] * expError)
                self.assertAlmostEqual(expError, actError, delta=absAllowedDelta, msg=('Trial %d Error expected: %s actual: %s delta > %s' % (trial, expError, actError, absAllowedDelta)))
