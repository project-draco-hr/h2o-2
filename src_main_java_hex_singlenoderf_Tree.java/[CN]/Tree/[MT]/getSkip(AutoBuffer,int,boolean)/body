{
  int numLeaves=0;
  int numLeftLeaves=0;
  int startPos=ab.position();
  boolean prevIsS=false;
  while (ab.position() < startPos + leftSize) {
    byte currentNodeType=(byte)ab.get1();
    if (currentNodeType == 'S' || currentNodeType == 'E') {
      ab.get2();
      ab.get4f();
      int skipSize=ab.get1();
      if (skipSize == 0) {
        ab.get3();
      }
      prevIsS=true;
    }
 else     if (currentNodeType == '[') {
      numLeaves++;
      if (regression)       ab.get4f();
 else       ab.get1();
      if (prevIsS)       numLeftLeaves++;
      prevIsS=false;
    }
 else {
      throw new NotImplementedException();
    }
  }
  ab.position(startPos);
  return 2 * numLeaves - numLeftLeaves;
}
