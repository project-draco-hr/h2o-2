import unittest, random, sys, time
sys.path.extend(['.', '..', 'py'])
import h2o, h2o_browse as h2b, h2o_exec as h2e, h2o_hosts, h2o_import as h2i
initList = [('r0.hex', 'r0.hex=c(1.3,0,1,2,3,4,5)'), ('r1.hex', 'r1.hex=c(2.3,0,1,2,3,4,5)'), ('r2.hex', 'r2.hex=c(3.3,0,1,2,3,4,5)'), ('r3.hex', 'r3.hex=c(4.3,0,1,2,3,4,5)'), ('r4.hex', 'r4.hex=c(5.3,0,1,2,3,4,5)'), ('r.hex', 'r.hex=i.hex')]
exprList = ['x <- cbind(x1 = 3, x2 = c(4:1, 2:5))', 'dimnames(x)[[1]] <- letters[1:8]', 'apply(x, 2, mean, trim = .2)', 'col.sums <- apply(x, 2, sum)', 'row.sums <- apply(x, 1, sum)', 'rbind(cbind(x, Rtot = row.sums), Ctot = c(col.sums, sum(col.sums)))', 'stopifnot( apply(x, 2, is.vector))', 'apply(x, 2, sort)', 'cave <- function(x, c1, c2) c(mean(x[c1]), mean(x[c2]))', 'apply(x, 1, cave,  c1 = "x1", c2 = c("x1","x2"))', 'ma <- matrix(c(1:4, 1, 6:8), nrow = 2)', 'ma', 'apply(ma, 1, table)', 'apply(ma, 1, stats::quantile)', 'stopifnot(dim(ma) == dim(apply(ma, 1:2, sum)))', 'z <- array(1:24, dim = 2:4)', 'zseq <- apply(z, 1:2, function(x) seq_len(max(x)))', 'zseq', 'typeof(zseq)', 'dim(zseq)', 'zseq[1,]', 'apply(z, 3, function(x) seq_len(max(x)))']
if (__name__ == '__main__'):
    h2o.unit_main()
