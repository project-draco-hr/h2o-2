def test_GLM_params_rand2(self):
    h2o.beta_features = True
    csvPathname = 'covtype/covtype.20k.data'
    parseResult = h2i.import_parse(bucket='smalldata', path=csvPathname, schema='put', hex_key='covtype.20k')
    paramDict = define_params()
    for trial in range(20):
        y = 54
        params = {'response': y, 'case': 1, 'alpha': 0, 'lambda': 0, 'n_folds': 1, }
        colX = h2o_glm.pickRandGlmParams(paramDict, params)
        kwargs = params.copy()
        case = kwargs.pop('case')
        execExpr = ('aHack=%s; aHack[,%s] = aHack[,%s]==%s' % ('covtype.20k', (y + 1), (y + 1), case))
        h2e.exec_expr(execExpr=execExpr, timeoutSecs=30)
        start = time.time()
        glm = h2o_cmd.runGLM(timeoutSecs=70, parseResult={'destination_key': 'aHack', }, **kwargs)
        h2o_glm.simpleCheckGLM(self, glm, None, **kwargs)
        h2o.check_sandbox_for_errors()
        print 'glm end on ', csvPathname, 'took', (time.time() - start), 'seconds'
        print 'Trial #', trial, 'completed\n'
