{
  Key source=Key.make("datakey");
  Key target=Key.make("datakey.kmeans");
  ValueArray va=null;
  KMeansModel res=null;
  try {
    final int columns=100;
    double[][] goals=new double[8][columns];
    double[][] array=gauss(columns,rows,goals);
    int[] cols=new int[columns];
    for (int i=0; i < cols.length; i++)     cols[i]=i;
    va=va_maker(source,(Object[])array);
    Timer t=new Timer();
    KMeans.start(target,va,goals.length,Initialization.Furthest,100,SEED,false,cols).get();
    Log.debug(Sys.KMEAN," testGaussian rows:" + rows + ", ms:"+ t);
    res=UKV.get(target);
    double[][] clusters=res.clusters();
    for (    double[] goal : goals) {
      boolean found=false;
      for (      double[] cluster : clusters) {
        if (match(cluster,goal)) {
          found=true;
          break;
        }
      }
      Assert.assertTrue(found);
    }
  }
  finally {
    if (va != null)     va.delete();
    if (res != null)     res.delete();
  }
}
