{
  long[] espc=MemoryManager.malloc8(_nChunks + 1);
  int rpc=(int)(_vecs[0].length() / _nChunks);
  int rem=(int)(_vecs[0].length() % _nChunks);
  ;
  Arrays.fill(espc,rpc);
  for (int i=0; i < rem; ++i)   ++espc[i];
  long sum=0;
  for (int i=0; i < espc.length; ++i) {
    long s=espc[i];
    espc[i]=sum;
    sum+=s;
  }
  _newVecs=new Vec(Vec.newKey(),espc).makeZeros(_vecs.length);
  setPendingCount(_vecs.length - 1);
  for (int i=0; i < Math.min(_vecs.length,_maxP); ++i) {
    new RebalanceTask(new Cmp(),_vecs[i]).asyncExec(_newVecs[i]);
  }
}
