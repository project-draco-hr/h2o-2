def test_KMeans_create_frame_fvec(self):
    for trial in range(20):
        cfParamDict = define_create_frame_params(SEED)
        params = {'rows': 5, 'cols': 10, }
        h2o_util.pickRandParams(cfParamDict, params)
        i = params.get('integer_fraction', None)
        c = params.get('categorical_fraction', None)
        r = params.get('randomize', None)
        v = params.get('value', None)
        if r:
            if (not i):
                i = 0
            if (not c):
                c = 0
            if ((i and c) and ((i + c) >= 1.0)):
                c = (1.0 - i)
            params['integer_fraction'] = i
            params['categorical_fraction'] = c
            params['value'] = None
        else:
            params['randomize'] = 0
            params['integer_fraction'] = 0
            params['categorical_fraction'] = 0
        kwargs = params.copy()
        timeoutSecs = 300
        hex_key = ('temp_%s.hex' % trial)
        cfResult = h2o.nodes[0].create_frame(key=hex_key, timeoutSecs=timeoutSecs, **kwargs)
        inspect = h2o_cmd.runInspect(None, hex_key)
        print ('\n%s' % hex_key), '    numRows:', '{:,}'.format(inspect['numRows']), '    numCols:', '{:,}'.format(inspect['numCols'])
        kmeansParamDict = define_KMeans_params(SEED)
        params = {'max_iter': 20, 'k': 1, 'destination_key': (('KM_' + str(trial)) + '.hex'), }
        h2o_kmeans.pickRandKMeansParams(kmeansParamDict, params)
        kwargs = params.copy()
        start = time.time()
        parseResult = {'destination_key': hex_key, }
        kmeans = h2o_cmd.runKMeans(parseResult=parseResult, timeoutSecs=timeoutSecs, retryDelaySecs=2, pollTimeoutSecs=60, **kwargs)
        elapsed = (time.time() - start)
        print 'kmeans trial %s end on ', trial, 'took', elapsed, 'seconds.', ('%d pct. of timeout' % ((elapsed / timeoutSecs) * 100))
        h2o_kmeans.simpleCheckKMeans(self, kmeans, **kwargs)
        print 'Trial #', trial, 'completed\n'
