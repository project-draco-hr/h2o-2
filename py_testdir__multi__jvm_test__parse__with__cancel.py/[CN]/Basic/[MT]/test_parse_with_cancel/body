def test_parse_with_cancel(self):
    importFolderPath = 'standard'
    timeoutSecs = 500
    csvFilenameList = [('standard', 'covtype.data', 54), ('manyfiles-nflx-gz', 'file_1.dat.gz', 378), ('standard', 'covtype20x.data', 54), ('manyfiles-nflx-gz', 'file_[1-9].dat.gz', 378)]
    for (importFolderPath, csvFilename, response) in csvFilenameList:
        csvPathname = ((importFolderPath + '/') + csvFilename)
        hex_key = (csvFilename + '.hex')
        (importResult, importPattern) = h2i.import_only(bucket='home-0xdiag-datasets', path=csvPathname, timeoutSecs=50)
        start = time.time()
        parseResult = h2i.import_parse(bucket='home-0xdiag-datasets', path=csvPathname, hex_key=hex_key, timeoutSecs=500, noPoll=True, doSummary=False)
        job_key = parseResult['job_key']
        time.sleep(3)
        h2o.nodes[0].jobs_cancel(key=job_key)
        h2o_jobs.pollWaitJobs(timeoutSecs=30)
        elapsed = (time.time() - start)
        print 'Cancelled parse completed in', elapsed, 'seconds.'
        h2o.check_sandbox_for_errors()
        storeViewResult = h2o_cmd.runStoreView(timeoutSecs=timeoutSecs, view=100)
        keys = storeViewResult['keys']
        for k in keys:
            keyName = k['key']
            print 'kevin:', keyName
            if (csvFilename in keyName):
                h2o_cmd.runInspect(key=keyName)
                h2o.check_sandbox_for_errors()
