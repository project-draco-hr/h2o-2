def test_many_cols_real(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    tryList = [(100, 1000, 'cA', 300), (100, 3000, 'cB', 300), (100, 5000, 'cC', 300), (100, 7000, 'cD', 300), (100, 9000, 'cE', 300), (100, 10000, 'cF', 300)]
    for (rowCount, colCount, key2, timeoutSecs) in tryList:
        SEEDPERFILE = random.randint(0, sys.maxint)
        csvFilename = (((((('syn_' + str(SEEDPERFILE)) + '_') + str(rowCount)) + 'x') + str(colCount)) + '.csv')
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        print 'Creating random', csvPathname
        write_syn_dataset(csvPathname, rowCount, colCount, SEEDPERFILE)
        parseKey = h2o_cmd.parseFile(None, csvPathname, key2=key2, timeoutSecs=10)
        print csvFilename, 'parse time:', parseKey['response']['time']
        print "Parse result['destination_key']:", parseKey['destination_key']
        inspect = h2o_cmd.runInspect(None, parseKey['destination_key'])
        print ('\n' + csvFilename)
        y = colCount
        kwargs = {'y': y, 'max_iter': 9, 'case': '1', 'case_mode': '=', 'lambda': 0.0001, 'alpha': 0.6, }
        start = time.time()
        glm = h2o_cmd.runGLMOnly(parseKey=parseKey, timeoutSecs=timeoutSecs, **kwargs)
        print 'glm end on ', csvPathname, 'took', (time.time() - start), 'seconds'
        h2o_glm.simpleCheckGLM(self, glm, None, **kwargs)
        if (not h2o.browse_disable):
            h2b.browseJsonHistoryAsUrlLastMatch('Inspect')
            time.sleep(5)
        inspect = h2o_cmd.runInspect(None, parseKey['destination_key'], offset=100, view=100)
