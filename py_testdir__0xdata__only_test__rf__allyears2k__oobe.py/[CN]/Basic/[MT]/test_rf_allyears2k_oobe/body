def test_rf_allyears2k_oobe(self):
    importFolderPath = '/home/0xdiag/datasets/standard'
    csvFilename = 'allyears2k.csv'
    csvPathname = ((importFolderPath + '/') + csvFilename)
    h2i.setupImportFolder(None, importFolderPath)
    parseResult = h2i.parseImportFolderFile(None, csvFilename, importFolderPath, timeoutSecs=60)
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    h2o_cmd.infoFromInspect(inspect, csvPathname)
    for trial in range(10):
        kwargs = paramDict
        timeoutSecs = (30 + (kwargs['ntree'] * 2))
        start = time.time()
        node = h2o.nodes[random.randint(0, (len(h2o.nodes) - 1))]
        rfView = h2o_cmd.runRFOnly(node=node, parseResult=parseResult, timeoutSecs=timeoutSecs, **kwargs)
        elapsed = (time.time() - start)
        print 'RF end on ', csvPathname, 'took', elapsed, 'seconds.', ('%d pct. of timeout' % ((elapsed / timeoutSecs) * 100))
        classification_error = rfView['confusion_matrix']['classification_error']
        rows_skipped = rfView['confusion_matrix']['rows_skipped']
        mtry = rfView['mtry']
        mtry_nodes = rfView['mtry_nodes']
        print 'mtry:', mtry
        print 'mtry_nodes:', mtry_nodes
        self.assertEqual(classification_error, 0, 'Should have zero oobe error')
        self.assertEqual(rows_skipped, 39, 'Should have exactly 39 rows skipped')
        print 'Trial #', trial, 'completed'
