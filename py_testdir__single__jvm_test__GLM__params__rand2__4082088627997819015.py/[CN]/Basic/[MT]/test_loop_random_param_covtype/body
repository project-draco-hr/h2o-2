def test_loop_random_param_covtype(self):
    csvPathname = h2o.find_dataset('UCI/UCI-large/covtype/covtype.data')
    parseKey = h2o_cmd.parseFile(csvPathname=csvPathname, key='covtype')
    SEED = random.randint(0, sys.maxint)
    random.seed(SEED)
    print '\nUsing random seed:', SEED
    paramDict = define_params()
    for trial in range(40):
        params = {'y': 54, 'n_folds': 3, 'family': 'binomial', 'max_iter': 5, 'case': 1, 'alpha': 0, 'lambda': 0, }
        colX = h2o_glm.pickRandGlmParams(paramDict, params)
        kwargs = params.copy()
        start = time.time()
        timeoutSecs = max(150, ((params['n_folds'] * 10) + (params['max_iter'] * 10)))
        glm = h2o_cmd.runGLMOnly(timeoutSecs=150, parseKey=parseKey, **kwargs)
        elapsed = (time.time() - start)
        h2o_glm.simpleCheckGLM(self, glm, None, **kwargs)
        h2o.check_sandbox_for_errors()
        print 'glm end on ', csvPathname, 'took', elapsed, 'seconds.', ('%d pct. of timeout' % ((elapsed * 100) / timeoutSecs))
        print 'Trial #', trial, 'completed\n'
