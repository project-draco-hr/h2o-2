def parseFile(self, importFolderPath='datasets', csvFilename='airlines_all.csv', timeoutSecs=500, **kwargs):
    csvPathname = ((importFolderPath + '/') + csvFilename)
    start = time.time()
    (importResult, importPattern) = h2i.import_only(path=csvPathname, schema='hdfs', timeoutSecs=timeoutSecs)
    succeeded = importResult['succeeded']
    if (len(succeeded) < 1):
        raise Exception(('Should have imported at least 1 key for %s' % csvPathname))
    foundIt = None
    for f in succeeded:
        if (csvPathname in f['key']):
            foundIt = f
            print 'foundit f:', f
            break
    if (not foundIt):
        raise Exception(('Should have found %s in the imported keys for %s' % (importPattern, csvPathname)))
    parseResult = h2i.import_parse(path=csvPathname, schema='hdfs', timeoutSecs=timeoutSecs)
    elapsed = (time.time() - start)
    print 'Parse of', parseResult['destination_key'], 'took', elapsed, 'seconds'
    parseResult['python_call_timer'] = elapsed
    print "Parse result['destination_key']:", parseResult['destination_key']
    start = time.time()
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'], timeoutSecs=200)
    elapsed = (time.time() - start)
    print 'Inspect:', parseResult['destination_key'], 'took', elapsed, 'seconds'
    h2o_cmd.infoFromInspect(inspect, csvPathname)
    num_rows = inspect['num_rows']
    num_cols = inspect['num_cols']
    print 'num_rows:', num_rows, 'num_cols', num_cols
    return parseResult
