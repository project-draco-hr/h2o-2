{
  if (argcnt - 1 == 1) {
    return;
  }
  Frame f1=env.peekAry();
  for (int i=0; i < argcnt - 1; ++i) {
    Frame t=env.ary(-(i + 1));
    if (t.numCols() != f1.numCols())     throw new IllegalArgumentException("Column mismatch! Expected " + f1.numCols() + " but frame has "+ t.numCols());
    for (int c=0; c < f1.numCols(); ++c) {
      if (!get_type(f1.vec(c)).equals(get_type(t.vec(c))))       throw new IllegalArgumentException("Column type mismatch! Expected type " + get_type(f1.vec(c)) + " but vec has type "+ get_type(t.vec(c)));
    }
  }
  ParallelRbinds t;
  H2O.submitTask(t=new ParallelRbinds(env,argcnt - 1)).join();
  Key m=Key.make();
  env.poppush(argcnt,new Frame(m,f1.names(),t._vecs),m.toString());
}
