{
  Random r=new Random(chk._start);
  int ns=Math.min(chk._len,(int)(_total * (double)chk._len / vecs(0).length()));
  _local=new double[ns];
  int n=0, fill=0;
  double val;
  if (ns == chk._len)   for (n=0; n < ns; n++) {
    if (!Double.isNaN(val=chk.at0(n)))     _local[fill++]=val;
  }
 else   for (n=0; n < ns; n++) {
    int i=r.nextInt(chk._len);
    if (!Double.isNaN(val=chk.at0(i)))     _local[fill++]=val;
  }
  _local=Arrays.copyOf(_local,fill);
}
