{
  Key key=loadAndParseFile("poker.hex","smalldata/poker/poker-hand-testing.data");
  ValueArray data=DKV.get(key).get();
  UnbalancedClass[] uClasses=MinorityClasses.extractUnbalancedClasses(data,10,new int[]{0,9});
  final int n=new int[]{6,3,2}[ValueArray.LOG_CHK - 20];
  UnbalancedClass[] goal=new UnbalancedClass[]{new UnbalancedClass(0,new Key[n],501209),new UnbalancedClass(9,new Key[1],3)};
  for (int i=0; i < uClasses.length; i++) {
    UnbalancedClass u=uClasses[i];
    UnbalancedClass g=goal[i];
    assertTrue(u._c == g._c);
    assertTrue(u._rows == g._rows);
    assertTrue(u._chunks.length == g._chunks.length);
    for (    Key k : u._chunks)     UKV.remove(k);
  }
  UKV.remove(key);
}
