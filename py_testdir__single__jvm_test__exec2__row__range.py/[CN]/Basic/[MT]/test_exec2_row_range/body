def test_exec2_row_range(self):
    h2o.beta_features = True
    SYNDATASETS_DIR = h2o.make_syn_dir()
    tryList = [(1000000, 5, 'cA', 200)]
    for (rowCount, colCount, hex_key, timeoutSecs) in tryList:
        SEEDPERFILE = random.randint(0, sys.maxint)
        csvFilename = (((((('syn_' + str(SEEDPERFILE)) + '_') + str(rowCount)) + 'x') + str(colCount)) + '.csv')
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        print '\nCreating random', csvPathname
        write_syn_dataset(csvPathname, rowCount, colCount, SEEDPERFILE)
        start = time.time()
        parseResult = h2i.import_parse(path=csvPathname, schema='put', hex_key=hex_key, timeoutSecs=timeoutSecs, doSummary=False)
        print 'Parse:', parseResult['destination_key'], 'took', (time.time() - start), 'seconds'
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
        h2o_cmd.infoFromInspect(inspect, csvPathname)
        print ('\n' + csvPathname), '    numRows:', '{:,}'.format(inspect['numRows']), '    numCols:', '{:,}'.format(inspect['numCols'])
        self.assertEqual(inspect['numCols'], colCount, ('parse created result with the wrong number of cols %s %s' % (inspect['numCols'], colCount)))
        self.assertEqual(inspect['numRows'], rowCount, ("parse created result with the wrong number of rows (header shouldn't count) %s %s" % (inspect['numRows'], rowCount)))
        REPEAT = 1
        for i in range(REPEAT):
            hex_key_i = ((hex_key + '_') + str(i))
            execExpr = ('%s=%s[1,]' % (hex_key_i, hex_key))
            (resultExec, result) = h2e.exec_expr(execExpr=execExpr, timeoutSecs=30)
            execExpr = ('%s=%s[1:%s,]' % (hex_key_i, hex_key, 100))
            (resultExec, result) = h2e.exec_expr(execExpr=execExpr, timeoutSecs=30)
            execExpr = ('%s=%s[1:%s,]' % (hex_key_i, hex_key, (rowCount - 10)))
            (resultExec, result) = h2e.exec_expr(execExpr=execExpr, timeoutSecs=30)
            inspect = h2o_cmd.runInspect(None, hex_key_i, timeoutSecs=timeoutSecs2)
            h2o_cmd.infoFromInspect(inspect, hex_key_i)
            print ('\n' + hex_key_i), '    numRows:', '{:,}'.format(inspect['numRows']), '    numCols:', '{:,}'.format(inspect['numCols'])
