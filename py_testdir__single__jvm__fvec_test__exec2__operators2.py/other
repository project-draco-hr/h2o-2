import unittest, random, sys, time
sys.path.extend(['.', '..', 'py'])
import h2o, h2o_browse as h2b, h2o_exec as h2e, h2o_hosts, h2o_import as h2i
initList = [('r0.hex', 'r0.hex=c(1.3,0,1,2,3,4,5)'), ('r1.hex', 'r1.hex=c(2.3,0,1,2,3,4,5)'), ('r2.hex', 'r2.hex=c(3.3,0,1,2,3,4,5)'), ('r3.hex', 'r3.hex=c(4.3,0,1,2,3,4,5)'), ('r4.hex', 'r4.hex=c(5.3,0,1,2,3,4,5)'), ('r.hex', 'r.hex=i.hex'), ('z.hex', 'z.hex=c(0)')]
DO_IFELSE = False
DO_CAN_RETURN_NAN = False
DO_FAIL1 = False
DO_TERNARY = True
exprList = ['x= 3; r.hex[(x > 0) & (x < 4),]', 'x= 3; r.hex[,(x > 0) & (x < 4)]', '1.23', '!1.23', '1.23<2.34', '!1.23<2.34', '!1.23<!2.34', '1.23<!2.34', '1.23<=2.34', '1.23>2.34', '1.23>=2.34', '1.23==2.34', '1.23!=2.34', 'r.hex', '!r.hex', 'x=0; x+2', 'x=!0; !x+2', 'x=!0; x+!2', 'x=1', 'x=!1', 'x<-1', 'x<-!1', 'c(1,3,5)', '!c(1,3,5)', '!c(!1,3,5)', '!c(1,!3,5)', '!c(1,3,!5)', 'a=0; x=0', 'a=!0; x=!0', 'r.hex[2,3]', 'r.hex[2+4,-4]', 'r.hex[1,-1]; r.hex[1,-1]; r.hex[1,-1]', 'r.hex[1,]', 'r.hex+1', 'r.hex[,1]', 'r.hex[,1]+1', 'r.hex-r.hex', '1.23+(r.hex-r.hex)', '(1.23+r.hex)-r.hex', 'is.na(r.hex)', 'nrow(r.hex)*3', 'r.hex[nrow(r.hex)-1,ncol(r.hex)-1]', 'r.hex[nrow(r.hex),]', 'r.hex[,ncol(r.hex)+1]=4', 'r.hex[,1]=3.3; r.hex', 'r.hex[,1]=r.hex[,1]+1', 'function(x,y,z){x[]}(r.hex,1,2)', 'function(x){x+1}(2)', 'function(x){y=x*2; y+1}(2)', 'function(x){y=1+2}(2)', 'function(funy){function(x){funy(x)*funy(x)}}(sgn)(-2)', 'a=1; a=2; function(x){x=a;a=3}', 'a=r.hex; function(x){x=a;a=3;nrow(x)*a}(a)', 'apply(r.hex,2,sum)', 'cbind(c(1,2,3,4), c(5,6,7,8))', 'r.hex[c(1,3,5),]', 'a=c(11,22,33,44,55,66); a[c(2,6,1),]', 'sum(1,2)', 'sum(1,2,3)', 'sum(c(1,3,5))', 'sum(4,c(1,3,5),2,6)', 'sum(1,r.hex,3)', 'min(1,2)', 'max(1,23)', 'factor(r.hex[,5])', 'r0.hex[,1]==1.0', 'runif(r4.hex[,1])', 'mean=function(x){apply(x,1,sum)/nrow(x)};mean(r.hex)']
if DO_TERNARY:
    exprList += ['1 ? r.hex : (r.hex+1)', '(1 ? r.hex : (r.hex+1))[1,2]', 'apply(r.hex,2, function(x){x==-1 ? 1 : x})', '0 ? 1 : 2', '0 ? r.hex+1 : r.hex+2', 'r.hex>3 ? 99 : r.hex']
if DO_IFELSE:
    exprList += ['apply(r.hex,2,function(x){ifelse(x==-1,1,x)})', 'ifelse(0,1,2)', 'ifelse(0,r.hex+1,r.hex+2)', 'ifelse(r.hex>3,99,r.hex)', 'ifelse(0,+,*)(1,2)']
if DO_CAN_RETURN_NAN:
    exprList += ['r.hex[r.hex[,1]>4,]']
if DO_FAIL1:
    exprList += ['a=ncol(r.hex); r.hex[,c(a+1,a+2)]=5']
exprBigList = []
for i in range(100):
    expr = ''
    for j in range(3):
        expr += (random.choice(exprList) + ';')
    exprBigList.append(expr)
if (__name__ == '__main__'):
    h2o.unit_main()
