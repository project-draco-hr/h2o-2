import unittest, random, sys, time
sys.path.extend(['.', '..', 'py'])
import h2o, h2o_browse as h2b, h2o_exec as h2e, h2o_hosts, h2o_import as h2i, h2o_cmd
import h2o_print as h2p, h2o_summ
exprList = []
QUANTILE = 0.25
print 'stress the 1000 fixed binning based on (max-min)/1000'
a = [(-10000002000.0), (-10000001000.0), (-10000000000.0), (-1000000200.0), (-1000000100.0), (-1000000000.0), (-1000000.2), (-1000000.1), (-1000000.0), (-1000.0002), (-1000.0001), (-1000.0), (-1.0), 0.0, 1.0, 1000.0002, 1000.0001, 1000.0, 1000000.2, 1000000.1, 1000000.0, 1000000200.0, 1000000100.0, 1000000000.0, 10000002000.0, 10000001000.0, 10000000000.0]
initList = [('ddd = c(%s)' % ','.join(map(str, a)))]
a.sort()
expectedP = h2o_summ.percentileOnSortedList(a, QUANTILE, interpolate='linear')
print 'expectedP:', expectedP
h2p.blue_print('sort result, expectedP:', expectedP)
exprList = [(('abc = quantile(ddd[,1], c(%s))' % QUANTILE), 1)]
if (__name__ == '__main__'):
    h2o.unit_main()
