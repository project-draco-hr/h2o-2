def run_tests(self):
    '\n        Run all tests.\n\n        @return: none\n        '
    if self.terminated:
        return
    num_tests = len(self.tests)
    self.__log__('')
    self.__log__('Starting {} tests...'.format(num_tests))
    self.__log__('')
    while (len(self.tests_not_started) > 0):
        test = self.tests_not_started.pop(0)
        print ('Beginning test ' + test.test_name)
        try:
            isEC2 = test.aws
            xmx = test.heap_bytes_per_node
            ip = test.ip
            base_port = test.port
            nodes_in_cloud = test.total_nodes
            hosts_in_cloud = test.hosts
            if isEC2:
                raise Exception('Unimplemented: AWS support under construction...')
            cloud = H2OCloud(1, hosts_in_cloud, nodes_in_cloud, self.h2o_jar, base_port, self.output_dir, isEC2, test.remote_hosts)
            self.cloud.append(cloud)
            PerfUtils.start_cloud(self, test.remote_hosts)
            test.port = self.cloud[0].get_port()
            test.test_run = TableRow('test_run', self.perfdb)
            test.test_run.row.update(PerfUtils.__scrape_h2o_sys_info__(self))
            contamination = test.do_test(self)
            test.test_run.row['start_epoch_ms'] = test.start_ms
            test.test_run.row['end_epoch_ms'] = test.end_ms
            test.test_run.row['test_name'] = test.test_name
            print 'DEBUG: '
            print contamination
            print ''
            print ''
            test.test_run.row['contaminated'] = contamination[0]
            test.test_run.row['contamination_message'] = contamination[1]
            test.test_run.update(True)
            PerfUtils.stop_cloud(self, test.remote_hosts)
            self.cloud.pop(0)
        except:
            print 
            print 
            print ('Could not complete test ' + test.test_name)
            print 
            print 
            print 'Unexpected error:', sys.exc_info()[0]
            print 
            PerfUtils.stop_cloud(self, test.remote_hosts)
            self.cloud.pop(0)
        self.perfdb.this_test_run_id += 1
