{
  super(null);
  _job=job;
  _createFrame=createFrame;
  int[] idx=Utils.seq(0,_createFrame.cols);
  int[] shuffled_idx=new int[idx.length];
  Utils.shuffleArray(idx,idx.length,shuffled_idx,_createFrame.seed,0);
  int catcols=(int)(_createFrame.categorical_fraction * _createFrame.cols);
  int intcols=(int)(_createFrame.integer_fraction * _createFrame.cols);
  int realcols=_createFrame.cols - catcols - intcols;
  assert(catcols >= 0);
  assert(intcols >= 0);
  assert(realcols >= 0);
  _cat_cols=Arrays.copyOfRange(shuffled_idx,0,catcols);
  _int_cols=Arrays.copyOfRange(shuffled_idx,catcols,catcols + intcols);
  _real_cols=Arrays.copyOfRange(shuffled_idx,catcols + intcols,catcols + intcols + realcols);
  if (_createFrame.randomize) {
    _domain=new String[_createFrame.cols][];
    for (    int c : _cat_cols) {
      _domain[c]=new String[_createFrame.factors];
      for (int i=0; i < _createFrame.factors; ++i) {
        _domain[c][i]=UUID.randomUUID().toString().subSequence(0,5).toString();
      }
    }
  }
}
