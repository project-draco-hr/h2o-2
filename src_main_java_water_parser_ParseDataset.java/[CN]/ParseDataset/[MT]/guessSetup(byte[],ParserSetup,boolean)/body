{
  ArrayList<PSetupGuess> guesses=new ArrayList<CustomParser.PSetupGuess>();
  PSetupGuess res=null;
  if (setup == null)   setup=new ParserSetup();
switch (setup._pType) {
case CSV:
    return CsvParser.guessSetup(bits,setup,checkHeader);
case SVMLight:
  return SVMLightParser.guessSetup(bits);
case XLS:
return XlsParser.guessSetup(bits);
case AUTO:
try {
if ((res=XlsParser.guessSetup(bits)) != null && res.valid()) if (!res.hasErrors()) return res;
 else guesses.add(res);
}
 catch (Exception e) {
}
try {
if ((res=SVMLightParser.guessSetup(bits)) != null && res.valid()) if (!res.hasErrors()) return res;
 else guesses.add(res);
}
 catch (Exception e) {
}
try {
if ((res=CsvParser.guessSetup(bits,setup,true)) != null && res.valid()) if (!res.hasErrors()) return res;
 else guesses.add(res);
}
 catch (Exception e) {
}
if (guesses.isEmpty()) return null;
 else {
for (PSetupGuess guess : guesses) if (guess._invalidLines < res._invalidLines) res=guess;
return res;
}
default :
throw new IllegalArgumentException(setup._pType + " is not implemented.");
}
}
