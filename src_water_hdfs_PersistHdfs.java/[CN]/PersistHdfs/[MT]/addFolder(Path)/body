{
  int num=0;
  try {
    for (    FileStatus fs : _fs.listStatus(p)) {
      Path pfs=fs.getPath();
      if (fs.isDir()) {
        num+=addFolder(pfs);
      }
 else {
        num++;
        Key k=getKeyForPathString(pfs.toString());
        long size=fs.getLen();
        Value val=null;
        if (pfs.getName().endsWith(".hex")) {
          FSDataInputStream s=_fs.open(pfs);
          int sz=(int)Math.min(1L << 20,size);
          byte[] mem=MemoryManager.malloc1(sz);
          s.readFully(mem);
          ValueArray ary=new ValueArray(k,size,Value.HDFS).read(new AutoBuffer(mem));
          ary._persist=Value.HDFS | Value.ON_dsk;
          val=ary.value();
        }
 else         if (size >= 2 * ValueArray.CHUNK_SZ) {
          val=new ValueArray(k,size,Value.HDFS).value();
        }
 else {
          val=new Value(k,(int)size,Value.HDFS);
        }
        val.setdsk();
        H2O.putIfAbsent_raw(k,val);
      }
    }
  }
 catch (  IOException e) {
    System.err.println("[hdfs] Unable to list the folder " + p.toString() + " : "+ e);
  }
  return num;
}
