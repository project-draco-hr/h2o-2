def test_categorical_expand_and_probability_output(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    translateList = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u']
    tryList = [(7919, 53, 'cA', 600), (2659, 400, 'cB', 600)]
    for (rowCount, colCount, hex_key, timeoutSecs) in tryList:
        SEEDPERFILE = random.randint(0, sys.maxint)
        csvFilename = (((((('syn_' + str(SEEDPERFILE)) + '_') + str(rowCount)) + 'x') + str(colCount)) + '.csv')
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        print '\nCreating random', csvPathname
        write_syn_dataset(csvPathname, rowCount, colCount, SEEDPERFILE, translateList)
        print '\nUpload and parse', csvPathname
        parseResult = h2i.import_parse(path=csvPathname, schema='put', hex_key=hex_key, timeoutSecs=240, retryDelaySecs=0.5)
        print csvFilename, 'parse time:', parseResult['response']['time']
        print "Parse result['destination_key']:", parseResult['destination_key']
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
        print ('\n' + csvFilename)
        paramDict2 = {}
        for k in paramDict:
            paramDict2[k] = paramDict[k][0]
        y = colCount
        kwargs = {'y': y, 'max_iter': 20, }
        kwargs.update(paramDict2)
        start = time.time()
        glm = h2o_cmd.runGLMOnly(parseResult=parseResult, timeoutSecs=timeoutSecs, **kwargs)
        print 'glm end on ', csvPathname, 'took', (time.time() - start), 'seconds'
        print 'y:', y
        h2o_glm.simpleCheckGLM(self, glm, None, **kwargs)
