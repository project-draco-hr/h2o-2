def test_short(self):
    csvFilename = 'part-00000b'
    importFolderPath = '/home/hduser/data'
    importFolderResult = h2i.setupImportFolder(None, importFolderPath)
    csvPathname = ((importFolderPath + '/') + csvFilename)
    start = time.time()
    parseKey = h2i.parseImportFolderFile(None, csvFilename, importFolderPath, timeoutSecs=500, separator=9)
    print 'Parse of', parseKey['destination_key'], 'took', (time.time() - start), 'seconds'
    print csvFilename, 'parse time:', parseKey['response']['time']
    print "Parse result['destination_key']:", parseKey['destination_key']
    start = time.time()
    inspect = h2o_cmd.runInspect(None, parseKey['destination_key'], timeoutSecs=500)
    print 'Inspect:', parseKey['destination_key'], 'took', (time.time() - start), 'seconds'
    h2o_cmd.infoFromInspect(inspect, csvPathname)
    keepPattern = 'oly_|mt_|b_'
    y = 'is_purchase'
    print 'y:', y
    x = h2o_glm.goodXFromColumnInfo(y, keepPattern=pattern, parseKey=parseKey, timeoutSecs=300)
    print 'x:', x
    kwargs = {'x': x, 'y': y, 'family': 'binomial', 'lambda': 1e-05, 'alpha': 0.5, 'max_iter': 5, 'thresholds': 0.5, 'n_folds': 1, 'weight': 100, 'beta_epsilon': 0.0001, }
    timeoutSecs = 1800
    start = time.time()
    glm = h2o_cmd.runGLMOnly(parseKey=parseKey, timeoutSecs=timeoutSecs, pollTimeoutsecs=60, **kwargs)
    elapsed = (time.time() - start)
    print 'glm completed in', elapsed, 'seconds.', ('%d pct. of timeout' % ((elapsed * 100) / timeoutSecs))
    h2o_glm.simpleCheckGLM(self, glm, None, **kwargs)
