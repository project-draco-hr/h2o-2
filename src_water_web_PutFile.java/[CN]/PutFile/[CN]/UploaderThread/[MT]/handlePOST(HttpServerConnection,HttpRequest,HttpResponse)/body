{
  Header contentTypeHeader=request.getFirstHeader("Content-Type");
  if (contentTypeHeader == null || !contentTypeHeader.getValue().startsWith("multipart/form-data")) {
    sendError(response,HttpStatus.SC_BAD_REQUEST,"Request including multipart/form-data is expected");
    return true;
  }
  String boundary=null;
  for (  HeaderElement el : contentTypeHeader.getElements()) {
    NameValuePair nvp=el.getParameterByName("boundary");
    if (nvp != null) {
      boundary=nvp.getValue();
      break;
    }
  }
  if (boundary == null) {
    sendError(response,HttpStatus.SC_BAD_REQUEST,"Boundary is not included in request");
    return true;
  }
  conn.receiveRequestEntity((HttpEntityEnclosingRequest)request);
  if (request instanceof HttpEntityEnclosingRequest) {
    HttpMultipartEntity entity=new HttpMultipartEntity(((HttpEntityEnclosingRequest)request).getEntity(),boundary.getBytes());
    entity.skipHeader();
    Key key=ValueArray.readPut(keyname,entity.getContent());
    JsonElement jsonResult=getJsonResult(key);
    String result=jsonResult.toString();
    response.setStatusCode(HttpStatus.SC_OK);
    response.setReasonPhrase("OK");
    response.setEntity(new StringEntity(result,"application/json",HTTP.DEFAULT_CONTENT_CHARSET));
    addDefaultHeaders(response);
    response.addHeader("Content-Type","application/json");
    response.addHeader("Content-Length",String.valueOf(result.length()));
    return true;
  }
 else {
    sendError(response,HttpStatus.SC_BAD_REQUEST,"Wrong request !?");
    return true;
  }
}
