def test_PCA_UCIwine(self):
    csvFilename = 'wine.data'
    timeoutSecs = 180
    trialStart = time.time()
    trainKey = ((csvFilename + '_') + '.hex')
    start = time.time()
    parseResult = h2i.import_parse(bucket='smalldata', path=csvFilename, hex_key=trainKey, timeoutSecs=timeoutSecs)
    elapsed = (time.time() - start)
    print 'parse end on ', csvFilename, 'took', elapsed, 'seconds', ('%d pct. of timeout' % ((elapsed * 100) / timeoutSecs))
    print 'parse result:', parseResult['destination_key']
    params = {'destination_key': 'python_PCA_key', 'tolerance': 0.0, 'standardize': 1, }
    kwargs = params.copy()
    PCAResult = h2o_cmd.runPCA(parseResult=parseResult)
    print 'PCA completed in', PCAResult['python_elapsed'], 'seconds.', ('%f pct. of timeout' % PCAResult['python_%timeout'])
    h2o_pca.simpleCheckPCA(self, PCAResult)
    h2o_pca.resultsCheckPCA(self, PCAResult)
