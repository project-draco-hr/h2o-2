{
  Set<Entry<String,JsonElement>> ee=coefs.entrySet();
  Coef cs[]=new Coef[ee.size()];
  int i=0;
  for (  Entry<String,JsonElement> e : ee)   cs[i++]=new Coef(e);
  if (m._glmParams._family == Family.binomial)   Arrays.sort(cs,new Comparator<Coef>(){
    @Override public int compare(    Coef c0,    Coef c1){
      return (c0._d < c1._d) ? 1 : (c0._d == c1._d ? 0 : -1);
    }
  }
);
  StringBuilder sb=new StringBuilder();
  sb.append("<table class='table table-bordered table-condensed'>");
  sb.append("<tr>");
  for (  Coef c : cs) {
    if (c._name.equals("Intercept"))     continue;
    sb.append("<th>").append(c._name).append("</th>");
  }
  sb.append("<th>").append("Intercept").append("</th>");
  sb.append("</tr>");
  sb.append("<tr>");
  for (  Coef c : cs) {
    if (c._name.equals("Intercept"))     continue;
    sb.append("<td>").append(c._d).append("</td>");
  }
  sb.append("<td>").append(coefs.get("Intercept").getAsDouble()).append("</td>");
  sb.append("</tr>");
  sb.append("</table>");
  return sb.toString();
}
