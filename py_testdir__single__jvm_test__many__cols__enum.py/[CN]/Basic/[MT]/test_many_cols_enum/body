def test_many_cols_enum(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    tryList = [(100, 11000, 'cA', 50), (100, 10000, 'cB', 50), (100, 9000, 'cC', 50), (100, 8000, 'cD', 50), (100, 7000, 'cE', 50), (100, 6000, 'cF', 50), (100, 5000, 'cG', 50)]
    lenNodes = len(h2o.nodes)
    cnum = 0
    for (rowCount, colCount, hex_key, timeoutSecs) in tryList:
        cnum += 1
        csvFilename = (((((('syn_' + str(SEED)) + '_') + str(rowCount)) + 'x') + str(colCount)) + '.csv')
        csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
        print 'Creating random', csvPathname
        write_syn_dataset(csvPathname, rowCount, colCount, SEED)
        parseResult = h2i.import_parse(path=csvPathname, schema='put', hex_key=hex_key, timeoutSecs=10)
        print csvFilename, 'parse time:', parseResult['response']['time']
        print "Parse result['destination_key']:", parseResult['destination_key']
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
        print ('\n' + csvFilename)
        if (not h2o.browse_disable):
            h2b.browseJsonHistoryAsUrlLastMatch('Inspect')
            time.sleep(5)
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'], offset=100, view=100)
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'], offset=99, view=89)
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'], offset=(-1), view=53)
