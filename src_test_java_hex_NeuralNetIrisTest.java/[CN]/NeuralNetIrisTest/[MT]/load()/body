{
  Key file=NFSFileVec.make(new File(PATH));
  Key pars=Key.make();
  Frame frame=ParseDataset2.parse(pars,new Key[]{file});
  UKV.remove(file);
  double[][] rows=new double[(int)frame.numRows()][frame.numCols()];
  for (int c=0; c < frame.numCols(); c++)   for (int r=0; r < frame.numRows(); r++)   rows[r][c]=frame._vecs[c].at(r);
  MersenneTwisterRNG rand=new MersenneTwisterRNG(MersenneTwisterRNG.SEEDS);
  for (int i=rows.length - 1; i >= 0; i--) {
    int shuffle=rand.nextInt(i + 1);
    double[] row=rows[shuffle];
    rows[shuffle]=rows[i];
    rows[i]=row;
  }
  int limit=(int)frame.numRows() * 80 / 100;
  _train=frame(rows,0,limit);
  _test=frame(rows,limit,(int)frame.numRows() - limit);
  UKV.remove(pars);
}
