{
  Key raw=Key.make("poisson_test_data_raw");
  Key parsed=Key.make("poisson_test_data_parsed");
  Key modelKey=Key.make("poisson_test");
  GLMModel model=null;
  Frame fr=null;
  try {
    FVecTest.makeByteVec(raw,"x,y\n0,2\n1,4\n2,8\n3,16\n4,32\n5,64\n6,128\n7,256");
    fr=ParseDataset2.parse(parsed,new Key[]{raw});
    new GLM2("GLM test of poisson regression.",Key.make(),modelKey,new Source(fr,fr.lastVec(),false),Family.poisson).setRegularization(new double[]{0},new double[]{0}).doInit().fork().get();
    model=DKV.get(modelKey).get();
    for (    double c : model.beta())     assertEquals(Math.log(2),c,1e-4);
    model.delete();
    fr.delete();
    FVecTest.makeByteVec(raw,"x,y\n1,0\n2,1\n3,2\n4,3\n5,1\n6,4\n7,9\n8,18\n9,23\n10,31\n11,20\n12,25\n13,37\n14,45\n");
    fr=ParseDataset2.parse(parsed,new Key[]{raw});
    new GLM2("GLM test of poisson regression(2).",Key.make(),modelKey,new Source(fr,fr.lastVec(),false),Family.poisson).setRegularization(new double[]{0},new double[]{0}).doInit().fork().get();
    model=DKV.get(modelKey).get();
    testHTML(model);
    assertEquals(0.3396,model.beta()[1],5e-3);
    assertEquals(0.2565,model.beta()[0],5e-3);
  }
  finally {
    if (fr != null)     fr.delete();
    if (model != null)     model.delete();
  }
}
