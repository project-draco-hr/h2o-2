{
  Arg arg=defaultArg();
  if (Interop.getAttributeAsString(ai.getAny(args,"data"),"h2okind") != "HEX")   return Interop.asRString("Error wrong data argument");
  arg.data=ai.get(args,"data",arg.data);
  arg.X=Interop.asIntArray(ai.getAny(args,"X"));
  arg.Y=Interop.asInteger(ai.getAny(args,"Y"));
  arg.family=ai.get(args,"family",arg.family);
  arg.normalize=ai.get(args,"normalize",arg.normalize);
  if (ai.provided("lambda"))   arg.lambda=Interop.asDouble(ai.getAny(args,"lambda"));
  if (ai.provided("alpha"))   arg.alpha=Interop.asDouble(ai.getAny(args,"alpha"));
  Res res=execute(arg);
  if (res.error == null) {
    String ds=res.result._selfKey.toString();
    RAny rds=Interop.asRString(ds);
    rds=Interop.setAttribute(rds,"h2okind","GLM.MODEL");
    rds=Interop.setAttribute(rds,"json",res.result.toJson().toString());
    return rds;
  }
 else   return Interop.asRString(res.error.toString());
}
