def test_rf_covtype_train_oobe(self):
    print '\nRun test iterations/compare with covtype.data'
    rfv1 = self.rf_covtype_train_oobe('covtype.data', checkExpectedResults=False)
    print '\nRun test iterations/compare with covtype.shuffled.data'
    rfv2 = self.rf_covtype_train_oobe('covtype.shuffled.data', checkExpectedResults=True)
    print '\nRun test iterations/compare with covtype.sorted.data'
    rfv3 = self.rf_covtype_train_oobe('covtype.sorted.data', checkExpectedResults=False)
    print 'rfv3, from covtype.sorted.data'
    print h2o.dump_json(rfv3)
    print '\nJsonDiff covtype.data rfv, to covtype.sorted.data rfv'
    df = h2o_util.JsonDiff(rfv1, rfv3, with_values=True)
    print 'df.difference:', h2o.dump_json(df.difference)
    ce1 = rfv1['confusion_matrix']['classification_error']
    ce3 = rfv3['confusion_matrix']['classification_error']
    self.assertAlmostEqual(ce1, ce3, places=3, msg=("classication error %s isn't close to that when sorted %s" % (ce1, ce3)))
