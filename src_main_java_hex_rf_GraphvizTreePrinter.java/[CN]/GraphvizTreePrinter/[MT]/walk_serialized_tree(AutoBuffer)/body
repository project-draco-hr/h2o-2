{
  try {
    _dest.append("digraph {\n");
    new Tree.TreeVisitor<IOException>(tbits){
      protected Tree.TreeVisitor leaf(      int tclass) throws IOException {
        String x=_classNames != null && tclass < _classNames.length ? String.format("%d [label=\"%s\"];\n",_ts.position() - 2,_classNames[tclass]) : String.format("%d [label=\"Class %d\"];\n",_ts.position() - 2,tclass);
        _dest.append(x);
        return this;
      }
      protected Tree.TreeVisitor pre(      int col,      float fcmp,      int off0,      int offl,      int offr) throws IOException {
        byte b=(byte)_ts.get1(off0);
        _dest.append(String.format("%d [label=\"%s %s %f\"];\n",off0,_cols[col]._name,((b == 'E') ? "==" : "<="),fcmp));
        _dest.append(String.format("%d -> %d;\n",off0,offl));
        _dest.append(String.format("%d -> %d;\n",off0,offr));
        return this;
      }
    }
.visit();
    _dest.append("}");
    if (_dest instanceof Flushable)     ((Flushable)_dest).flush();
  }
 catch (  IOException e) {
    throw new Error(e);
  }
}
