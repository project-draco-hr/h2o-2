{
  byte bs[]=_clss1[bin];
  if (bs == null)   _clss1[bin]=bs=new byte[_nclass];
  long x=bs[cls] + v;
  if (x <= Byte.MAX_VALUE)   return (bs[cls]=(byte)x);
  bs[cls]=0;
  if (_clss2 == null)   _clss2=new short[_nbins][];
  short ss[]=_clss2[bin];
  if (ss == null)   _clss2[bin]=ss=new short[_nclass];
  long y=ss[cls] + x;
  if (y <= Short.MAX_VALUE)   return (ss[cls]=(short)y);
  ss[cls]=0;
  if (_clss4 == null)   _clss4=new int[_nbins][];
  int is[]=_clss4[bin];
  if (is == null)   _clss4[bin]=is=new int[_nclass];
  long z=is[cls] + y;
  if (z <= Integer.MAX_VALUE)   return (is[cls]=(int)z);
  is[cls]=0;
  if (_clss8 == null)   _clss8=new long[_nbins][];
  long ls[]=_clss8[bin];
  if (ls == null)   _clss8[bin]=ls=new long[_nclass];
  return (ls[cls]+=z);
}
