{
  Log.info("Parsing data.");
  long seed=0xC0FFEE;
  double fraction=1.0;
  Frame trainf=sampleFrame(TestUtil.parseFromH2OFolder("smalldata/mnist/train.csv.gz"),(long)(60000 * fraction),seed);
  Frame testf=sampleFrame(TestUtil.parseFromH2OFolder("smalldata/mnist/test.csv.gz"),(long)(10000 * fraction),seed + 1);
  Log.info("Done.");
  NN p=new NN();
  p.seed=seed;
  p.hidden=new int[]{128,128,256};
  p.rate=0.01;
  p.activation=NN.Activation.RectifierWithDropout;
  p.loss=NN.Loss.CrossEntropy;
  p.input_dropout_ratio=0.4;
  p.max_w2=15;
  p.epochs=2;
  p.rate_annealing=1e-6;
  p.l1=1e-5;
  p.l2=0;
  p.momentum_start=0.5;
  p.momentum_ramp=1800000;
  p.momentum_stable=0.99;
  p.initial_weight_distribution=NN.InitialWeightDistribution.UniformAdaptive;
  p.classification=true;
  p.diagnostics=false;
  p.expert_mode=true;
  p.score_training_samples=1000;
  p.score_validation_samples=10000;
  p.validation=testf;
  p.source=trainf;
  p.response=trainf.lastVec();
  p.ignored_cols=null;
  p.sync_samples=60000;
  p.score_interval=1;
  return p.exec();
}
