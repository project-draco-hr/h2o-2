{
  Value val=_key.value();
  if (val.type() == TypeMap.PRIM_B)   return serveUnparsedValue(val);
  Iced f=val.get();
  if (f instanceof ValueArray)   return serveValueArray((ValueArray)f);
  if (f instanceof GLMModel) {
    GLMModel m=(GLMModel)f;
    JsonObject res=new JsonObject();
    res.add("GLMModel",m.toJson());
    Response r=Response.done(res);
    r.setBuilder("",new GLMBuilder(m));
    return r;
  }
  if (f instanceof hex.GLMGrid.GLMModels) {
    hex.GLMGrid.GLMModels m=(hex.GLMGrid.GLMModels)f;
    JsonObject resp=new JsonObject();
    resp.addProperty(Constants.DEST_KEY,val._key.toString());
    return GLMGridProgress.redirect(resp,null,val._key);
  }
  if (f instanceof KMeansModel) {
    KMeansModel m=(KMeansModel)f;
    JsonObject res=new JsonObject();
    res.add("KMeansModel",m.toJson());
    Response r=Response.done(res);
    return r;
  }
  if (f instanceof RFModel) {
    JsonObject res=new JsonObject();
    return RFView.redirect(res,val._key);
  }
  if (f instanceof Job.Fail) {
    UKV.remove(val._key);
    return Response.error(((Job.Fail)f)._message);
  }
  return Response.error("No idea how to display a " + f.getClass());
}
