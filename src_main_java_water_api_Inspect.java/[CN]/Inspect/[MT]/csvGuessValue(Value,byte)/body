{
  byte[] bs=v.getFirstBytes();
  int off=0;
  InputStream is=null;
  try {
switch (water.parser.ParseDataset.guessCompressionMethod(v)) {
case NONE:
      off=bs.length;
    break;
case ZIP:
{
    ZipInputStream zis=new ZipInputStream(v.openStream());
    ZipEntry ze=zis.getNextEntry();
    if (ze != null && !ze.isDirectory())     is=zis;
 else     zis.close();
    break;
  }
case GZIP:
is=new GZIPInputStream(v.openStream());
break;
}
if (is != null) bs=new byte[bs.length * 2];
while (off < bs.length) {
int len=is.read(bs,off,bs.length - off);
if (len < 0) break;
off+=len;
if (off == bs.length) {
if (bs.length >= ValueArray.CHUNK_SZ) break;
bs=Arrays.copyOf(bs,bs.length * 2);
}
}
}
 catch (IOException ioe) {
Log.err(ioe);
}
 finally {
Utils.close(is);
}
if (off < bs.length) bs=Arrays.copyOf(bs,off);
return CsvParser.inspect(bs,separator);
}
