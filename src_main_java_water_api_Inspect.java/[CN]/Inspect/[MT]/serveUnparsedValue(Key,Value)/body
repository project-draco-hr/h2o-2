{
  JsonObject result=new JsonObject();
  result.addProperty(VALUE_TYPE,"unparsed");
  byte[] bits=v.getFirstBytes();
  bits=Utils.unzipBytes(bits,Utils.guessCompressionMethod(bits));
  CustomParser.ParserSetup setup=ParseDataset.guessSetup(bits);
  if (setup._data != null && setup._data[1].length > 0) {
    int zipped_len=v.getFirstBytes().length;
    double bytes_per_row=(double)zipped_len / setup._data.length;
    long rows=(long)(v.length() / bytes_per_row);
    result.addProperty(NUM_ROWS,"~" + rows);
    result.addProperty(NUM_COLS,setup._data[1].length);
    result.add(ROWS,new Gson().toJsonTree(setup._data));
  }
 else {
    result.addProperty(NUM_ROWS,"unknown");
    result.addProperty(NUM_COLS,"unknown");
  }
  result.addProperty(VALUE_SIZE,v.length());
  Response r=Response.done(result);
  r.addHeader("<div class='alert'>" + Parse.link(key,"Parse into hex format") + " or "+ RReader.link(key,"from R data")+ " </div>");
  r.setBuilder(ROWS,new ArrayBuilder(){
    public String caption(    JsonArray array,    String name){
      return "<h4>First few sample rows</h4>";
    }
  }
);
  return r;
}
