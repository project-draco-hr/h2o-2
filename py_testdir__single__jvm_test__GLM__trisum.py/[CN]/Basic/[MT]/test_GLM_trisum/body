def test_GLM_trisum(self):
    csvFilename = 'logreg_trisum_int_cat_10000x10.csv'
    csvPathname = ('smalldata/logreg/' + csvFilename)
    key2 = (csvFilename + '.hex')
    parseResult = h2o_cmd.parseFile(None, h2o.find_file(csvPathname), key2=key2, timeoutSecs=10)
    print csvFilename, 'parse time:', parseResult['response']['time']
    print "Parse result['destination_key']:", parseResult['destination_key']
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    print ('\n' + csvFilename)
    paramDict = define_params()
    paramDict2 = {}
    for k in paramDict:
        paramDict2[k] = paramDict[k][0]
    y = 10
    kwargs = {'y': y, 'max_iter': 50, }
    kwargs.update(paramDict2)
    start = time.time()
    glm = h2o_cmd.runGLMOnly(parseResult=parseKey, timeoutSecs=20, **kwargs)
    print 'glm end on ', csvPathname, 'took', (time.time() - start), 'seconds'
    h2o_glm.simpleCheckGLM(self, glm, 8, **kwargs)
    if (not h2o.browse_disable):
        h2b.browseJsonHistoryAsUrlLastMatch('Inspect')
        time.sleep(5)
