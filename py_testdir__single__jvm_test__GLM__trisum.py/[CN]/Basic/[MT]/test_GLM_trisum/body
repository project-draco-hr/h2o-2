def test_GLM_trisum(self):
    csvFilename = 'logreg_trisum_int_cat_10000x10.csv'
    csvPathname = ('logreg/' + csvFilename)
    hex_key = (csvFilename + '.hex')
    parseResult = h2i.import_parse(bucket='smalldata', path=csvPathname, hex_key=hex_key, timeoutSecs=10, schema='put')
    print csvFilename, 'parse time:', parseResult['response']['time']
    print "Parse result['destination_key']:", parseResult['destination_key']
    inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
    print ('\n' + csvFilename)
    paramDict = define_params()
    paramDict2 = {}
    for k in paramDict:
        paramDict2[k] = paramDict[k][0]
    y = 10
    kwargs = {'y': y, 'max_iter': 50, }
    kwargs.update(paramDict2)
    start = time.time()
    glm = h2o_cmd.runGLM(parseResult=parseResult, timeoutSecs=20, **kwargs)
    print 'glm end on ', csvPathname, 'took', (time.time() - start), 'seconds'
    h2o_glm.simpleCheckGLM(self, glm, 'C9', **kwargs)
    if (not h2o.browse_disable):
        h2b.browseJsonHistoryAsUrlLastMatch('Inspect')
        time.sleep(5)
