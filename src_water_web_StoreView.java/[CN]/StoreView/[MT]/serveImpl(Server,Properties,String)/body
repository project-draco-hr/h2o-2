{
  RString response=new RString(html);
  int offset=0;
  try {
    offset=Integer.valueOf(args.getProperty("o","0"));
  }
 catch (  NumberFormatException e) {
  }
  H2O cloud=H2O.CLOUD;
  Key[] keys=new Key[1024];
  int len=0;
  String filter=args.getProperty("Filter");
  String html_filter=(filter == null ? "" : "?Filter=" + filter);
  for (  Key key : H2O.keySet()) {
    if (filter != null && key.toString().indexOf(filter) == -1)     continue;
    if (!key.user_allowed())     continue;
    if (H2O.get(key) == null)     continue;
    keys[len++]=key;
    if (len == keys.length)     break;
  }
  Arrays.sort(keys,0,len);
  formatPagination(offset,len,html_filter,response);
  offset*=KEYS_PER_PAGE;
  for (int i=offset; i < offset + KEYS_PER_PAGE; i++) {
    if (i >= len)     break;
    Value val=H2O.get(keys[i]);
    formatKeyRow(cloud,keys[i],val,response);
  }
  response.replace("noOfKeys",len);
  response.replace("cloud_name",H2O.NAME);
  response.replace("node_name",H2O.SELF.toString());
  if (filter != null)   response.replace("pvalue","value='" + filter + "'");
  return response.toString();
}
