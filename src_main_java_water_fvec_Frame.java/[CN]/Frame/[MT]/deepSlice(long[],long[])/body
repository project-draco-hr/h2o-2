{
  int c2[]=null;
  if (cols == null) {
    c2=new int[numCols()];
    for (int i=0; i < cols.length; i++)     cols[i]=i;
  }
 else   if (cols.length == 0) {
    c2=new int[0];
  }
 else   if (cols[0] > 0) {
    c2=new int[cols.length];
    for (int i=0; i < cols.length; i++)     c2[i]=(int)cols[i] - 1;
  }
 else {
    c2=new int[numCols() - cols.length];
    int j=0;
    for (int i=0; i < numCols(); i++) {
      if (j >= cols.length || i < (-cols[j] - 1))       c2[i - j]=i;
 else       j++;
    }
  }
  Frame fr2=new DeepSlice(rows,c2).doAll(c2.length,this)._outputFrame;
  Futures fs=new Futures();
  Vec[] vec2=fr2.vecs();
  String domains[][]=domains();
  String ns[]=new String[c2.length];
  for (int i=0; i < c2.length; i++) {
    ns[i]=_names[c2[i]];
    vec2[i]._domain=domains[c2[i]];
    DKV.put(vec2[i]._key,vec2[i],fs);
  }
  fr2._names=ns;
  fs.blockForPending();
  System.out.println(fr2.toStringAll());
  return fr2;
}
