def test_kmeans_sphere3(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    csvFilename = (('syn_spheres3_' + str(SEED)) + '.csv')
    csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
    write_syn_dataset(csvPathname, 1000000, SEED)
    print '\nStarting', csvFilename
    parseKey = h2o_cmd.parseFile(csvPathname=csvPathname, key2=(csvFilename + '.hex'))
    kwargs = {'k': 3, 'epsilon': 1e-06, 'cols': None, 'destination_key': 'spheres3.hex', }
    timeoutSecs = 30
    start = time.time()
    kmeans = h2o_cmd.runKMeansOnly(parseKey=parseKey, timeoutSecs=timeoutSecs, **kwargs)
    elapsed = (time.time() - start)
    print 'kmeans end on ', csvPathname, 'took', elapsed, 'seconds.', ('%d pct. of timeout' % ((elapsed / timeoutSecs) * 100))
    h2o_kmeans.simpleCheckKMeans(self, kmeans, **kwargs)
    model_key = kmeans['destination_key']
    kmeansResult = h2o_cmd.runInspect(key=model_key)
    centers = kmeansResult['KMeansModel']['clusters']
    centersSorted = sorted(centers, key=itemgetter(0))
    self.assertAlmostEqual(centersSorted[0][0], 100, delta=0.2)
    self.assertAlmostEqual(centersSorted[1][0], 200, delta=0.2)
    self.assertAlmostEqual(centersSorted[2][0], 300, delta=0.2)
    self.assertAlmostEqual(centersSorted[0][1], 100, delta=0.2)
    self.assertAlmostEqual(centersSorted[1][1], 200, delta=0.2)
    self.assertAlmostEqual(centersSorted[2][1], 300, delta=0.2)
    self.assertAlmostEqual(centersSorted[0][2], 100, delta=0.2)
    self.assertAlmostEqual(centersSorted[1][2], 200, delta=0.2)
    self.assertAlmostEqual(centersSorted[2][2], 300, delta=0.2)
    show_results(csvPathname, parseKey, model_key, centers, 'd')
