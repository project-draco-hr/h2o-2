{
  byte[] payload=new byte[msg_size];
  new Random().nextBytes(payload);
  final int siz=H2O.CLOUD.size();
  double[] times=new double[siz];
  for (int i=0; i < siz; ++i) {
    Log.debug("NetworkTest send_recv_all starting PingPong to node " + i + "...");
    H2ONode node=H2O.CLOUD._memary[i];
    Timer t=new Timer();
    for (int l=0; l < repeats; ++l) {
      Log.debug("NetworkTest send_recv_all starting iteration " + l + " of "+ repeats+ " ...");
      PingPongTask ppt=new PingPongTask(payload);
      new RPC<PingPongTask>(node,ppt).call().get();
      Log.debug("NetworkTest send_recv_all completed iteration " + l + " of "+ repeats);
    }
    times[i]=(double)t.nanos() / repeats;
    Log.debug("NetworkTest send_recv_all completed PingPong to node " + i);
  }
  return times;
}
