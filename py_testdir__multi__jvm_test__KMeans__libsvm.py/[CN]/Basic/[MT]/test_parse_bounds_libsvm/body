def test_parse_bounds_libsvm(self):
    importFolderPath = '/home/0xdiag/datasets/libsvm'
    csvFilenameList = [('tmc2007_train.svm', 'cJ', 30, 1), ('covtype.binary.svm', 'cC', 30, 1), ('colon-cancer.svm', 'cA', 30, 1), ('connect4.svm', 'cB', 30, 1), ('duke.svm', 'cD', 30, 1), ('gisette_scale.svm', 'cF', 30, 1), ('mushrooms.svm', 'cG', 30, 1), ('news20.svm', 'cH', 30, 1), ('syn_6_1000_10.svm', 'cK', 30, 1), ('syn_0_100_1000.svm', 'cL', 30, 1), ('mnist_training.svm', 'cM', 30, 1)]
    lenNodes = len(h2o.nodes)
    firstDone = False
    for (csvFilename, key2, timeoutSecs, resultMult) in csvFilenameList:
        h2i.setupImportFolder(None, importFolderPath)
        csvPathname = ((importFolderPath + '/') + csvFilename)
        parseKey = h2i.parseImportFolderFile(None, csvFilename, importFolderPath, key2=key2, timeoutSecs=2000)
        print csvPathname, 'parse time:', parseKey['response']['time']
        print "Parse result['destination_key']:", parseKey['destination_key']
        start = time.time()
        inspect = h2o_cmd.runInspect(None, parseKey['destination_key'], timeoutSecs=360)
        print 'Inspect:', parseKey['destination_key'], 'took', (time.time() - start), 'seconds'
        h2o_cmd.infoFromInspect(inspect, csvFilename)
        for trial in range(2):
            kwargs = {'k': 3, 'epsilon': 1e-06, 'seed': 265211114317615310, }
            timeoutSecs = 600
            start = time.time()
            kmeans = h2o_cmd.runKMeansOnly(parseKey=parseKey, timeoutSecs=timeoutSecs, **kwargs)
            elapsed = (time.time() - start)
            print 'kmeans end on ', csvPathname, 'took', elapsed, 'seconds.', ('%d pct. of timeout' % ((elapsed / timeoutSecs) * 100))
            h2o_kmeans.simpleCheckKMeans(self, kmeans, **kwargs)
            (centers, tupleResultList) = h2o_kmeans.bigCheckResults(self, kmeans, csvPathname, parseKey, 'd', **kwargs)
