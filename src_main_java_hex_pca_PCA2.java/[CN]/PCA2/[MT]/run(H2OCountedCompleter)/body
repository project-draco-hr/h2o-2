{
  final H2OCountedCompleter fjt=new H2OEmptyCompleter();
  if (completer != null)   fjt.setCompleter(completer);
  start(fjt);
  UKV.remove(dest());
  Vec[] vecs=selectVecs(source);
  ArrayList<Integer> constantOrNAs=new ArrayList<Integer>();
  for (int i=0; i < vecs.length; i++) {
    if (vecs[i].min() == vecs[i].max() || vecs[i].naCnt() > vecs[i].length() * 0.2 || vecs[i].domain() != null)     constantOrNAs.add(i);
  }
  if (!constantOrNAs.isEmpty()) {
    int[] cols=new int[constantOrNAs.size()];
    for (int i=0; i < cols.length; i++)     cols[i]=constantOrNAs.get(i);
  }
  return fjt;
}
