def __init__(self, test_root_dir, output_dir, nodes_in_cloud, xmx, h2o_jar, use_cloud=False, use_ip='', use_port='', base_port=40000):
    '\n        Create runner.\n\n        @param test_root_dir: h2o/bench2/tests\n        @param output_dir: Directory of output files\n        @param nodes_in_cloud: Number of H2O nodes to start\n        @param xmx: Java -Xmx parameter\n        @param use_cloud: Use this user-specified cloud\n        @param use_ip: if use_cloud: use_ip\n        @param use_port: if use_cloud: use_port\n        @param base_port: Base H2O port (e.g. 54321) to start choosing from.\n        '
    self.test_root_dir = test_root_dir
    self.output_dir = output_dir
    self.nodes_in_cloud = nodes_in_cloud
    self.xmx = xmx
    self.use_cloud = use_cloud
    self.use_ip = use_ip
    self.use_port = use_port
    self.base_port = base_port
    self.h2o_jar = h2o_jar
    self.start_seconds = time.time()
    self.jvm_output_file = ''
    self.terminated = False
    self.cloud = ''
    self.tests = []
    self.tests_not_started = []
    self.tests_running = []
    self.__create_output_dir__()
    if use_cloud:
        cloud = H2OUseCloud(0, use_ip, use_port)
        self.cloud = cloud
    else:
        cloud = H2OCloud(1, self.nodes_in_cloud, h2o_jar, self.base_port, xmx, self.output_dir)
        self.cloud = cloud
