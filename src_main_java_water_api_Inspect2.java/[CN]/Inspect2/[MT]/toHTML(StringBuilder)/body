{
  Key skey=src_key.value();
  Frame fr=DKV.get(skey).get();
  final int numCols=fr.numCols();
  DocGen.HTML.title(sb,skey.toString());
  DocGen.HTML.arrayHead(sb);
  sb.append("<tr class='warning'>");
  sb.append("<td>").append("Row").append("</td>");
  for (int i=0; i < numCols; i++)   sb.append("<td><b>").append(fr._names[i]).append("</b></td>");
  sb.append("</tr>");
  sb.append("<tr class='warning'>");
  sb.append("<td>").append("Min").append("</td>");
  for (int i=0; i < numCols; i++)   sb.append("<td>").append(x3(fr._vecs[i].min())).append("</td>");
  sb.append("</tr>");
  sb.append("<tr class='warning'>");
  sb.append("<td>").append("Max").append("</td>");
  for (int i=0; i < numCols; i++)   sb.append("<td>").append(x3(fr._vecs[i].max())).append("</td>");
  sb.append("</tr>");
  boolean hasNAs=false;
  long nas[]=new long[numCols];
  for (int i=0; i < numCols; i++)   if ((nas[i]=fr._vecs[i].NAcnt()) > 0)   hasNAs=true;
  if (hasNAs) {
    sb.append("<tr class='warning'>");
    sb.append("<td>").append("Missing").append("</td>");
    for (int i=0; i < numCols; i++)     sb.append("<td>").append(nas[i] > 0 ? Long.toString(nas[i]) : "").append("</td>");
    sb.append("</tr>");
  }
  int N=(int)Math.min(100,fr.numRows());
  for (int j=0; j < N; j++) {
    sb.append("<tr>");
    sb.append("<td>").append(j).append("</td>");
    for (int i=0; i < numCols; i++)     sb.append("<td>").append(x1(fr._vecs[i],j)).append("</td>");
    sb.append("</tr>");
  }
  DocGen.HTML.arrayTail(sb);
  return true;
}
