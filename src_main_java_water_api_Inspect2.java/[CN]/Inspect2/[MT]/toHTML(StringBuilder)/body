{
  Key skey=src_key.value();
  DocGen.HTML.title(sb,skey.toString());
  DocGen.HTML.section(sb,"" + numCols + " columns, "+ numRows+ " rows, "+ PrettyPrint.bytes(byteSize));
  DocGen.HTML.arrayHead(sb);
  sb.append("<tr class='warning'>");
  sb.append("<td>").append("Row").append("</td>");
  for (int i=0; i < cols.length; i++)   sb.append("<td><b>").append(cols[i].name).append("</b></td>");
  sb.append("</tr>");
  sb.append("<tr class='warning'>");
  sb.append("<td>").append("Min").append("</td>");
  for (int i=0; i < cols.length; i++)   sb.append("<td>").append(x3(cols[i].min)).append("</td>");
  sb.append("</tr>");
  sb.append("<tr class='warning'>");
  sb.append("<td>").append("Max").append("</td>");
  for (int i=0; i < cols.length; i++)   sb.append("<td>").append(x3(cols[i].max)).append("</td>");
  sb.append("</tr>");
  sb.append("<tr class='warning'>");
  sb.append("<td>").append("Mean").append("</td>");
  for (int i=0; i < cols.length; i++)   sb.append("<td>").append(String.format("%5.3f",cols[i].mean)).append("</td>");
  sb.append("</tr>");
  sb.append("<tr class='warning'>");
  sb.append("<td>").append("Type").append("</td>");
  for (int i=0; i < cols.length; i++)   sb.append("<td>").append(cols[i].type).append("</td>");
  sb.append("</tr>");
  boolean hasNAs=false;
  for (int i=0; i < cols.length; i++)   if (cols[i].NAcnt > 0)   hasNAs=true;
  if (hasNAs) {
    sb.append("<tr class='warning'>");
    sb.append("<td>").append("Missing").append("</td>");
    for (int i=0; i < cols.length; i++)     sb.append("<td>").append(cols[i].NAcnt > 0 ? Long.toString(cols[i].NAcnt) : "").append("</td>");
    sb.append("</tr>");
  }
  Frame fr=DKV.get(skey).get();
  int N=(int)Math.min(100,numRows);
  for (int j=0; j < N; j++) {
    sb.append("<tr>");
    sb.append("<td>").append(j).append("</td>");
    for (int i=0; i < cols.length; i++)     sb.append("<td>").append(x1(fr._vecs[i],j)).append("</td>");
    sb.append("</tr>");
  }
  DocGen.HTML.arrayTail(sb);
  return true;
}
