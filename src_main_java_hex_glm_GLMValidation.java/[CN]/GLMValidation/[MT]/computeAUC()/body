{
  if (_cms == null)   return;
  tprs=new double[_cms.length];
  fprs=new double[_cms.length];
  double auc=0;
  double TPR_pre=1;
  double FPR_pre=1;
  for (int t=0; t < _cms.length; ++t) {
    double TPR=1 - _cms[t].classErr(1);
    double FPR=_cms[t].classErr(0);
    auc+=trapeziod_area(FPR_pre,FPR,TPR_pre,TPR);
    TPR_pre=TPR;
    FPR_pre=FPR;
    tprs[t]=TPR;
    fprs[t]=FPR;
  }
  auc+=trapeziod_area(FPR_pre,0,TPR_pre,0);
  this.auc=auc;
  if (_glm.family == Family.binomial) {
    int best=0;
    for (int i=1; i < _cms.length; ++i) {
      if (Math.max(_cms[i].classErr(0),_cms[i].classErr(1)) < Math.max(_cms[best].classErr(0),_cms[best].classErr(1)))       best=i;
    }
    best_threshold=best * 0.01f;
  }
}
