def test_parse_multi_exclude_fvec(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    translateList = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u']
    tryList = [(300, 100, 'cA', 60, '*x[2-5]*'), (310, 200, 'cB', 60, '*x[1,3-5]*'), (320, 300, 'cC', 60, '*x[1-2,4-5]*'), (330, 400, 'cD', 60, '*x[1-3-5]*'), (340, 500, 'cE', 60, '*x[1-4]*')]
    cnum = 0
    for (rowCount, colCount, hex_key, timeoutSecs, excludePattern) in tryList:
        cnum += 1
        print 'Wait while', FILENUM, 'synthetic files are created in', SYNDATASETS_DIR
        rowxcol = ((str(rowCount) + 'x') + str(colCount))
        for fileN in range(FILENUM):
            csvFilename = (((((('syn_' + str(fileN)) + '_') + str(SEED)) + '_') + rowxcol) + '.csv')
            csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
            write_syn_dataset(csvPathname, rowCount, colCount, SEED, translateList)
    for (rowCount, colCount, hex_key, timeoutSecs, excludePattern) in tryList:
        cnum += 1
        fileList = os.listdir(SYNDATASETS_DIR)
        for f in fileList:
            print f
            h2i.import_only(path=((SYNDATASETS_DIR + '/') + f), schema='put')
        parseResult = h2i.parse_only(pattern='*syn_*', hex_key=hex_key, exclude=excludePattern, header=1, timeoutSecs=timeoutSecs)
        print ("parseResult['destination_key']: " + parseResult['destination_key'])
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'])
        h2o_cmd.infoFromInspect(inspect, csvPathname)
        numRows = inspect['numRows']
        numCols = inspect['numCols']
        print (('\n' + parseResult['destination_key']) + ':'), '    numRows:', '{:,}'.format(numRows), '    numCols:', '{:,}'.format(numCols)
        self.assertEqual(numRows, (rowCount * FILENUM), msg=('got numRows: %s. Should be rowCount: %s * FILENUM: %s' % (numRows, rowCount, FILENUM)))
