{
  Timer t_gbm=new Timer();
  final int ncols=fr._vecs.length - 1;
  Vec vs[]=fr._vecs;
  Vec vresponse=vs[ncols];
  final long nrows=vresponse.length();
  int ymin=(int)vresponse.min();
  int numClasses=vresponse._isInt ? ((int)vresponse.max() - ymin + 1) : 0;
  Vec vnids=Vec.makeZero(vs[0]);
  fr.add("NIDs",vnids);
  Tree tree=new Tree();
  tree.newNode(null,Histogram.initialHist(fr,ncols));
  int leaf=0;
  for (int depth=0; depth < maxDepth; depth++) {
    ScoreBuildHistogram sbh=new ScoreBuildHistogram(tree,leaf,ncols,numClasses,ymin).doAll(fr);
    final int tmax=tree._len;
    for (int i=leaf; i < tmax; i++)     tree.n(i)._hs=sbh._hcs[i - leaf];
    for (; leaf < tmax; leaf++)     pickSplits(tree,tree.n(leaf),fr,ncols);
  }
  Log.info(Sys.GBM__,"GBM done in " + t_gbm);
  Timer t_score=new Timer();
  new BulkScore(tree,numClasses,ymin).doAll(fr).report(nrows,maxDepth);
  Log.info(Sys.GBM__,"GBM score done in " + t_score);
  UKV.remove(fr.remove("NIDs")._key);
}
