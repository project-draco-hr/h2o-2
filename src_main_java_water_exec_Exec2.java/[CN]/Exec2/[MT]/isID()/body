{
  if (_x >= _buf.length)   return null;
  char c=_buf[_x];
  if (isReserved(c))   return null;
  if (isDigit(c))   return null;
  _x++;
  if (isLetter(c)) {
    int x=_x - 1;
    while (_x < _buf.length && isLetter2(_buf[_x]))     _x++;
    return _str.substring(x,_x);
  }
  if ((_x > 0) && (_x + 3) > _buf.length) {
  }
 else {
    char[] carr=new char[3];
    carr[0]=_buf[_x - 1 + 0];
    carr[1]=_buf[_x - 1 + 1];
    carr[2]=_buf[_x - 1 + 2];
    String s=new String(carr);
    if (s.equals("%*%")) {
      return s;
    }
  }
  if (_x >= _buf.length)   return _str.substring(_x - 1,_x);
  char c2=_buf[_x];
  if (isDigit(c2) || isLetter(c2) || isWS(c2)|| isReserved(c2)) {
    if (c == '=') {
      _x--;
      return null;
    }
    return _str.substring(_x - 1,_x);
  }
  if (c == '<' && c2 == '-') {
    _x--;
    return null;
  }
  if (c == '+' || c == '-' || c == '*' || c == '/')   return _str.substring(_x - 1,_x);
  if (c == '=' || c == '!' || c == '<' || c == '>')   if (c2 == '=')   return _str.substring(++_x - 2,_x);
 else   return _str.substring(_x - 1,_x);
  _x++;
  return _str.substring(_x - 2,_x);
}
