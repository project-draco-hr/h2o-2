{
  ValueArray va=DKV.get(_vaKey).get();
  AutoBuffer bits=va.getChunk(key);
  int cidx=(int)ValueArray.getChunkIndex(key);
  int rows=va.rpc(cidx);
  NewChunk[] chunks=new NewChunk[_keys.length];
  _vecs=new AppendableVec[_keys.length];
  for (int i=0; i < _keys.length; ++i) {
    _vecs[i]=new AppendableVec(_keys[i]);
    chunks[i]=new NewChunk(_vecs[i],cidx);
  }
  for (int row=0; row < rows; row++) {
    for (int i=0; i < _vecs.length; i++) {
      ValueArray.Column c=va._cols[i];
      if (!va.isNA(bits,row,i)) {
        if (va._cols[i]._domain != null)         chunks[i].addEnum((int)va.data(bits,row,c));
 else         if (va._cols[i].isFloat())         chunks[i].addNum(va.datad(bits,row,c));
 else         chunks[i].addNum(va.data(bits,row,c),0);
      }
 else {
        if (!va._cols[i].isFloat())         chunks[i].addNA();
 else {
          chunks[i].addNum(Double.NaN);
        }
      }
    }
  }
  for (int i=0; i < chunks.length; ++i)   chunks[i].close(cidx,_fs);
}
