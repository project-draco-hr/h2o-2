{
  long sum=0;
  int cnt=0;
  for (  DSharedHistogram hss[][] : _hcs)   if (hss != null)   for (  DSharedHistogram hs[] : hss)   if (hs != null)   for (  DSharedHistogram h : hs)   if (h != null) {
    sum+=h.byteSize();
    cnt++;
  }
  int sumlf=0;
  for (int k=0; k < _nclass; k++)   if (_trees[k] != null)   sumlf+=_trees[k]._len - _leafs[k];
  System.out.println("Going to ship " + PrettyPrint.bytes(sum) + " in "+ cnt+ " Histograms"+ " leafs="+ sumlf);
  for (  DTree dt : _trees)   if (dt != null)   dt.init_tree();
  for (int k=0; k < _nclass; k++) {
    if (_trees[k] != null) {
      for (int l=_leafs[k]; l < _trees[k]._len; l++) {
        UndecidedNode udn=_trees[k].undecided(l);
        DSharedHistogram hs[]=_hcs[k][l - _leafs[k]];
        int sCols[]=udn._scoreCols;
        if (sCols != null) {
          for (int j=0; j < sCols.length; j++)           hs[sCols[j]].init();
        }
 else {
          for (int j=0; j < _ncols; j++)           if (hs[j] != null)           hs[j].init();
        }
      }
    }
  }
}
