{
  Log.POST(300,"");
  if (IS_SYSTEM_RUNNING)   return;
  IS_SYSTEM_RUNNING=true;
  VERSION=getVersion();
  START_TIME_MILLIS=System.currentTimeMillis();
  Arguments arguments=new Arguments(args);
  arguments.extract(OPT_ARGS);
  ARGS=arguments.toStringArray();
  printAndLogVersion();
  printWarningIfRootOnMac();
  if (OPT_ARGS.baseport != 0) {
    DEFAULT_PORT=OPT_ARGS.baseport;
  }
  SINGLE_PRECISION=OPT_ARGS.single_precision != null;
  if (SINGLE_PRECISION)   Log.info("Using single precision for floating-point numbers.");
  if (OPT_ARGS.data_max_factor_levels != 0) {
    DATA_MAX_FACTOR_LEVELS=OPT_ARGS.data_max_factor_levels;
    Log.info("Max. number of factor levels per column: " + DATA_MAX_FACTOR_LEVELS);
  }
  String ice=DEFAULT_ICE_ROOT();
  if (OPT_ARGS.ice_root != null)   ice=OPT_ARGS.ice_root.replace("\\","/");
  try {
    ICE_ROOT=new URI(ice);
  }
 catch (  URISyntaxException ex) {
    throw new RuntimeException("Invalid ice_root: " + ice + ", "+ ex.getMessage());
  }
  Log.info("ICE root: '" + ICE_ROOT + "'");
  findInetAddressForSelf();
  Log.POST(310,"");
  Log.wrap();
  startLocalNode();
  Log.POST(320,"");
  String logDir=(Log.getLogDir() != null) ? Log.getLogDir() : "(unknown)";
  Log.info("Log dir: '" + logDir + "'");
  initializePersistence();
  Log.POST(340,"");
  initializeLicenseManager();
  Log.POST(345,"");
  startNetworkServices();
  Log.POST(350,"");
  startApiIpPortWatchdog();
  Log.POST(360,"");
  if (OPT_ARGS.mem_watchdog != null) {
    startMemoryWatchdog();
    Log.POST(370,"");
  }
  startupFinalize();
  Log.POST(380,"");
}
