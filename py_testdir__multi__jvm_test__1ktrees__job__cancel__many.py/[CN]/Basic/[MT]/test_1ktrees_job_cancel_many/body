def test_1ktrees_job_cancel_many(self):
    SYNDATASETS_DIR = h2o.make_syn_dir()
    for x in [1000]:
        shCmdString = ((((('perl ' + h2o.find_file('syn_scripts/parity.pl')) + ' 128 4 ') + str(x)) + ' quad ') + SYNDATASETS_DIR)
        h2o.spawn_cmd_and_wait('parity.pl', shCmdString.split(), 4)
        csvFilename = (('parity_128_4_' + str(x)) + '_quad.data')
    csvFilename = (('parity_128_4_' + str(1000)) + '_quad.data')
    csvPathname = ((SYNDATASETS_DIR + '/') + csvFilename)
    hex_key = (csvFilename + '.hex')
    parseResult = h2o_cmd.parseResult = h2i.import_parse(path=csvPathname, schema='put', hex_key=hex_key, timeoutSecs=30)
    print "Kick off twenty, then cancel them all..there's a timeout on the wait after cancelling"
    for trial in range(1, 20):
        h2o.verboseprint('Trial', trial)
        start = time.time()
        h2o_cmd.runRF(parseResult=parseResult, trees=trial, depth=50, rfView=False, noPoll=True, timeoutSecs=600, retryDelaySecs=3)
        print 'RF #', trial, 'started on ', csvFilename, 'took', (time.time() - start), 'seconds'
    h2o.check_sandbox_for_errors()
    h2o_jobs.cancelAllJobs(timeoutSecs=10)
