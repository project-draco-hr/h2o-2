{
  DKV.remove(key);
  new TAtomic<List>(){
    transient Key _progress;
    @Override public List alloc(){
      return new List();
    }
    @Override public void onSuccess(){
      if (_progress != null)       UKV.remove(_progress);
    }
    @Override public List atomic(    List old){
      Job[] jobs=old._jobs;
      int i;
      for (i=0; i < jobs.length; i++)       if (jobs[i]._key.equals(key))       break;
      if (i == jobs.length)       return old;
      _progress=jobs[i]._progress;
      jobs[i]=jobs[jobs.length - 1];
      old._jobs=Arrays.copyOf(jobs,jobs.length - 1);
      return old;
    }
  }
.invoke(KEY);
}
