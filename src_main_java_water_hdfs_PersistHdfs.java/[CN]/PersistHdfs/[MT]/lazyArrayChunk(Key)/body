{
  Key arykey=ValueArray.getArrayKey(key);
  long off=ValueArray.getChunkOffset(key);
  long size=0;
  while (true) {
    try {
      Path p=getPathForKey(arykey);
      FileSystem fs=FileSystem.get(p.toUri(),CONF);
      size=fs.getFileStatus(p).getLen();
      break;
    }
 catch (    EOFException e) {
      ignoreAndWait(e,false);
    }
catch (    SocketTimeoutException e) {
      ignoreAndWait(e,false);
    }
catch (    S3Exception e) {
      ignoreAndWait(e,false);
    }
catch (    IOException e) {
      ignoreAndWait(e,true);
    }
  }
  long rem=size - off;
  if (arykey.toString().endsWith(".hex")) {
    int value_len=DKV.get(arykey).memOrLoad().length;
    rem-=value_len;
  }
  if (rem < ValueArray.CHUNK_SZ && off > 0)   return null;
  int sz=(rem >= ValueArray.CHUNK_SZ * 2) ? (int)ValueArray.CHUNK_SZ : (int)rem;
  Value val=new Value(key,sz,Value.HDFS);
  val.setdsk();
  return val;
}
