{
  InputStream is=null;
  int off=0;
  try {
switch (cmp) {
case NONE:
      return bs;
case ZIP:
{
      ZipInputStream zis=new ZipInputStream(new ByteArrayInputStream(bs));
      ZipEntry ze=zis.getNextEntry();
      if (ze != null && !ze.isDirectory())       is=zis;
 else       zis.close();
      break;
    }
case GZIP:
  is=new GZIPInputStream(new ByteArrayInputStream(bs));
break;
}
if (is != null) bs=new byte[bs.length * 2];
while (off < bs.length) {
int len=is.read(bs,off,bs.length - off);
if (len < 0) break;
off+=len;
if (off == bs.length) {
if (bs.length >= ValueArray.CHUNK_SZ) break;
bs=Arrays.copyOf(bs,bs.length * 2);
}
}
}
 catch (IOException ioe) {
Log.err(ioe);
}
 finally {
Utils.close(is);
}
return bs;
}
