{
  Chunk ys=chk_resp(chks,_ncols,_nclass);
  _cm=new long[_nclass][_nclass];
  Random rands[]=null;
  if (_sampleRate < 1.0f) {
    rands=new Random[_trees.length];
    for (int t=0; t < _trees.length; t++)     rands[t]=_trees[t].rngForChunk(ys.cidx());
  }
  for (int row=0; row < ys._len; row++) {
    float err=score0(chks,row,(float)(ys.at0(row) - _ymin),rands);
    if (!Float.isNaN(err)) {
      _sum+=err * err;
      _nrows++;
    }
  }
}
