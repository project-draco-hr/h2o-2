{
  DocGen.HTML.section(sb,"Unscaled Variable Importance");
  DocGen.HTML.arrayHead(sb);
  Integer[] sortOrder=new Integer[varimp.length];
  for (int i=0; i < sortOrder.length; i++)   sortOrder[i]=i;
  Arrays.sort(sortOrder,new Comparator<Integer>(){
    @Override public int compare(    Integer o1,    Integer o2){
      float f=varimp[o1] - varimp[o2];
      return f < 0 ? 1 : (f > 0 ? -1 : 0);
    }
  }
);
  sb.append("<tr><th>Variable</th>");
  for (int i=0; i < varimp.length; i++)   sb.append("<td>").append(_names[sortOrder[i]]).append("</td>");
  sb.append("</tr>");
  sb.append("<tr><th class='warning'>Mean Decrease Accuracy</th>");
  for (int i=0; i < varimp.length; i++)   sb.append(String.format("<td>%5.4f</td>",varimp[sortOrder[i]]));
  sb.append("</tr>");
  if (varimpSD != null) {
    sb.append("<tr><th class='warning'>SD</th>");
    for (int i=0; i < varimpSD.length; i++)     sb.append(String.format("<td>%5.4f</td>",varimpSD[sortOrder[i]]));
    sb.append("</tr>");
  }
  DocGen.HTML.arrayTail(sb);
  DocGen.HTML.graph(sb,"graphvarimp","g_varimp",DocGen.HTML.toJSArray(new StringBuilder(),Arrays.copyOf(_names,_names.length - 1)),DocGen.HTML.toJSArray(new StringBuilder(),varimp));
}
