{
  sb=super.toJavaInit(sb,fileContextSB);
  String modelName=JCodeGen.toJavaId(_key.toString());
  if (GEN_BENCHMARK_CODE) {
    sb.i().p("/**").nl();
    sb.i().p(" * Sample program harness providing an example of how to call predict().").nl();
    sb.i().p(" */").nl();
    sb.i().p("public static void main(String[] args) throws Exception {").nl();
    sb.i(1).p("int iters = args.length > 0 ? Integer.valueOf(args[0]) : DEFAULT_ITERATIONS;").nl();
    sb.i(1).p(modelName).p(" model = new ").p(modelName).p("();").nl();
    sb.i(1).p("model.bench(iters, DataSample.DATA, new float[NCLASSES+1], NTREES);").nl();
    sb.i().p("}").nl();
    sb.di(1);
    sb.p(TO_JAVA_BENCH_FUNC);
  }
  JCodeGen.toStaticVar(sb,"NTREES",ntrees(),"Number of trees in this model.");
  JCodeGen.toStaticVar(sb,"NTREES_INTERNAL",ntrees() * nclasses(),"Number of internal trees in this model (= NTREES*NCLASSES).");
  if (GEN_BENCHMARK_CODE)   JCodeGen.toStaticVar(sb,"DEFAULT_ITERATIONS",10000,"Default number of iterations.");
  if (GEN_BENCHMARK_CODE) {
    if (_dataKey != null) {
      Value dataval=DKV.get(_dataKey);
      if (dataval != null) {
        water.fvec.Frame frdata=dataval.get();
        water.fvec.Frame frsub=frdata.subframe(_names);
        JCodeGen.toClass(fileContextSB,"// Sample of data used by benchmark\nclass DataSample","DATA",frsub,10,"Sample test data.");
      }
    }
  }
  return sb;
}
