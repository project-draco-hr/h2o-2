{
  sb=super.toJavaInit(sb);
  sb.ii(1);
  JCodeGen.toStaticVar(sb,"NTREES",numTrees(),"Number of trees in this model.");
  JCodeGen.toStaticVar(sb,"NTREES_INTERNAL",numTrees() * nclasses(),"Number of internal trees in this model (= NTREES*NCLASSES).");
  JCodeGen.toStaticVar(sb,"DEFAULT_ITERATIONS",1000,"Default number of iterations");
  JCodeGen.toStaticVar(sb,"DATA",ValueArray.asFrame(DKV.get(_dataKey)),100,"Example of data");
  String modelName=JCodeGen.toJavaId(_selfKey.toString());
  sb.i().p("public static void main(String[] args) throws Exception {").nl();
  sb.i(1).p("int iters = args.length > 0 ? Integer.valueOf(args[0]) : DEFAULT_ITERATIONS;").nl();
  sb.i(1).p(modelName).p(" model = new ").p(modelName).p("();").nl();
  sb.i(1).p("model.bench(iters, DATA, new float[NCLASSES+1], NTREES);").nl();
  sb.i().p("}").nl();
  sb.di(1);
  sb.p(TO_JAVA_MAX_INDEX_FUNC);
  sb.p(TO_JAVA_BENCH_FUNC);
  return sb;
}
