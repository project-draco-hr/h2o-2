def test_binary_classifiers(self):
    self.assertIsNotNone(Basic.prostate_hex)
    self.assertIsNotNone(Basic.airlines_train_hex)
    self.assertIsNotNone(Basic.airlines_test_hex)
    node = h2o.nodes[0]
    timeoutSecs = 20
    retryDelaySecs = 2
    print 'Generating AirlinesTrain GLM2 model. . .'
    glm_AirlinesTrain_1_params = {'destination_key': 'glm_AirlinesTrain_1', 'response': 'IsDepDelayed', 'ignored_cols': 'IsDepDelayed_REC', 'family': 'binomial', 'alpha': 0.5, 'standardize': 0, 'lambda': 0.01, 'n_folds': 0, }
    glm_AirlinesTrain_1 = node.GLM(Basic.airlines_train_hex, timeoutSecs, retryDelaySecs, **glm_AirlinesTrain_1_params)
    h2o_glm.simpleCheckGLM(self, glm_AirlinesTrain_1, None, **glm_AirlinesTrain_1_params)
    print 'Generating AirlinesTrain simple GBM model. . .'
    gbm_AirlinesTrain_1_params = {'destination_key': 'gbm_AirlinesTrain_1', 'response': 'IsDepDelayed', 'ignored_cols_by_name': 'IsDepDelayed_REC', 'ntrees': 3, 'max_depth': 1, 'classification': 1, }
    gbm_AirlinesTrain_1 = node.gbm(Basic.airlines_train_hex, timeoutSecs, retryDelaySecs, **gbm_AirlinesTrain_1_params)
    print 'Generating AirlinesTrain complex GBM model. . .'
    gbm_AirlinesTrain_2_params = {'destination_key': 'gbm_AirlinesTrain_2', 'response': 'IsDepDelayed', 'ignored_cols_by_name': 'IsDepDelayed_REC', 'ntrees': 50, 'max_depth': 5, 'classification': 1, }
    gbm_AirlinesTrain_2 = node.gbm(Basic.airlines_train_hex, timeoutSecs, retryDelaySecs, **gbm_AirlinesTrain_2_params)
    print 'Generating AirlinesTrain simple DRF model. . .'
    rf_AirlinesTrain_1_params = {'destination_key': 'rf_AirlinesTrain_1', 'response': 'IsDepDelayed', 'ignored_cols_by_name': 'IsDepDelayed_REC', 'ntrees': 5, 'max_depth': 2, 'classification': 1, }
    rf_AirlinesTrain_1 = node.random_forest(Basic.airlines_train_hex, timeoutSecs, retryDelaySecs, **rf_AirlinesTrain_1_params)
    print 'Generating AirlinesTrain complex DRF model. . .'
    rf_AirlinesTrain_2_params = {'destination_key': 'rf_AirlinesTrain_2', 'response': 'IsDepDelayed', 'ignored_cols_by_name': 'IsDepDelayed_REC', 'ntrees': 50, 'max_depth': 10, 'classification': 1, }
    rf_AirlinesTrain_2 = node.random_forest(Basic.airlines_train_hex, timeoutSecs, retryDelaySecs, **rf_AirlinesTrain_2_params)
    glm_AirlinesTrain_A_params = {'destination_key': 'glm_AirlinesTrain_A', 'response': 'IsDepDelayed_REC', 'ignored_cols': 'IsDepDelayed', 'family': 'binomial', 'alpha': 0.5, 'standardize': 0, 'lambda': 0.01, 'n_folds': 0, }
    glm_AirlinesTrain_A = node.GLM(Basic.airlines_train_hex, timeoutSecs, retryDelaySecs, **glm_AirlinesTrain_A_params)
    h2o_glm.simpleCheckGLM(self, glm_AirlinesTrain_A, None, **glm_AirlinesTrain_A_params)
