{
  _tprs=new double[_cms.length];
  _fprs=new double[_cms.length];
  double TPR_pre=1;
  double FPR_pre=1;
  _auc=0;
  for (int t=0; t < _cms.length; ++t) {
    double TPR=1 - _cms[t].classErr(1);
    double FPR=_cms[t].classErr(0);
    _auc+=trapezoid_area(FPR_pre,FPR,TPR_pre,TPR);
    TPR_pre=TPR;
    FPR_pre=FPR;
    _tprs[t]=TPR;
    _fprs[t]=FPR;
  }
  _auc+=trapezoid_area(FPR_pre,0,TPR_pre,0);
  assert(_auc >= 0. && _auc <= 1.0);
  _best=0;
  _best_threshold=_thresh[0];
  for (int i=1; i < _cms.length; ++i) {
    if (Math.max(_cms[i].classErr(0),_cms[i].classErr(1)) < Math.max(_cms[_best].classErr(0),_cms[_best].classErr(1))) {
      _best=i;
      _best_threshold=_thresh[i];
    }
  }
}
