{
  RString result=new RString(html);
  result.replace("dataKey",args.getProperty("dataKey"));
  Value v=DKV.get(Key.make(args.getProperty("dataKey")));
  if (v == null)   throw new PageError("Key not found!");
  if (v._isArray == 0)   throw new PageError("Key is not a dataframe");
  ValueArray va=ValueArray.value(v);
  int classCol=getAsNumber(args,"class",va._cols.length - 1);
  result.replace("classColIdx",classCol);
  for (int i=0; i < va._cols.length; ++i) {
    Column c=va._cols[i];
    if (i == classCol) {
      result.replace("classColName",Objects.firstNonNull(c._name,i));
    }
 else {
      RString str=result.restartGroup("ignoreCol");
      str.replace("colIdx",i);
      str.replace("colName",Objects.firstNonNull(c._name,i));
      str.append();
    }
  }
  result.replace("defFeatures",(int)Math.ceil(Math.sqrt(va._cols.length)));
  String[] classes=RandomForestPage.determineColumnClassNames(va,classCol,RandomForestPage.MAX_CLASSES);
  result.replace("numClasses",classes.length);
  for (int i=0; i < classes.length; ++i) {
    RString str=result.restartGroup("classWeight");
    str.replace("wi",i);
    str.replace("className",classes[i]);
    str.append();
  }
  return result.toString();
}
