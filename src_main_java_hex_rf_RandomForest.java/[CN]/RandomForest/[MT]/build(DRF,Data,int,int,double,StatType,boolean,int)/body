{
  Timer t_alltrees=new Timer();
  Tree[] trees=new Tree[ntrees];
  Utils.pln("[RF] number of split features: " + drf.numSplitFeatures());
  Utils.pln("[RF] starting RF computation with " + data.rows() + " rows ");
  Random rnd=Utils.getRNG(data.seed() + ROOT_SEED_ADD);
  Sampling sampler=createSampler(drf);
  for (int i=0; i < ntrees; ++i) {
    long treeSeed=rnd.nextLong() + TREE_SEED_INIT;
    trees[i]=new Tree(data,maxTreeDepth,minErrorRate,stat,numSplitFeatures,treeSeed,drf._job,i,drf._verbose,drf._exclusiveSplitLimit,sampler);
    if (!parallelTrees)     DRemoteTask.invokeAll(new Tree[]{trees[i]});
  }
  if (parallelTrees)   DRemoteTask.invokeAll(trees);
  Utils.pln("All trees (" + ntrees + ") done in "+ t_alltrees);
}
