{
  super.init();
  if (source.numRows() == 0)   throw new H2OIllegalArgumentException(find("source"),"Cannot build a model on empty dataset!");
  Vec[] vecs=source.vecs();
  for (int i=cols.length - 1; i >= 0; i--)   if (vecs[cols[i]] == response)   cols=Utils.remove(cols,i);
  final boolean has_constant_response=response.isEnum() ? response.domain().length <= 1 : response.min() == response.max();
  if (has_constant_response)   throw new H2OIllegalArgumentException(find("response"),"Constant response column!");
  Argument a4class=find("classification");
  final boolean classificationFieldSpecified=a4class != null ? a4class.specified() : true;
  if (!classificationFieldSpecified) {
    classification=response.isInt() || response.isEnum();
    Log.warn("Classification field is not specified - deriving according to response! The classification field set to " + classification);
  }
 else {
    if (classification && response.isFloat())     throw new H2OIllegalArgumentException(find("classification"),"Requested classification on float column!");
    if (!classification && response.isEnum())     throw new H2OIllegalArgumentException(find("classification"),"Requested regression on enum column!");
  }
}
