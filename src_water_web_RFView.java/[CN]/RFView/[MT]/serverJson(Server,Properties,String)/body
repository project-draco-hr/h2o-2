{
  ValueArray ary=ServletUtil.check_array(p,DATA_KEY);
  final Key modelKey=ServletUtil.check_key(p,MODEL_KEY);
  RFModel model=UKV.get(modelKey,new RFModel());
  if (model == null)   throw new PageError("RFModel key is missing");
  int classcol=getAsNumber(p,CLASS_COL,ary._cols.length - 1);
  if (classcol < 0 || classcol >= ary._cols.length)   throw new PageError("Class out of range");
  int atree=getAsNumber(p,REQ_TREE,0);
  int ntree=getAsNumber(p,NUM_TREE,model.size());
  boolean oobee=getBoolean(p,OOBEE);
  double[] classWt=RandomForestPage.determineClassWeights(p.getProperty("classWt",""),ary,classcol,MAX_CLASSES);
  String igz=p.getProperty(IGNORE_COL);
  if (igz != null)   System.out.println("[CM] ignoring: " + igz);
  if (model.size() == ntree)   atree=ntree;
  JsonObject res=new JsonObject();
  res.addProperty(DATA_KEY,ary._key.toString());
  res.addProperty(MODEL_KEY,modelKey.toString());
  res.addProperty(CLASS_COL,classcol);
  res.addProperty(NUM_TREE,ntree);
  res.addProperty(REQ_TREE,atree);
  res.addProperty("modelSize",model.size());
  if (p.getProperty("noCM","0").equals("0")) {
    Confusion confusion=Confusion.make(model,ary._key,classcol,classWt,oobee);
    res.addProperty("confusionKey",confusion.keyFor().toString());
  }
  return res;
}
