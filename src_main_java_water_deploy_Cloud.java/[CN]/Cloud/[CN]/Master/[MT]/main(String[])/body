{
  VM.exitWithParent();
  Arguments arguments=new Arguments(args);
  OptArgs h2oArgs=new OptArgs();
  arguments.extract(h2oArgs);
  String[] workerArgs=new String[]{"-flatfile",h2oArgs.flatfile,"-log_headers"};
  List<FlatFileEntry> flatfile=H2O.parseFlatFile(new File(h2oArgs.flatfile));
  HashMap<String,Host> hosts=new HashMap<String,Host>();
  ArrayList<Node> workers=new ArrayList<Node>();
  for (int i=1; i < flatfile.size(); i++) {
    Host host=new Host(flatfile.get(i).inet.getHostAddress());
    hosts.put(host.address(),host);
    workers.add(new NodeHost(host,workerArgs));
  }
  String[] includes=(String[])ArrayUtils.add(Host.defaultIncludes(),h2oArgs.flatfile);
  String[] excludes=Host.defaultExcludes();
  Host.rsync(hosts.values().toArray(new Host[0]),includes,excludes);
  for (  Node w : workers) {
    w.inheritIO();
    w.start();
  }
  Boot.main(args);
  TestUtil.stall_till_cloudsize(1 + workers.size());
  Thread.sleep(1000);
  Log.unwrap(System.out,"");
  Log.unwrap(System.out,"The cloud is running. Connect through local port forwarding:");
  Log.unwrap(System.out,"http://127.0.0.1:54321");
}
