{
  this.type=_vec.isEnum() ? "Enum" : _vec.isInt() ? "Int" : "Real";
  this.nacnt=_vec.naCnt();
  computePercentiles();
  computeMajorities();
  for (int i=0; i < _maxs.length >>> 1; i++) {
    double t=_maxs[i];
    _maxs[i]=_maxs[_maxs.length - 1 - i];
    _maxs[_maxs.length - 1 - i]=t;
  }
  this.stats=_vec.isEnum() ? new EnumStats(_vec) : new NumStats(_vec,_zeros,_mins,_maxs,_pctile);
  if (_vec.isEnum()) {
    this.hstart=_vec.min();
    this.hstep=1;
    this.hbrk=_domains;
  }
 else {
    this.hstart=_start;
    this.hstep=_binsz;
    this.hbrk=new String[hcnt.length];
    for (int i=0; i < hbrk.length; i++)     hbrk[i]=Utils.p2d(binValue(i));
  }
}
