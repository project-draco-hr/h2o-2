{
  _finite_min=new double[cs.length];
  _finite_max=new double[cs.length];
  for (int c=0; c < cs.length; c++) {
    _finite_min[c]=Double.NaN;
    _finite_max[c]=Double.NaN;
    for (int i=0; i < cs[c]._len; i++) {
      if (!cs[c].isNA0(i)) {
        double v=cs[c].at0(i);
        if (!Double.isInfinite(v)) {
          _finite_min[c]=Double.isNaN(_finite_min[c]) ? v : Math.min(v,_finite_min[c]);
          _finite_max[c]=Double.isNaN(_finite_max[c]) ? v : Math.max(v,_finite_max[c]);
        }
      }
    }
  }
}
