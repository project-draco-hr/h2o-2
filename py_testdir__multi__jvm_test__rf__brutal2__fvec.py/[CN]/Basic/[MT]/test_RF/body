def test_RF(self):
    paramsTrainRF = {'seed': '1234567890', 'ntrees': 1, 'max_depth': 10, 'sample_rate': 1.0, 'nbins': 50, 'timeoutSecs': 600, 'response': 'C55', 'classification': 1, }
    paramsScoreRF = {'vactual': 'C55', 'timeoutSecs': 600, }
    trainKey1 = self.loadData(trainDS1)
    scoreKey1 = self.loadData(scoreDS1)
    kwargs = paramsTrainRF.copy()
    trainResult1 = h2o_rf.trainRF(trainKey1, scoreKey1, **kwargs)
    kwargs = paramsScoreRF.copy()
    h2o_cmd.runInspect(key='scoreDS1.hex', verbose=True)
    scoreResult1 = h2o_rf.scoreRF(scoreKey1, trainResult1, **kwargs)
    h2o_cmd.runInspect(key='Predict.hex', verbose=True)
    print '\nTrain1\n=========='
    h2o_rf.simpleCheckRFScore(node=None, rfv=trainResult1, noPrint=False, **kwargs)
    print '\nScore1\n=========+'
    print h2o.dump_json(scoreResult1)
    h2o_rf.simpleCheckRFScore(node=None, rfv=scoreResult1, noPrint=False, **kwargs)
    trainKey2 = self.loadData(trainDS2)
    scoreKey2 = self.loadData(scoreDS2)
    kwargs = paramsTrainRF.copy()
    trainResult2 = h2o_rf.trainRF(trainKey2, scoreKey2, **kwargs)
    kwargs = paramsScoreRF.copy()
    h2o_cmd.runInspect(key='scoreDS2.hex', verbose=True)
    scoreResult2 = h2o_rf.scoreRF(scoreKey2, trainResult2, **kwargs)
    h2o_cmd.runInspect(key='Predict.hex', verbose=True)
    print '\nTrain2\n=========='
    h2o_rf.simpleCheckRFScore(node=None, rfv=trainResult2, noPrint=False, **kwargs)
    print '\nScore2\n=========='
    h2o_rf.simpleCheckRFScore(node=None, rfv=scoreResult2, noPrint=False, **kwargs)
    print '\nTraining: JsonDiff sorted data results, to non-sorted results (json responses)'
    df = h2o_util.JsonDiff(trainResult1, trainResult2, with_values=True)
    print 'df.difference:', h2o.dump_json(df.difference)
    print '\nScoring: JsonDiff sorted data results, to non-sorted results (json responses)'
    df = h2o_util.JsonDiff(scoreResult1, scoreResult2, with_values=True)
    print 'df.difference:', h2o.dump_json(df.difference)
    if (len(df.difference) > 2):
        raise Exception(('Too many diffs in JsonDiff sorted vs non-sorted %s' % len(df.difference)))
