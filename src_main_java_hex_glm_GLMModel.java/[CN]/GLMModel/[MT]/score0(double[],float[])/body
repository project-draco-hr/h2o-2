{
  double eta=0.0;
  final double[] b=beta();
  for (int i=0; i < data_info._catOffsets.length - 1; ++i)   if (data[i] != 0)   eta+=b[data_info._catOffsets[i] + (int)(data[i] - 1)];
  final int noff=data_info.numStart() - data_info._cats;
  for (int i=data_info._cats; i < data.length; ++i)   eta+=b[noff + i] * data[i];
  eta+=b[b.length - 1];
  double mu=glm.linkInv(eta);
  preds[0]=(float)mu;
  if (glm.family == Family.binomial) {
    if (Double.isNaN(mu)) {
      preds[0]=Float.NaN;
      preds[1]=Float.NaN;
      preds[2]=Float.NaN;
    }
 else {
      preds[0]=(mu >= threshold ? 1 : 0);
      preds[1]=1.0f - (float)mu;
      preds[2]=(float)mu;
    }
  }
  return preds;
}
