{
  double eta=0.0;
  for (int i=0; i < catOffsets.length - 1; ++i)   if (data[i] != 0)   eta+=beta[catOffsets[i] + (int)(data[i] - 1)];
  final int noff=catOffsets[catOffsets.length - 1] - catOffsets.length + 1;
  for (int i=catOffsets.length - 1; i < data.length; ++i)   eta+=beta[noff + i] * data[i];
  eta+=beta[beta.length - 1];
  double mu=glm.linkInv(eta);
  if (Double.isNaN(mu)) {
    System.out.println("got NaN out of " + Arrays.toString(data));
  }
  preds[0]=(float)mu;
  if (glm.family == Family.binomial) {
    if (preds.length > 1)     preds[1]=preds[0];
    preds[0]=preds[0] >= threshold ? 1 : 0;
  }
  return preds;
}
