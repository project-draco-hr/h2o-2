{
  _res=new GLMValidation(null,_model.ymu,_model.glm,_model.rank(_lambdaIdx));
  final int nrows=chunks[0]._len;
  double[] row=MemoryManager.malloc8d(_model._names.length);
  float[] preds=MemoryManager.malloc4f(_model.glm.family == Family.binomial ? 2 : 1);
  OUTER:   for (int i=0; i < nrows; ++i) {
    if (chunks[chunks.length - 1].isNA0(i))     continue;
    for (int j=0; j < chunks.length - 1; ++j) {
      if (chunks[j].isNA0(i))       continue OUTER;
      row[j]=chunks[j].at0(i);
    }
    _model.score0(row,preds,_lambdaIdx);
    double response=chunks[chunks.length - 1].at80(i);
    if (_model._caseMode != CaseMode.none)     response=_model._caseMode.isCase(response,_model._caseVal) ? 1 : 0;
    _res.add(response,_model.glm.family == Family.binomial ? preds[1] : preds[0]);
  }
  _res.avg_err/=_res.nobs;
}
