{
  _res=new GLMValidation(null,_model.ymu,_model.glm,_model.rank());
  final int nrows=chunks[0]._len;
  double[] row=MemoryManager.malloc8d(_model._names.length);
  float[] preds=MemoryManager.malloc4f(_model.glm.family == Family.binomial ? 2 : 1);
  final int step=_complement ? _step : 1;
  final int start=_complement ? _offset : 0;
  OUTER:   for (int i=start; i < nrows; i+=step) {
    if (_step > step && (i % _step) == _offset)     continue;
    if (chunks[chunks.length - 1].isNA0(i))     continue;
    for (int j=0; j < chunks.length - 1; ++j) {
      if (chunks[j].isNA0(i))       continue OUTER;
      row[j]=chunks[j].at0(i);
    }
    _model.score0(row,preds);
    double response=chunks[chunks.length - 1].at80(i);
    if (_model._caseMode != CaseMode.none)     response=_model._caseMode.isCase(response,_model._caseVal) ? 1 : 0;
    _res.add(response,_model.glm.family == Family.binomial ? preds[1] : preds[0]);
  }
  if (_res.nobs > 0)   _res.avg_err=Math.sqrt(_res.avg_err) / _res.nobs;
}
