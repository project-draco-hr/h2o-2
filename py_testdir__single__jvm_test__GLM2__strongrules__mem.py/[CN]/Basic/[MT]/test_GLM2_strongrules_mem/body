def test_GLM2_strongrules_mem(self):
    print 'Testing strong rules in glm allows model to be created using less memory.'
    print 'Ingest wide Arcene dataset'
    dataFilename = 'smaller_arcene.csv'
    dataPathname = (('arcene' + '/') + dataFilename)
    data = h2i.import_parse(bucket='smalldata', path=dataPathname, schema='put', timeoutSecs=200)
    print 'Strong Rules...',
    params = {'alpha': 0.5, 'n_folds': 0, 'strong_rules': 1, 'lambda_search': 0, 'response': 3000, 'cols': [i for i in range(2900)], 'family': 'binomial', }
    kwargs = params.copy()
    starttime = time.time()
    glmtest_SR = h2o_cmd.runGLM(timeoutSecs=600, parseResult=data, **kwargs)
    elapsedtime = (time.time() - starttime)
    print ('GLM modelling completes in %0.4f ' % elapsedtime)
    print 'Test complete.'
