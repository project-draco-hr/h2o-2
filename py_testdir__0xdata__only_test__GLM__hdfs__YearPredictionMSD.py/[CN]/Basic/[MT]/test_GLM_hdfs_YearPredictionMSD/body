def test_GLM_hdfs_YearPredictionMSD(self):
    if localhost:
        csvFilenameList = ['YearPredictionMSD.txt', 'YearPredictionMSD.txt']
    else:
        csvFilenameList = ['YearPredictionMSD.txt', 'YearPredictionMSD.txt']
    h2b.browseTheCloud()
    validations1 = {}
    coefficients1 = {}
    for csvFilename in csvFilenameList:
        h2i.setupImportHdfs()
        parseKey = h2i.parseImportHdfsFile(csvFilename=csvFilename, path='/datasets', timeoutSecs=60)
        print csvFilename, 'parse time:', parseKey['response']['time']
        print "Parse result['destination_key']:", parseKey['destination_key']
        inspect = h2o_cmd.runInspect(key=parseKey['destination_key'])
        print ('\n' + csvFilename)
        start = time.time()
        kwargs = {'y': 54, 'n_folds': 2, 'family': 'binomial', 'case': 1, }
        glm = h2o_cmd.runGLMOnly(parseKey=parseKey, timeoutSecs=500, **kwargs)
        h2o.verboseprint('\nglm:', glm)
        h2b.browseJsonHistoryAsUrlLastMatch('GLM')
        GLMModel = glm['GLMModel']
        print 'GLM time', GLMModel['time']
        coefficients = GLMModel['coefficients']
        validationsList = GLMModel['validations']
        validations = validationsList.pop()
        if validations1:
            h2o_glm.compareToFirstGlm(self, 'err', validations, validations1)
        else:
            validations1 = copy.deepcopy(validations)
        if coefficients1:
            h2o_glm.compareToFirstGlm(self, '0', coefficients, coefficients1)
        else:
            coefficients1 = copy.deepcopy(coefficients)
        sys.stdout.write('.')
        sys.stdout.flush()
