{
  int total_home=0;
  for (int i=0; i < _data.anyVec().nChunks(); ++i) {
    if (_data.anyVec().chunkKey(i).home()) {
      total_home++;
    }
  }
  _chunk_row_mapping=new int[total_home];
  int off=0;
  int c_idx=0;
  for (int i=0; i < _data.anyVec().nChunks(); ++i) {
    if (_data.anyVec().chunkKey(i).home()) {
      _chunk_row_mapping[c_idx++]=off;
      off+=_data.anyVec().chunkLen(i);
    }
  }
  _rowsPerNode=new int[H2O.CLOUD.size()];
  long chunksCount=_data.anyVec().nChunks();
  for (int ci=0; ci < chunksCount; ci++) {
    Key cKey=_data.anyVec().chunkKey(ci);
    _rowsPerNode[cKey.home_node().index()]+=_data.anyVec().chunkLen(ci);
  }
}
