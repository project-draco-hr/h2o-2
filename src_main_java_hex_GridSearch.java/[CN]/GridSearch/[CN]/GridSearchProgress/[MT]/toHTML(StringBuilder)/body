{
  GridSearch grid=UKV.get(Key.make(dst_key.value()));
  if (grid != null) {
    DocGen.HTML.arrayHead(sb);
    sb.append("<tr class='warning'>");
    ArrayList<Argument> args=grid.jobs[0].arguments();
    args=(ArrayList<Argument>)args.clone();
    filter(args,"destination_key","source","cols","response","validation");
    for (int i=0; i < args.size(); i++)     sb.append("<td><b>").append(args.get(i)._name).append("</b></td>");
    sb.append("<td><b>").append("run time (s)").append("</b></td>");
    sb.append("<td><b>").append("model key").append("</b></td>");
    sb.append("<td><b>").append("prediction error %").append("</b></td>");
    sb.append("<td><b>").append("precision & recall").append("</b></td>");
    sb.append("</tr>");
    for (int i=0; i < grid.jobs.length; i++) {
      sb.append("<tr>");
      for (      Argument a : args) {
        try {
          sb.append("<td>").append(a._field.get(grid.jobs[i])).append("</td>");
        }
 catch (        Exception e) {
          throw new RuntimeException(e);
        }
      }
      sb.append("<td>").append((System.currentTimeMillis() - grid.jobs[i].start_time) / 1000).append("</td>");
      Object value=UKV.get(grid.jobs[i].destination_key);
      Model model=value instanceof Model ? (Model)value : null;
      String link=grid.jobs[i].destination_key.toString();
      if (model instanceof GBMModel)       link=GBMModelView.link(link,grid.jobs[i].destination_key);
 else       link=Inspect.link(link,grid.jobs[i].destination_key);
      sb.append("<td>").append(link).append("</td>");
      String pct="", f1="";
      if (model != null) {
        pct=String.format("%.2f",100 * model.predictionError()) + "%";
        ConfusionMatrix cm=model.cm();
        if (cm != null && cm._arr.length == 2)         f1=String.format("%.2f",cm.precisionAndRecall());
      }
      sb.append("<td><b>").append(pct).append("</b></td>");
      sb.append("<td><b>").append(f1).append("</b></td>");
      sb.append("</tr>");
    }
    DocGen.HTML.arrayTail(sb);
  }
  return true;
}
