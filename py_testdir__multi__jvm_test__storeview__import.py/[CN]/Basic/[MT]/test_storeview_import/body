def test_storeview_import(self):
    h2o.beta_features = True
    SYNDATASETS_DIR = h2o.make_syn_dir()
    importFolderPath = 'standard'
    csvFilelist = [('covtype.data', 300)]
    trial = 0
    for (csvFilename, timeoutSecs) in csvFilelist:
        csvPathname = ((importFolderPath + '/') + csvFilename)
        trialStart = time.time()
        importResult = h2i.import_only(bucket='home-0xdiag-datasets', path='*', timeoutSecs=timeoutSecs)
        print h2o.dump_json(importResult)
        storeViewResult = h2o_cmd.runStoreView(timeoutSecs=30)
        hex_key = (((csvFilename + '_') + str(trial)) + '.hex')
        print 'parse start on:', csvFilename
        start = time.time()
        parseResult = h2i.import_parse(bucket='home-0xdiag-datasets', path=csvPathname, schema='local', hex_key=hex_key, timeoutSecs=timeoutSecs)
        elapsed = (time.time() - start)
        print 'parse end on ', csvFilename, 'took', elapsed, 'seconds', ('%d pct. of timeout' % ((elapsed * 100) / timeoutSecs))
        print 'parse result:', parseResult['destination_key']
        start = time.time()
        inspect = h2o_cmd.runInspect(None, parseResult['destination_key'], timeoutSecs=360)
        print 'Inspect:', parseResult['destination_key'], 'took', (time.time() - start), 'seconds'
        h2o_cmd.infoFromInspect(inspect, csvPathname)
        goodX = h2o_glm.goodXFromColumnInfo(y=0, key=parseResult['destination_key'], timeoutSecs=300)
        summaryResult = h2o_cmd.runSummary(key=hex_key, timeoutSecs=360)
        h2o_cmd.infoFromSummary(summaryResult, noPrint=True)
        print 'Trying StoreView to all nodes after the parse'
        for (n, node) in enumerate(h2o.nodes):
            print '\n*****************'
            print ('StoreView node %s:%s' % (node.http_addr, node.port))
            storeViewResult = h2o_cmd.runStoreView(node, timeoutSecs=30)
            f = open((((SYNDATASETS_DIR + '/storeview_') + str(n)) + '.txt'), 'w')
            result = h2o.dump_json(storeViewResult)
            f.close()
            lastStoreViewResult = storeViewResult
        print 'Trial #', trial, 'completed in', (time.time() - trialStart), 'seconds.'
        trial += 1
