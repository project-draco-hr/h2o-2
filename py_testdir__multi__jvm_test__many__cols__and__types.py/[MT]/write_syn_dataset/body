def write_syn_dataset(csvPathname, rowCount, colCount, SEEDPERFILE, sel):
    letters = 'abcdefghijklmnopqrstuvwxyz'

    def case0(r):
        return '0'

    def case1(r):
        return '1'

    def case2(r):
        return str(r.randint(0, 1))

    def case3(r):
        d = r.randint(0, 2)
        if (d == 2):
            return ''
        else:
            return str(d)

    def case4(r):
        return 'a'

    def case5(r):
        return str(random.choice(letters))

    def case6(r):
        d = r.randint(0, 1)
        if (d == 0):
            return random.choice(letters)
        else:
            return (random.choice(letters) + random.choice(letters))

    def case7(r):
        d = r.random()
        return ('%0.1f' % d)

    def case8(r):
        d = r.random()
        return ('%0.2f' % d)

    def case9(r):
        d = r.random()
        d1 = r.randint(0, 1)
        if (d1 == 0):
            return ('%0.1f' % d)
        else:
            return ('%0.2f' % d)

    def case10(r):
        d = r.random()
        d1 = r.randint(0, 1)
        if (d1 == 0):
            return ('%1.1f' % d)
        else:
            return ('%1.2f' % d)

    def case11(r):
        return str(r.uniform((-1e+30), 1e+30))
    caseList = [case0, case1, case2, case3, case4, case5, case6, case7, case8, case9, case10, case11]
    if ((sel < 0) or (sel >= len(caseList))):
        raise Exception('sel out of range in write_syn_dataset:', sel)
    f = caseList[sel]
    r = random.Random(SEEDPERFILE)
    dsf = open(csvPathname, 'w+')
    for i in range(rowCount):
        rowData = []
        for j in range(colCount):
            rowData.append(f(r))
        rowDataCsv = ','.join(rowData)
        dsf.write((rowDataCsv + '\n'))
    dsf.close()
