{
  for (  Argument arg : _arguments)   arg.reset();
  if (type == RequestType.query)   return buildQuery(args,type);
  if (H2O.OPT_ARGS.check_rest_params && !(this instanceof GridSearch)) {
    Enumeration en=args.propertyNames();
    while (en.hasMoreElements()) {
      boolean found=false;
      String key=(String)en.nextElement();
      for (      Argument arg : _arguments) {
        if (arg._name.equals(key)) {
          found=true;
          break;
        }
      }
      if (!found) {
        return jsonError("Request specifies the argument '" + key + "' but it is not a valid parameter for this query "+ this.getClass().getName()).toString();
      }
    }
  }
  for (  Argument arg : _arguments) {
    if (!arg.disabled()) {
      try {
        arg.check(RequestQueries.this,args.getProperty(arg._name,""));
        queryArgumentValueSet(arg,args);
      }
 catch (      IllegalArgumentException e) {
        if (type == RequestType.json)         return jsonError("Argument '" + arg._name + "' error: "+ e.getMessage()).toString();
 else         return buildQuery(args,type);
      }
    }
  }
  return null;
}
