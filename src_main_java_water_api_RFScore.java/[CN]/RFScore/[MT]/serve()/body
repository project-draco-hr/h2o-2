{
  RFModel model=_modelKey.value();
  double[] weights=_weights.value();
  JsonObject response=new JsonObject();
  response.addProperty(DATA_KEY,_dataKey.originalValue());
  response.addProperty(MODEL_KEY,_modelKey.originalValue());
  response.addProperty(CLASS,_classCol.value());
  response.addProperty(NUM_TREES,model._totalTrees);
  response.addProperty(OOBEE,0);
  if (_weights.specified())   response.addProperty(WEIGHTS,_weights.originalValue());
  if (_clearCM.value())   clearCachedCM(false);
  Confusion confusion=Confusion.make(model,_dataKey.value()._key,_classCol.value(),weights,false);
  Job job=new Job("Random forest scoring",confusion.keyFor());
  job.start();
  return RFView.redirect(response,job.self(),_modelKey.value()._selfKey);
}
