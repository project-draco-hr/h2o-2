{
  nacnt=_stat0._nas;
  _pctile=new double[QUANTILES_TO_DO.length];
  if (_type == T_ENUM) {
    ;
  }
 else {
    if (false) {
      long desiredBinCnt=max_qbins + 1;
      exactQuantilesMultiPass(_pctile,QUANTILES_TO_DO,desiredBinCnt);
    }
 else {
      approxQuantilesOnePass(_pctile,QUANTILES_TO_DO);
    }
    this.stats=new NumStats(vec.mean(),vec.sigma(),_stat0._zeros,_pctile,QUANTILES_TO_DO);
  }
}
