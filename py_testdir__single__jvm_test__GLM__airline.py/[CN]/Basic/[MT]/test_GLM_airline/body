def test_GLM_airline(self):
    csvFilename = 'AirlinesTrain.csv.zip'
    csvPathname = (('airlines' + '/') + csvFilename)
    parseResult = h2i.import_parse(bucket='smalldata', path=csvPathname, schema='put', timeoutSecs=15)
    params = {'y': 'IsDepDelayed', 'x': 'fYear,fMonth,fDayofMonth,fDayOfWeek,DepTime,ArrTime,UniqueCarrier,Origin,Dest,Distance', 'n_folds': 3, 'family': 'gaussian', 'alpha': 0.5, 'lambda': 0.0001, 'max_iter': 30, }
    kwargs = params.copy()
    starttime = time.time()
    glmtest = h2o_cmd.runGLM(parseResult=parseResult, timeoutSecs=15, **kwargs)
    elapsedtime = (time.time() - starttime)
    pprint(glmtest['GLMModel']['coefficients'])
    pprint(glmtest['GLMModel']['normalized_coefficients'])
    pprint(glmtest['GLMModel']['nCols'])
    print ('ELAPSED TIME TRAIN DATA ', elapsedtime)
    sys.stdout.write('.')
    sys.stdout.flush()
    csvFilename = 'AirlinesTest.csv.zip'
    csvPathname = (('airlines' + '/') + csvFilename)
    parseResult = h2i.import_parse(bucket='smalldata', path=csvPathname, schema='put', timeoutSecs=15)
    params = {'y': 'IsDepDelayed', 'x': 'fYear,fMonth,fDayofMonth,fDayOfWeek,DepTime,ArrTime,UniqueCarrier,Origin,Dest,Distance', 'n_folds': 3, 'family': 'gaussian', 'alpha': 0.5, 'lambda': 0.0001, 'max_iter': 30, }
    kwargs = params.copy()
    starttime = time.time()
    glmtrain = h2o_cmd.runGLM(parseResult=parseResult, timeoutSecs=15, **kwargs)
    elapsedtime = (time.time() - starttime)
    pprint(glmtrain['GLMModel']['coefficients'])
    pprint(glmtrain['GLMModel']['normalized_coefficients'])
    print ('ELAPSED TIME TEST DATA ', elapsedtime)
    sys.stdout.write('.')
    sys.stdout.flush()
