{
  CtMethod ccms[]=cc.getDeclaredMethods();
  boolean w=hasExisting("write","(Lwater/AutoBuffer;)Lwater/AutoBuffer;",ccms);
  boolean r=hasExisting("read","(Lwater/AutoBuffer;)Lwater/Freezable;",ccms);
  if (w && r)   return;
  if (w || r)   throw new Error(cc.getName() + " must implement both " + "read(AutoBuffer) and write(AutoBuffer) or neither");
  CtField ctfs[]=cc.getDeclaredFields();
  boolean callsuper=true;
  for (  CtClass base : _serBases)   if (cc.getSuperclass() == base)   callsuper=false;
  make_body(cc,ctfs,callsuper,"public water.AutoBuffer write(water.AutoBuffer ab) {\n","  super.write(ab);\n","  ab.put%z(%s);\n","  ab.putEnum(%s);\n","  ab.put%z(%s);\n","  return ab;\n" + "}");
  make_body(cc,ctfs,callsuper,"public water.Freezable read(water.AutoBuffer s) {\n","  super.read(s);\n","  %s = s.get%z();\n","  %s = %c.raw_enum(s.get1());\n","  %s = (%C)s.get%z(%c.class);\n","  return this;\n" + "}");
}
