{
  CtField ctfs[]=cc.getDeclaredFields();
  boolean api=false;
  for (  CtField ctf : ctfs)   if (ctf.getName().equals("API_WEAVER"))   api=true;
  if (api == false)   return;
  CtField fielddoc=null;
  CtField getdoc=null;
  make_body(cc,ctfs,false,"public water.AutoBuffer writeJSONFields(water.AutoBuffer ab) {\n","  super.writeJSONFields(ab);\n","  ab.putJSON%z(\"%s\",%s)","  ab.putEnumJSON(\"%s\",%s)","  ab.putJSON%z(\"%s\",%s)",".put1(',');\n",";\n  return ab;\n}",new FieldFilter(){
    boolean filter(    CtField ctf) throws NotFoundException {
      return !ctf.getType().subclassOf(_arg);
    }
  }
);
  StringBuilder sb=new StringBuilder();
  sb.append("new water.api.DocGen$FieldDoc[] {");
  boolean first=true;
  CtClass cc2=cc;
  while (true) {
    for (    CtField ctf : ctfs) {
      int mods=ctf.getModifiers();
      if (javassist.Modifier.isTransient(mods) || javassist.Modifier.isStatic(mods)) {
        if (cc2 == cc) {
          if (ctf.getName().equals("DOC_FIELDS"))           fielddoc=ctf;
          if (ctf.getName().equals("DOC_GET"))           getdoc=ctf;
        }
        continue;
      }
      first=addFieldWeave(sb,ctf,cc,first);
    }
    cc2=cc2.getSuperclass();
    ctfs=cc2.getDeclaredFields();
    api=false;
    for (    CtField ctf : ctfs)     if (ctf.getName().equals("API_WEAVER"))     api=true;
    if (api == false)     break;
  }
  sb.append("}");
  if (fielddoc == null)   throw new CannotCompileException("Did not find static final DocGen.FieldDoc[] DOC_FIELDS field;");
  if (!fielddoc.getType().isArray() || fielddoc.getType().getComponentType() != _fielddoc)   throw new CannotCompileException("DOC_FIELDS not declared static final DocGen.FieldDoc[];");
  cc.removeField(fielddoc);
  cc.addField(fielddoc,CtField.Initializer.byExpr(sb.toString()));
  cc.addMethod(CtNewMethod.make("  public water.api.DocGen$FieldDoc[] toDocField() { return DOC_FIELDS; }",cc));
  if (getdoc != null)   cc.addMethod(CtNewMethod.make("  public String toDocGET() { return DOC_GET; }",cc));
}
