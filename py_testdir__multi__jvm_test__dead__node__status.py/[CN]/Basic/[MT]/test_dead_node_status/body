def test_dead_node_status(self):
    h2b.browseTheCloud()
    for h in h2o.nodes:
        h.log_view()
    h2o.nodes[1].terminate_self_only()
    badPort = ((('/' + str(h2o.nodes[1].http_addr)) + ':') + str(h2o.nodes[1].port))
    nodeList = h2o.nodes[:]
    del nodeList[1]
    print 'We probably need some status to interrogate to understand a node is in red state?'
    print 'And I probably need to wait 60 secs to get to red state'
    time.sleep(120)
    for n in (0, 2):
        c = h2o.nodes[n].get_cloud()
        self.assertEqual(c['cloud_healthy'], False)
        for i in range(3):
            expected = (c['nodes'][i]['name'] != badPort)
            self.assertEqual(c['nodes'][i]['node_healthy'], expected)
