def test_GLM_model_key_unique(self):
    modelKeyDict = {}
    for trial in range(1, 5):
        csvPathname = 'iris/iris2.csv'
        start = time.time()
        kwargs = {'y': 4, 'family': 'binomial', 'case': 1, 'case_mode': '>', }
        hex_key = (('iris2_' + str(trial)) + '.hex')
        parseResult = h2i.import_parse(bucket='smalldata', path=csvPathname, schema='put', hex_key=hex_key, timeoutSecs=10, noPoll=False, **kwargs)
        glmResult = h2o_cmd.runGLMOnly(parseResult=parseResult, timeoutSecs=10, noPoll=True, **kwargs)
        print ('GLM #%d' % trial), 'started on ', csvPathname, 'took', (time.time() - start), 'seconds'
        model_key = glmResult['destination_key']
        print 'GLM model_key:', model_key
        if (model_key in modelKeyDict):
            raise Exception(('same model_key used in GLM #%d that matches prior GLM #%d' % (trial, modelKeyDict[model_key])))
        modelKeyDict[model_key] = trial
    a = h2o.nodes[0].jobs_admin()
    h2o.verboseprint('jobs_admin():', h2o.dump_json(a))
