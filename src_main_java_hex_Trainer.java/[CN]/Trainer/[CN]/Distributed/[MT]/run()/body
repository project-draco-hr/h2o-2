{
  int steps=8192;
  int tasks=(int)(limit / steps);
  for (int task=0; task < tasks; task++) {
    int stepsPerNode=steps / H2O.CLOUD._memary.length;
    Task t=new Task(_ls,task,stepsPerNode);
    Key[] keys=new Key[H2O.CLOUD._memary.length];
    for (int i=0; i < keys.length; i++) {
      String uid=UUID.randomUUID().toString();
      H2ONode node=H2O.CLOUD._memary[i];
      keys[i]=Key.make(uid,(byte)1,Key.DFJ_INTERNAL_USER,node);
    }
    t.dfork(keys);
    t.join();
    _count+=steps;
  }
}
