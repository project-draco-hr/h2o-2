{
  _ls[0].init(null,_ws[1].length / _bs[1].length);
  for (int y=1; y < _ls.length; y++) {
    _ls[y].init(_ls[y - 1],_bs[y].length);
    System.arraycopy(_ws[y],0,_ls[y]._w,0,_ws[y].length);
    System.arraycopy(_bs[y],0,_ls[y]._b,0,_bs[y].length);
  }
  int nodes=H2O.CLOUD._memary.length;
  int index=H2O.SELF.index();
  ThreadedTrainers t=new ThreadedTrainers(_ls,nodes,index,_steps);
  t.run();
  for (int y=1; y < _ls.length; y++) {
    for (int i=0; i < _ws[y].length; i++)     _ws[y][i]=_ls[y]._w[i] - _ws[y][i];
    for (int i=0; i < _bs[y].length; i++)     _bs[y][i]=_ls[y]._b[i] - _bs[y][i];
  }
  tryComplete();
}
