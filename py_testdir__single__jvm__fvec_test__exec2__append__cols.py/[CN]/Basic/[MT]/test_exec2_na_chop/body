def test_exec2_na_chop(self):
    h2o.beta_features = True
    bucket = 'home-0xdiag-datasets'
    csvPathname = 'standard/covtype.data'
    hexKey = 'r.hex'
    parseResult = h2i.import_parse(bucket=bucket, path=csvPathname, schema='put', hex_key=hexKey)
    inspect = h2o_cmd.runInspect(key='r.hex')
    print '\nr.hex    numRows:', '{:,}'.format(inspect['numRows']), '    numCols:', '{:,}'.format(inspect['numCols'])
    numRows = inspect['numRows']
    numCols = inspect['numCols']
    execExpr = ('s.hex = r.hex[,1]',)
    h2e.exec_expr(h2o.nodes[0], execExpr, resultKey='s.hex', timeoutSecs=10)
    for i in range(1, 10):
        execExpr = (('s.hex[,%s] = r.hex[,%s]' % (i, i)),)
        h2e.exec_expr(h2o.nodes[0], execExpr, resultKey='s.hex', timeoutSecs=10)
    execExpr = (('s.hex[,%s] = r.hex[,%s]' % (101, 1)),)
    h2e.exec_expr(h2o.nodes[0], execExpr, resultKey='s.hex', timeoutSecs=10)
    inspect = h2o_cmd.runInspect(key='s.hex')
    print '\ns.hex    numRows:', '{:,}'.format(inspect['numRows']), '    numCols:', '{:,}'.format(inspect['numCols'])
    h2o.check_sandbox_for_errors()
