{
  Futures fs=new Futures();
  if (_espc == null)   throw H2O.unimpl();
  final int nchunks=nChunks();
  final Vec v0=new Vec(group().addVecs(1)[0],_espc,domain);
  new DRemoteTask(){
    @Override public void lcompute(){
      long row=0;
      Key k;
      for (int i=0; i < nchunks; i++) {
        long nrow=chunk2StartElem(i + 1);
        if ((k=v0.chunkKey(i)).home())         DKV.put(k,new C0LChunk(l,(int)(nrow - row)),_fs);
        row=nrow;
      }
      tryComplete();
    }
    @Override public void reduce(    DRemoteTask drt){
    }
  }
.invokeOnAllNodes();
  DKV.put(v0._key,v0,fs);
  fs.blockForPending();
  return v0;
}
