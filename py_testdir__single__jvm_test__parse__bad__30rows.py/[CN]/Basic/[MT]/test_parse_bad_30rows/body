def test_parse_bad_30rows(self):
    h2o.beta_features = False
    SYNDATASETS_DIR = h2o.make_syn_dir()
    csvPathname = (SYNDATASETS_DIR + '/bad.data')
    dsf = open(csvPathname, 'w+')
    dsf.write(datalines)
    dsf.close()
    for i in range(20):
        single_quotes = (i % 2)
        parseResult = h2i.import_parse(path=csvPathname, schema='put', single_quotes=single_quotes, hex_key=(('trial' + str(i)) + '.hex'))
        inspect = h2o_cmd.runInspect(key=parseResult['destination_key'])
        print ('\n' + csvPathname), '    num_rows:', '{:,}'.format(inspect['num_rows']), '    num_cols:', '{:,}'.format(inspect['num_cols'])
        num_rows = inspect['num_rows']
        num_cols = inspect['num_cols']
        self.assertEqual(num_cols, 4, ('Parsed wrong number of cols: %s' % num_cols))
        self.assertNotEqual(num_rows, 30, ("Parsed wrong number of rows. Should be 29.                 Didn't deduce header?: %s" % num_rows))
        self.assertEqual(num_rows, 29, ('Parsed wrong number of rows: %s' % num_rows))
