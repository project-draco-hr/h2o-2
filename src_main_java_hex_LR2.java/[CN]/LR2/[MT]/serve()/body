{
  long start=System.currentTimeMillis();
  CalcSumsTask lr1=new CalcSumsTask().doAll(vec_x,vec_y);
  long pass1=System.currentTimeMillis();
  pass1time=pass1 - start;
  nrows=lr1._n;
  final double meanX=lr1._sumX / nrows;
  final double meanY=lr1._sumY / nrows;
  CalcSquareErrorsTasks lr2=new CalcSquareErrorsTasks(meanX,meanY).doAll(vec_x,vec_y);
  long pass2=System.currentTimeMillis();
  pass2time=pass2 - pass1;
  ssto=lr2._YYbar;
  beta1=lr2._XYbar / lr2._XXbar;
  beta0=meanY - beta1 * meanX;
  CalcRegressionTask lr3=new CalcRegressionTask(beta0,beta1,meanY).doAll(vec_x,vec_y);
  long pass3=System.currentTimeMillis();
  pass3time=pass3 - pass2;
  long df=nrows - 2;
  r2=lr3._ssr / lr2._YYbar;
  double svar=lr3._rss / df;
  double svar1=svar / lr2._XXbar;
  double svar0=svar / nrows + meanX * meanX * svar1;
  beta0stderr=Math.sqrt(svar0);
  beta1stderr=Math.sqrt(svar1);
  sse=lr3._rss;
  ssr=lr3._ssr;
  return Response.done(this);
}
