def parseFile(self, s3bucket, localbucket, pathname, timeoutSecs, header, **kwargs):
    if USE_LOCAL:
        (importFolderPath, csvFilename) = os.path.split((('/' + localbucket) + pathname))
        h2i.setupImportFolder(None, importFolderPath)
        start = time.time()
        parseResult = h2i.parseImportFolderFile(None, csvFilename, importFolderPath, timeoutSecs=180)
    else:
        schema = 's3n://'
        bucket = s3bucket
        URI = ((schema + bucket) + pathname)
        importResult = h2o.nodes[0].import_hdfs(URI)
        start = time.time()
        parseResult = h2o.nodes[0].parse(('*' + pathname), timeoutSecs=timeoutSecs, header=header)
    parse_time = (time.time() - start)
    h2o.verboseprint('py-S3 parse took {0} sec'.format(parse_time))
    parseResult['python_call_timer'] = parse_time
    return parseResult
