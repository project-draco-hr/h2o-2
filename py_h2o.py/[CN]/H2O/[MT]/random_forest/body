def random_forest(self, data_key, trees, timeoutSecs=300, print_params=True, **kwargs):
    params_dict = {'data_key': data_key, 'ntree': trees, 'model_key': 'pytest_model', 'out_of_bag_error_estimate': 1, }
    browseAlso = kwargs.pop('browseAlso', False)
    params_dict.update(kwargs)
    if print_params:
        print '\nrandom_forest parameters:', params_dict
    a = self.__do_json_request('RF.json', timeout=timeoutSecs, params=params_dict)
    verboseprint('\nrandom_forest result:', dump_json(a))
    return a
