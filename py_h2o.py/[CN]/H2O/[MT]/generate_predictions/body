def generate_predictions(self, data_key, model_key, destination_key=None, timeoutSecs=300, print_params=True, **kwargs):
    if beta_features:
        params_dict = {'data': data_key, 'model': model_key, 'prediction_key': destination_key, }
    else:
        params_dict = {'data_key': data_key, 'model_key': model_key, 'destination_key': destination_key, }
    browseAlso = kwargs.pop('browseAlso', False)
    for k in kwargs:
        if (k in params_dict):
            params_dict[k] = kwargs[k]
    if print_params:
        print '\ngenerate_predictions parameters:', params_dict
        sys.stdout.flush()
    a = self.__do_json_request(('GeneratePredictions2.json' if beta_features else 'GeneratePredictionsPage.json'), timeout=timeoutSecs, params=params_dict)
    verboseprint('\ngenerate_predictions result:', dump_json(a))
    if (browseAlso | browse_json):
        h2b.browseJsonHistoryAsUrlLastMatch('GeneratePredictionsPage')
    if beta_features:
        print 'generate_predictions response:', dump_json(a)
    else:
        resultKey = a['response']['redirect_request_args']['key']
        a = self.__do_json_request(('Inspect2.json' if beta_features else 'Inspect.json'), timeout=timeoutSecs, params={'key': resultKey, })
        verboseprint(('\nInspect of ' + resultKey), dump_json(a))
    return a
