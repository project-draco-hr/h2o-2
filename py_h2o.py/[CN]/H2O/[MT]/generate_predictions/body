def generate_predictions(self, data_key, model_key, destination_key=None, timeoutSecs=300, print_params=True, **kwargs):
    algo = ('Predict' if beta_features else 'GeneratePredictionsPage')
    algoView = ('Inspect2' if beta_features else 'Inspect')
    if beta_features:
        params_dict = {'data': data_key, 'model': model_key, 'predict': destination_key, }
    else:
        params_dict = {'data_key': data_key, 'model_key': model_key, 'destination_key': destination_key, }
    browseAlso = kwargs.pop('browseAlso', False)
    check_params_update_kwargs(params_dict, kwargs, 'generate_predictions', print_params)
    if print_params:
        print ('\n%s parameters:' % algo), params_dict
        sys.stdout.flush()
    a = self.__do_json_request((algo + '.json'), timeout=timeoutSecs, params=params_dict)
    verboseprint(('\n%s result:' % algo), dump_json(a))
    if (browseAlso | browse_json):
        h2b.browseJsonHistoryAsUrlLastMatch(algo)
    if beta_features:
        print ('%s response:' % algo), dump_json(a)
    else:
        resultKey = a['response']['redirect_request_args']['key']
        a = self.__do_json_request(algoView, timeout=timeoutSecs, params={'key': resultKey, })
        verboseprint(('\nInspect of ' + resultKey), dump_json(a))
    return a
