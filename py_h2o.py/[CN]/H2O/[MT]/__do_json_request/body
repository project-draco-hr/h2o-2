def __do_json_request(self, jsonRequest=None, fullUrl=None, timeout=10, params=None, cmd='get', extraComment=None, ignoreH2oError=False, **kwargs):
    if fullUrl:
        url = fullUrl
    else:
        url = self.__url(jsonRequest)
    if (params is not None):
        params2 = params.copy()
        for k in params2:
            if (params2[k] is None):
                del params[k]
        paramsStr = ('?' + '&'.join([('%s=%s' % (k, v)) for (k, v) in params.items()]))
    else:
        paramsStr = ''
    if extraComment:
        log((('Start ' + url) + paramsStr), comment=extraComment)
    else:
        log((('Start ' + url) + paramsStr))
    if (cmd == 'post'):
        r = requests.post(url, timeout=timeout, params=params, **kwargs)
    else:
        r = requests.get(url, timeout=timeout, params=params, **kwargs)
    if ((not beta_features) and (not r)):
        raise Exception(('Maybe bad url? no r in __do_json_request in %s:' % inspect.stack()[1][3]))
    json_url_history.append(r.url)
    if ((not beta_features) and (not r.json())):
        raise Exception(('Maybe bad url? no r.json in __do_json_request in %s:' % inspect.stack()[1][3]))
    rjson = None
    try:
        rjson = r.json()
    except:
        if ('404' in r.text):
            verboseprint(r.text)
            raise Exception('404 error could not find any json. Use -v to print response text.')
        verboseprint(r.text)
        raise Exception('Did not receive a json response. Beta features might be causing a problem! Use -v to print response text.')
    for e in ['error', 'Error', 'errors', 'Errors']:
        if (e in rjson):
            verboseprint(dump_json(rjson))
            emsg = ('rjson %s in %s: %s' % (e, inspect.stack()[1][3], rjson[e]))
            if ignoreH2oError:
                print emsg
            else:
                raise Exception(emsg)
    for w in ['warning', 'Warning', 'warnings', 'Warnings']:
        if (w in rjson):
            verboseprint(dump_json(rjson))
            print ('rjson %s in %s: %s' % (w, inspect.stack()[1][3], rjson[w]))
    return rjson
