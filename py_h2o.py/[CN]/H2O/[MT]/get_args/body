def get_args(self):
    args = ['java']
    if (self.java_heap_GB is not None):
        if (1 > self.java_heap_GB > 63):
            raise Exception(('java_heap_GB <1 or >63  (GB): %s' % self.java_heap_GB))
        args += [('-Xmx%dG' % self.java_heap_GB)]
    if (self.java_extra_args is not None):
        args += [('%s' % self.java_extra_args)]
    if self.use_debugger:
        args += ['-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000']
    args += ['-ea']
    if self.classpath:
        entries = [find_file('build/classes'), find_file('lib/javassist.jar')]
        entries += glob.glob((find_file('lib') + '/*/*.jar'))
        entries += glob.glob((find_file('lib') + '/*/*/*.jar'))
        args += ['-classpath', os.pathsep.join(entries), 'H2OInit.Boot']
    else:
        args += ['-jar', self.get_h2o_jar()]
    if (self.addr is not None):
        args += [('--ip=%s' % self.addr)]
    args += [('--port=%d' % self.port), ('--ice_root=%s' % self.get_ice_dir()), ('--name=' + cloud_name())]
    if self.use_hdfs:
        args += [('-hdfs hdfs://' + self.hdfs_name_node), ('-hdfs_version ' + self.hdfs_version), ('-hdfs_root ' + self.hdfs_root)]
        if self.hdfs_nopreload:
            args += [('-hdfs_nopreload ' + self.hdfs_nopreload)]
    if self.use_flatfile:
        args += [('--flatfile=' + self.flatfile)]
    if (not self.sigar):
        args += ['--nosigar']
    if self.aws_credentials:
        args += [('--aws_credentials=' + self.aws_credentials)]
    return args
