def kmeans_apply(self, data_key, model_key, destination_key, timeoutSecs=300, retryDelaySecs=0.2, initialDelaySecs=None, pollTimeoutSecs=180, **kwargs):
    params_dict = {'destination_key': destination_key, '_modelKey': model_key, 'data_key': data_key, }
    browseAlso = kwargs.get('browseAlso', False)
    check_params_update_kwargs(params_dict, kwargs, 'kmeans_apply', print_params=True)
    print '\nKMeansApply params list:', params_dict
    a = self.__do_json_request('KMeansApply.json', timeout=timeoutSecs, params=params_dict)
    if (a['response']['redirect_request'] != 'Progress'):
        print dump_json(a)
        raise Exception('H2O kmeans redirect is not Progress. KMeansApply json response precedes.')
    a = self.poll_url(a, timeoutSecs=timeoutSecs, retryDelaySecs=retryDelaySecs, initialDelaySecs=initialDelaySecs, pollTimeoutSecs=pollTimeoutSecs)
    verboseprint('\nKMeansApply result:', dump_json(a))
    if (browseAlso | browse_json):
        print 'Redoing the KMeansApply through the browser, no results saved though'
        h2b.browseJsonHistoryAsUrlLastMatch('KMeansApply')
        time.sleep(5)
    return a
