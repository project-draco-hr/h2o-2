{
  try {
    ValueArray oldAry=ValueArray.value(args[0]._key);
    GetEnumTask etask=new GetEnumTask(args[0]._key,args[0].colIndex());
    etask.invoke(args[0]._key);
    if (etask._domain.isKilled())     throw new Exception("More than 65535 unique values found. The column is too big for enums.");
    Column oldCol=oldAry._cols[args[0].colIndex()];
    Column c=new Column();
    String[] domainStr=etask._domain.computeColumnDomain();
    c._domain=domainStr;
    c._base=0;
    c._max=domainStr.length - 1;
    c._min=0;
    c._mean=Double.NaN;
    c._scale=1;
    c._sigma=Double.NaN;
    c._size=(domainStr.length < 255) ? (byte)1 : (byte)2;
    c._name=oldCol._name;
    c._off=0;
    c._n=oldCol._n;
    Result result=Result.temporary();
    ValueArray ary=new ValueArray(result._key,oldAry.numRows(),c._size,new Column[]{c});
    DKV.put(result._key,ary.value());
    DKV.write_barrier();
    PackToEnumTask ptask=new PackToEnumTask(result._key,args[0]._key,args[0].colIndex(),etask._domain);
    ptask.invoke(result._key);
    c._mean=ptask._tot / c._n;
    ary=new ValueArray(result._key,oldAry.numRows(),c._size,new Column[]{c});
    DKV.put(result._key,ary.value());
    DKV.write_barrier();
    return result;
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  return null;
}
