{
  int x=E._x;
  AST ast=ASTApply.parsePrefix(E);
  if (ast == null)   return null;
  if (!E.peek('['))   return ast;
  if (!Type.ARY.union(ast._t))   E.throwErr("Not an ary",x);
  if (E.peek(']'))   return ast;
  AST rows=E.xpeek(',',(x=E._x),parseCXExpr(E));
  if (rows != null && !rows._t.union(Type.dblary()))   E.throwErr("Must be scalar or array",x);
  AST cols=E.xpeek(']',(x=E._x),parseCXExpr(E));
  if (cols != null && !cols._t.union(Type.dblary()))   E.throwErr("Must be scalar or array",x);
  Type t=rows != null && rows.isPosConstant() && cols != null && cols.isPosConstant() ? Type.DBL : Type.ARY;
  return new ASTSlice(t,ast,cols,rows);
}
