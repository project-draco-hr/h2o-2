{
  Softmax output=(Softmax)ls[ls.length - 1];
  if (output.target() == -1)   return false;
  for (  Layer l : ls)   l.fprop(-1,false);
  double[] out=ls[ls.length - 1]._a;
  int target=output.target();
  for (int o=0; o < out.length; o++) {
    final boolean hitpos=(o == target);
    final double t=hitpos ? 1 : 0;
    final double d=t - out[o];
    e.mean_square+=d * d;
    e.cross_entropy+=hitpos ? -Math.log(out[o]) : 0;
  }
  float[] preds=new float[out.length + 1];
  for (int i=0; i < out.length; ++i)   preds[i + 1]=(float)out[i];
  preds[0]=ModelUtils.getPrediction(preds,ls[0]._a);
  if (confusion != null) {
    if (output.target() != Layer.missing_int_value)     confusion[output.target()][(int)preds[0]]++;
  }
  return preds[0] == output.target();
}
