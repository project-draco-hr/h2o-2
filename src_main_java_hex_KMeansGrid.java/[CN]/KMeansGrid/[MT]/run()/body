{
  hex.KMeans first=start(Key.make(),ks[0],ms[0]);
  hex.KMeansGrid grid=hex.KMeansGrid.start(destination_key.value(),first,ks,ms,cols);
  JsonObject j=new JsonObject();
  j.addProperty(Constants.DEST_KEY,grid.dest().toString());
  Response r=GLMGridProgress.redirect(j,grid.self(),grid.dest());
  r.setBuilder(Constants.DEST_KEY,new KeyElementBuilder());
  return r;
  KMeansModel model=first.get();
  errors=new double[k.length][maxIter.length];
  for (int ki=0; ki < k.length; ki++) {
    for (int mi=0; mi < maxIter.length; mi++) {
      if (ki != 0 || mi != 0) {
        KMeans job=KMeans.start(first.dest(),model._va,k[mi],model._epsilon,maxIter[mi],model._randSeed,model._normalized,cols);
        model=job.get();
      }
      errors[ki][mi]=model._error;
    }
    remove();
  }
}
