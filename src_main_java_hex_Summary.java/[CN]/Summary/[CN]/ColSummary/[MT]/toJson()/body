{
  JsonObject res=new JsonObject();
  res.addProperty("type",_enum ? "enum" : "number");
  res.addProperty("name",_summary._ary._cols[_colId]._name);
  if (!_enum) {
    JsonArray min=new JsonArray();
    for (    double d : _min) {
      if (Double.isInfinite(d))       break;
      min.add(new JsonPrimitive(d));
    }
    res.add("min",min);
    JsonArray max=new JsonArray();
    for (    double d : _max) {
      if (Double.isInfinite(d))       break;
      max.add(new JsonPrimitive(d));
    }
    res.add("max",max);
    res.addProperty("mean",_summary._ary._cols[_colId]._mean);
    res.addProperty("sigma",_summary._ary._cols[_colId]._sigma);
  }
  res.addProperty("N",_n);
  JsonObject histo=new JsonObject();
  histo.addProperty("bin_size",_binsz);
  JsonArray ary=new JsonArray();
  for (  long c : _bins)   ary.add(new JsonPrimitive(c));
  JsonArray binNames=new JsonArray();
  if (_summary._ary._cols[_colId].isEnum()) {
    for (int i=0; i < _summary._ary._cols[_colId]._domain.length; ++i) {
      if (_bins[i] != 0) {
        ary.add(new JsonPrimitive(_bins[i]));
        binNames.add(new JsonPrimitive(_summary._ary._cols[_colId]._domain[i]));
      }
    }
  }
 else {
    double x=_min[0] + _binsz * 0.5;
    for (int i=0; i < _bins.length; ++i) {
      if (_bins[i] != 0) {
        ary.add(new JsonPrimitive(_bins[i]));
        binNames.add(new JsonPrimitive(Utils.p2d(x + i * _binsz)));
      }
    }
  }
  histo.add("bin_names",binNames);
  histo.add("bins",ary);
  res.add("histogram",histo);
  if (!_enum && _percentiles != null) {
    if (_percentileValues == null)     computePercentiles();
    JsonObject percentiles=new JsonObject();
    JsonArray thresholds=new JsonArray();
    JsonArray values=new JsonArray();
    for (int i=0; i < _percentiles.length; ++i) {
      thresholds.add(new JsonPrimitive(_percentiles[i]));
      values.add(new JsonPrimitive(_percentileValues[i]));
    }
    percentiles.add("thresholds",thresholds);
    percentiles.add("values",values);
    res.add("percentiles",percentiles);
  }
  return res;
}
