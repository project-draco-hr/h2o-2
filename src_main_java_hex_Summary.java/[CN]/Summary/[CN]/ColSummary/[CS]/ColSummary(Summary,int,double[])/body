{
  _summary=s;
  _colId=colId;
  Column c=s.ary()._cols[colId];
  _enum=c.isEnum();
  final long n=Math.max(c._n,1);
  if (_enum) {
    _percentiles=null;
    _binsz=_binszInv=1;
    _bins=new long[(int)n];
    _start=0;
    _end=n;
  }
 else {
    _min=new double[NMAX];
    _max=new double[NMAX];
    Arrays.fill(_min,Double.POSITIVE_INFINITY);
    Arrays.fill(_max,Double.NEGATIVE_INFINITY);
    if (c.isFloat() || c.numDomainSize() > MAX_HIST_SZ) {
      _percentiles=Objects.firstNonNull(percentiles,DEFAULT_PERCENTILES);
      double binsz=Math.max(1e-4,3.5 * c._sigma / Math.cbrt(c._n));
      int nbin=Math.max(1,(int)((c._max - c._min) / binsz));
      double a=(c._max - c._min) / n;
      double b=Math.pow(10,Math.floor(Math.log10(a)));
      if (a > 20 * b / 3)       b*=10;
 else       if (a > 5 * b / 3)       b*=5;
      double start=b * Math.floor(c._min / b);
      _bins=new long[nbin];
      _start=start;
      _binsz=binsz;
      _binszInv=1.0 / binsz;
      _end=start + nbin * binsz;
    }
 else {
      _start=c._min;
      _end=c._max;
      int sz=(int)c.numDomainSize();
      _bins=new long[sz];
      _binszInv=_binsz=1.0;
      _percentiles=Objects.firstNonNull(percentiles,DEFAULT_PERCENTILES);
    }
  }
}
