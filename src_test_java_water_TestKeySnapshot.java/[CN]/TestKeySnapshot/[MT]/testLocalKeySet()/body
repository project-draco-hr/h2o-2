{
  Key[] userKeys=new Key[100];
  Key[] systemKeys=new Key[100];
  int homeKeys=0;
  Futures fs=new Futures();
  try {
    for (int i=0; i < userKeys.length; ++i) {
      DKV.put(userKeys[i]=Key.make("key" + i),new Utils.IcedInt(i),fs,true);
      if (userKeys[i].home())       ++homeKeys;
      DKV.put(systemKeys[i]=Key.makeSystem(Key.rand()),new Utils.IcedInt(i),fs,true);
    }
    fs.blockForPending();
    Key[] keys=H2O.KeySnapshot.localSnapshot().keys();
    Assert.assertEquals(homeKeys,keys.length);
    for (    Key k : keys)     Assert.assertTrue(k.home());
  }
  finally {
    for (int i=0; i < userKeys.length; ++i) {
      DKV.remove(userKeys[i],fs);
      DKV.remove(systemKeys[i],fs);
    }
    fs.blockForPending();
  }
}
