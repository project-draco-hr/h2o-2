{
  Type ta=find();
  Type tb=t.find();
  int tta=ta._t & (VARARGS - 1);
  int ttb=tb._t & (VARARGS - 1);
  if (ta == tb)   return true;
 else   if ((tta == FCN0 && ttb == FCN0) || (tta == ANYARY0 && ttb == ANYARY0)) {
    Type t0=ta, t1=tb;
    if (ta._ts.length > tb._ts.length) {
      t0=tb;
      t1=ta;
    }
    boolean ok=true;
    int len=t0._ts.length;
    Type varargs=null;
    if (len < t1._ts.length) {
      varargs=t0._ts[len - 1].find();
      if ((varargs._t & VARARGS) != 0)       len--;
 else       varargs=null;
    }
    for (int i=0; i < len; i++)     if (!t0._ts[i].union(t1._ts[i]))     ok=false;
    if (len == t1._ts.length)     return ok;
    if (len == t1._ts.length - 1 && (t1._ts[len].find()._t & VARARGS) != 0)     return true;
    if (varargs == null)     return false;
    for (int i=len; i < t1._ts.length; i++) {
      int tvar=(varargs._t & (VARARGS - 1));
      Type var=tvar == DBLARY0 ? dblary() : (tvar == UNBOUND ? unbound() : varargs);
      if (!var.union(t1._ts[i]))       ok=false;
    }
    return ok;
  }
 else   if (tta == UNBOUND || (tta == DBLARY0 && tb.isDblAry())) {
    ta._t=BOUND;
    ta._ts[0]=tb;
  }
 else   if (ttb == UNBOUND || (ttb == DBLARY0 && ta.isDblAry())) {
    tb._t=BOUND;
    tb._ts[0]=ta;
  }
 else   if (tta == DBLARY0 && ttb == DBLARY0) {
    ta._t=BOUND;
    ta._ts[0]=tb;
  }
 else   if (tta == ANYARY0 && ttb == DBLARY0)   throw water.H2O.unimpl();
 else   if (tta == ANYARY0 && ttb == ARY0)   throw water.H2O.unimpl();
 else   if (tta == ANYARY0 && ttb == DBL0) {
    boolean ok=true;
    for (    Type t2 : ta._ts)     ok|=!Type.DBL.union(t2);
    return ok;
  }
 else   if (ttb == ANYARY0)   throw water.H2O.unimpl();
 else   if (tta == ttb)   return true;
 else   return false;
  return true;
}
