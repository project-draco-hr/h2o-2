def dump_hosts_config(ec2_config, reservation, filename=DEFAULT_HOSTS_FILENAME):
    cfg = {}
    cfg['aws_credentials'] = find_file(ec2_config['aws_credentials'])
    cfg['username'] = ec2_config['username']
    cfg['key_filename'] = find_file(ec2_config['pem'])
    cfg['use_flatfile'] = True
    cfg['h2o_per_host'] = 1
    cfg['java_heap_GB'] = MEMORY_MAPPING[ec2_config['instance_type']]['xmx']
    cfg['java_extra_args'] = '-XX:MaxDirectMemorySize=1g'
    cfg['base_port'] = 54321
    cfg['ip'] = [i.private_ip_address for i in reservation.instances]
    cfg['instances'] = [{'id': i.id, 'private_ip_address': i.private_ip_address, 'public_ip_address': i.ip_address, 'public_dns_name': i.public_dns_name, } for i in reservation.instances]
    cfg['reservation_id'] = reservation.id
    filename = filename.format(reservation.id)
    with open(filename, 'w+') as f:
        f.write(json.dumps(cfg, indent=4))
    log('Host config dumped into {0}'.format(filename))
    log('To terminate instances call:')
    log('python ec2_cmd.py terminate --hosts {0}'.format(filename))
