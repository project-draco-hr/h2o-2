{
  final Model m=(Model)_M.clone();
  ValueArray ary=DKV.get(ValueArray.getArrayKey(key)).get();
  AutoBuffer bits=new AutoBuffer(DKV.get(key).memOrLoad());
  int nrows=bits.remaining() / ary._rowsize;
  AutoBuffer res=new AutoBuffer(nrows << 3);
  for (int i=0; i < nrows; ++i) {
    double p=m.score(ary,bits,i);
    if (p < _min)     _min=p;
    if (p > _max)     _max=p;
    if (!Double.isNaN(p)) {
      _sum+=p;
      _sumsq+=p * p;
      ++_n;
    }
    res.put8d(p);
  }
  int idx=(int)ValueArray.getChunkIndex(key);
  Key outputKey=ValueArray.getChunkKey(idx,_outKey);
  _rpc[idx]+=nrows;
  DKV.put(outputKey,new Value(outputKey,res.buf()));
}
