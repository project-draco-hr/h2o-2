{
  if (send_recv() == ev.send_recv())   return false;
  long myl0=dataLo();
  long evl0=ev.dataLo();
  int my_udp_type=(int)(myl0 & 0xff);
  int ev_udp_type=(int)(evl0 & 0xff);
  if (my_udp_type != ev_udp_type)   return false;
  UDP.udp e=UDP.udp.UDPS[my_udp_type];
switch (e) {
case rebooted:
case timeline:
    break;
case ack:
case ackack:
case execlo:
case exechi:
case heartbeat:
  if ((int)(myl0 >> 24) != (int)(evl0 >> 24))   return false;
break;
case paxos_accept:
case paxos_accepted:
case paxos_nack:
case paxos_promise:
case paxos_proposal:
if ((myl0 >> 24) != (evl0 >> 24)) return false;
if ((dataHi() & 0xFFFFFFFFFFFFFFl) != (ev.dataHi() & 0xFFFFFFFFFFFFFFl)) return false;
break;
default :
throw new Error("unexpected udp packet type " + e.toString());
}
if (_packh2o != null && _packh2o.index() != ev._nodeId) return false;
if (ev._packh2o != null && ev._packh2o.index() != _nodeId) return false;
return true;
}
