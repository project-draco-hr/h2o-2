import unittest, random, sys, time
sys.path.extend(['.', '..', 'py'])
import h2o, h2o_browse as h2b, h2o_exec as h2e, h2o_hosts, h2o_import as h2i
initList = [('r.hex', 'r.hex=i.hex'), ('r1.hex', 'r1.hex=i.hex'), ('r2.hex', 'r2.hex=i.hex'), ('r3.hex', 'r3.hex=i.hex'), ('x', 'x=c(1)'), ('y', 'y=c(1)')]
exprListFull = ['quantile(r.hex[,4],c(0.000))', 'quantile(r.hex[,4],c(0.000))', 'quantile(r.hex[,4],c(0.000))', 'quantile(r.hex[,4],c(0.001))', 'quantile(r.hex[,4],c(0.001))', 'quantile(r.hex[,4],c(0.001))', 'quantile(r.hex[,4],c(0.000,0.000))', 'quantile(r.hex[,4],c(0.000,0.000))', 'quantile(r.hex[,4],c(0.000,0.000))', 'quantile(r.hex[,4],c(0.001,0.001))', 'quantile(r.hex[,4],c(0.001,0.001))', 'quantile(r.hex[,4],c(0.001,0.001))', 'quantile(r.hex[,4],c(0.001,0.001,0.001))', 'quantile(r.hex[,4],c(0.001,0.001,0.001))', 'quantile(r.hex[,4],c(0.001,0.001,0.001))', 'quantile(r.hex[,4],c(0.05))', 'quantile(r.hex[,4],c(0.05))', 'quantile(r.hex[,4],c(0.05))', 'quantile(r.hex[,4],c(0.05,0.05))', 'quantile(r.hex[,4],c(0.05,0.05))', 'quantile(r.hex[,4],c(0.05,0.05))', 'quantile(r.hex[,4],c(0.05,0.05,0.05))', 'quantile(r.hex[,4],c(0.05,0.05,0.05))', 'quantile(r.hex[,4],c(0.05,0.05,0.05))', 'quantile(r.hex[,4],c(0.05,.001))', 'quantile(r.hex[,4],c(0.05,.001))', 'quantile(r.hex[,4],c(0.05,.001))', 'quantile(r.hex[,4],c(0.05,.000))', 'quantile(r.hex[,4],c(0.05,.000))', 'quantile(r.hex[,4],c(0.05,.000))', 'quantile(r.hex[,4],c(0.000,.05))', 'quantile(r.hex[,4],c(0.000,.05))', 'quantile(r.hex[,4],c(0.000,.05))', 'quantile(r.hex[,4],c(0.001,.05))', 'quantile(r.hex[,4],c(0.001,.05))', 'quantile(r.hex[,4],c(0.001,.05))', 'quantile(r.hex[,4],c(0.001,.05))', 'quantile(r.hex[,4],c(0.001,.05,0.3))', 'quantile(r.hex[,4],c(0.001,.05,0.3,0.55))', 'quantile(r.hex[,4],c(0.001,.05,0.3,0.55,0.7))', 'quantile(r.hex[,4],c(0.001,.05,0.3,0.55,0.7,0.95))', 'quantile(r.hex[,4],c(0.001,.05,0.3,0.55,0.7,0.95,0.99))', 'r3.hex[,1] = cos(r.hex[,1])', 'r3.hex[,1] = sin(r.hex[,1])', 'r3.hex[,1] = tan(r.hex[,1])', 'r3.hex[,1] = acos(r.hex[,1])', 'r3.hex[,1] = asin(r.hex[,1])', 'r3.hex[,1] = atan(r.hex[,1])', 'r3.hex[,1] = cosh(r.hex[,1])', 'r3.hex[,1] = sinh(r.hex[,1])', 'r3.hex[,1] = tanh(r.hex[,1])', 'r3.hex[,1] = abs(r.hex[,1])', 'r3.hex[,1] = sgn(r.hex[,1])', 'r3.hex[,1] = sqrt(r.hex[,1])', 'r3.hex[,1] = ceil(r.hex[,1])', 'r3.hex[,1] = floor(r.hex[,1])', 'r3.hex[,1] = log(r.hex[,1])', 'r3.hex[,1] = log(r.hex[,1]+1)', 'r3.hex[,1] = exp(r.hex[,1])', 'r3.hex[,1] = is.na(r.hex[,1])', '1.23', ' 1.23 + 2.34', ' 1.23 + 2.34 * 3', '1.23 < 2.34', '1.23 <=2.34', '1.23 > 2.34', '1.23 >=2.34', '1.23 ==2.34', '1.23 !=2.34', '1 & 2', '1&&2', '!1', '(!)(1)', '-1', '-(1)', '-T', '+(1.23)', 'x', 'x+2', '2+x', 'x=1', 'x<-1', 'x=3;y=4', 'x=mean', 'x=mean=3', 'x=mean(c(3))', 'r.hex', 'r.hex[2,3]', 'r.hex[2+4,-4]', 'r.hex[1,-1]; r.hex[2,-2]; r.hex[3,-3]', 'r.hex[2,]', 'r.hex[,3]', 'r.hex+1', 'r.hex-r.hex', '1.23+(r.hex-r.hex)', '(1.23+r.hex)-r.hex', 'min(r.hex,1+2)', 'max(r.hex,1+2)', 'is.na(r.hex)', 'sum(is.na(r.hex))', 'nrow(r.hex)*3', 'r.hex[nrow(r.hex)-1,ncol(r.hex)-1]', 'x=1;x=r.hex', 'a=r.hex', 'r.hex[2,3]<-4;', 'c(1,3,5)', 'r.hex[,c(1,3,5)]', 'r.hex[c(1,3,5),]', 'a=c(11,22,33,44,55,66); a[c(2,6,1),]', 'c(1,0)&c(2,3)', '-(x = 3)', 'x<-+', 'x<-+;x(1,2)', 'x<-*;x(2,3)', 'x=c(0,1);!x+1', 'x=c(1,-2);-+---x', 'x=c(1,-2);--!--x', '!(y=c(3,4))', '!x!=1', '(!x)!=1', '1+x^2', 'x=c(1);1+x^2', 'x=c(1); y=c(1); x + 2/y', 'x=c(1); y=c(1); x + (2/y)', 'x=c(1); y=c(1); -x + y', 'x=c(1); y=c(1); -(x + y)', 'x=c(1); y=c(1); -x % y', 'x=c(1); y=c(1); -(x % y)', 'T|F&F', 'T||F&&F', 'function(x,y,z){x[]}(r.hex,1,2)', 'function(x){x+1}(2)', 'function(x){y=x+y}(2)', 'function(x){y=x*2; y+1}(2)', 'function(x){y=1+2}(2)', 'a=function(x) x+1; 7', 'a=function(x) {x+1}; 7', 'a=function(x) {x+1; 7}', 'c(1,c(2,3))', 'sum(1,2,3)', 'sum(c(1,3,5))', 'sum(4,c(1,3,5),2,6)', 'sum(1,r.hex,3)', 'a=1;a=2;function(x){x=a;a=3}', 'a=r.hex;function(x){x=a;a=3;nrow(x)*a}(a)', 'a=r.hex;a[,1]=(a[,1]==8)', 'function(funy){function(x){funy(x)*funy(x)}}(sgn)(-2)', 'r.hex[r.hex[,4]>30,]', 'a=c(1,2,3);a[a[,1]>10,1]', 'apply(r.hex,2,sum)', 'y=5;apply(r.hex,2,function(x){x[]+y})', 'apply(r.hex,2,function(x){sum(x)/nrow(x)})', 'mean2=function(x){apply(x,2,sum)/nrow(x)};mean2(r.hex)', 'ifelse(0,1,2)', 'ifelse(0,r.hex+1,r.hex+2)', 'ifelse(r.hex>3,3,r.hex)', 'ifelse(0,+,*)(1,2)', '(0 ? + : *)(1,2)', '(1? r.hex : (r.hex+1))[1,2]', 'apply(r.hex,2,function(x){total=sum(ifelse(is.na(x),0,x)); rcnt=nrow(x)-sum(is.na(x)); mean2=total / rcnt; ifelse(is.na(x),mean2,x)})', 'factor(r.hex[,5])', 'r.hex[,2]', 'r.hex[,2]+1', 'r.hex[,3]=3.3;r.hex', 'r.hex[,3]=r.hex[,2]+1', 'r.hex[,ncol(r.hex)+1]=4', 'a=ncol(r.hex);r.hex[,c(a+1,a+2)]=5', 'table(r.hex[,5])', 'table(r.hex[,c(2,7)])', 'table(r.hex[,c(2,9)])', 'a=cbind(c(1,2,3), c(4,5,6))', 'a[,1] = factor(a[,1])', 'is.factor(a[,1])', 'isTRUE(c(1,3))', 'a=1;isTRUE(1)', 'a=c(1,2);isTRUE(a)', 'isTRUE(min)', 'seq_len(10)', '3 < 4 |  F &  3 > 4', '3 < 4 || F && 3 > 4', 'r.hex[,4] != 29 || r.hex[,2] < 305 && r.hex[,2] < 81', 'quantile(r.hex[,4],c(0.001,.05,0.3,0.55,0.7,0.95,0.99))', 'quantile(seq_len(10),seq_len(10)/10)', 'quantile(runif(seq_len(10000), -1), seq_len(10)/10)', 'quantile(r.hex[,4],c(0,.05,0.3,0.55,0.7,0.95,0.99))', 'a=0;x=0;y=0']
if (1 == 0):
    exprList = []
    for i in range(10):
        expr = ''
        for j in range(1):
            expr += (('z.hex=' + random.choice(exprListFull)) + ';')
        exprList.append(expr)
exprList = exprListFull
if (__name__ == '__main__'):
    h2o.unit_main()
