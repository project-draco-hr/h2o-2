{
  long x=_cache;
  if (cloud(x) == cloud._idx)   return x;
  char home=(char)cloud.D(this,0);
  int desired=desired(x);
  int replica=-1;
  for (int i=0; i < desired; i++) {
    int idx=cloud.D(this,i);
    if (idx != -1 && cloud._memary[idx] == H2O.SELF) {
      replica=i;
      break;
    }
  }
  long cache=build_cache(cloud._idx,home,replica,desired);
  set_cache(cache);
  return cache;
}
