import unittest, random, sys, time
sys.path.extend(['.', '..', 'py'])
import h2o, h2o_browse as h2b, h2o_exec as h2e, h2o_hosts, h2o_import as h2i
initList = [('r.hex', 'r.hex=i.hex'), ('r1.hex', 'r1.hex=i.hex'), ('r2.hex', 'r2.hex=i.hex'), ('r3.hex', 'r3.hex=i.hex')]
if (1 == 0):
    exprListFull = []
else:
    exprListFull = ['r1.hex=apply(r.hex,2,function(x){ifelse(is.na(x),0,x)})', 'cct.hex=runif(r.hex);rTrain=r.hex[cct.hex<=0.9,];rTest=r.hex[cct.hex>0.9,]', 'r1.hex[,1]=r1.hex[,1]==1.0', 'b.hex=runif(r3.hex[,1])', 'b.hex=runif(r3.hex[1,])', '1.23', '1.23e0<2.34e1', '+1.23e0<+2.34e1', '-1.23e0<+-2.34e1', '-1.23e000<+-2.34e100', '-1.23e-001<+-2.34e-100', '1.23<2.34', '1.23<=2.34', '1.23>2.34', '1.23>=2.34', '1.23==2.34', '1.23!=2.34', '1.23 <2.34', '1.23 <=2.34', '1.23 >2.34', '1.23 >=2.34', '1.23 ==2.34', '1.23 !=2.34', '1.23< 2.34', '1.23<= 2.34', '1.23> 2.34', '1.23>= 2.34', '1.23== 2.34', '1.23!= 2.34', 'r.hex', '+(1.23,2.34)', 'r.hex[2,3]', 'r.hex[2+4,-4]', 'r.hex[1,-1]; r.hex[1,-1]; r.hex[1,-1]', 'r.hex[1,]', 'r.hex[,1]', 'r.hex+1', 'r.hex-r.hex', '1.23+(r.hex-r.hex)', '(1.23+r.hex)-r.hex', 'min(r.hex,1+2)', 'is.na(r.hex)', 'nrow(r.hex)*3', 'r.hex[nrow(r.hex)-1,ncol(r.hex)-1]', 'x=0; x+2', 'x=1', 'x<-1', 'a=r.hex', 'r.hex[nrow(r.hex),]', 'r.hex[,col(r.hex)]', 'c(1,3,5)', 'function(x,y,z){x[]}(r.hex,1,2)', 'function(x){x+1}(2)', 'function(x){y=x*2; y+1}(2)', 'function(x){y=1+2}(2)', 'sum(1,2,3)', 'sum(c(1,3,5))', 'sum(4,c(1,3,5),2,6)', 'sum(1,r.hex,3)', 'r.hex[,c(1)]', 'r.hex[c(1),]', 'r.hex[c(1,3,5),]', 'r.hex[,c(1,3,5)]', 'a=c(11,22,33,44,55,66); a[c(2,6,1),]', 'a=1;a=2;function(x){x=a;a=3}', 'a=r.hex;function(x){x=a;a=3;nrow(x)*a}(a)', 'function(funy){function(x){funy(x)*funy(x)}}(sgn)(-2)', 'r.hex[r.hex[,1]>4,]', 'a=c(1,2,3); a[a[,1]>10,1]', 'apply(r.hex,2,sum)', 'mean=function(x){apply(x,2,sum)/nrow(x)};mean(r.hex)', 'ifelse(0,1,2)', 'ifelse(0,r.hex+1,r.hex+2)', 'ifelse(r.hex>3,99,r.hex)', 'ifelse(0,+,*)(1,2)', '(0 ? + : *)(1,2)', '(1? r.hex : (r.hex+1))[1,2]', 'factor(r.hex[,5])', 'r.hex[,1]', 'r.hex[1,]', 'r.hex[,1]+1', 'r.hex[1,]+1', 'r.hex[,1]=3.3;r.hex', 'r.hex[1,]=3.3;r.hex', 'r.hex[,1]=r.hex[,1]+1', 'r.hex[1,]=r.hex[1,]+1', 'r.hex[,ncol(r.hex)+1]=4', 'r.hex[nrow(r.hex)+1,]=4', 'a=ncol(r.hex); r.hex[,c(a+1,a+2)]=5', 'a=0;x=0']
exprList = []
for i in range(10):
    expr = ''
    for j in range(1):
        expr += (('z.hex=' + random.choice(exprListFull)) + ';')
    exprList.append(expr)
if (__name__ == '__main__'):
    h2o.unit_main()
