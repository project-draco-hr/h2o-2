def test_C_hhp_107_01(self):
    csvPathname = h2o.find_file('smalldata/hhp_107_01.data.gz')
    print ('\n' + csvPathname)
    y = '106'
    x = ''
    parseKey = h2o_cmd.parseFile(csvPathname=csvPathname, timeoutSecs=2)
    trial = 0
    if (1 == 0):
        for appendx in xrange(107):
            if ((1 == 0) and (appendx == 9)):
                print '9 causes singularity. not used'
            elif ((1 == 0) and (appendx == 12)):
                print '12 causes singularity. not used'
            elif ((1 == 0) and (appendx == 25)):
                print '25 causes singularity. not used'
            elif ((1 == 0) and (appendx == 53)):
                print '53 causes singularity. not used'
            elif ((1 == 0) and (appendx == 54)):
                print '54 causes singularity. not used'
            elif ((1 == 0) and (appendx == 76)):
                print '76 causes singularity. not used'
            elif ((1 == 0) and (appendx == 91)):
                print '91 causes singularity. not used'
            elif ((1 == 0) and (appendx == 103)):
                print '103 causes singularity. not used'
            elif ((1 == 0) and (appendx == 106)):
                print '106 is output.'
            elif (x == ''):
                x = str(appendx)
            else:
                x = ((x + ',') + str(appendx))
    for trial in xrange(3):
        sys.stdout.write('.')
        sys.stdout.flush()
        print '\nx:', x
        print 'y:', y
        start = time.time()
        kwargs = {'x': x, 'y': y, 'num_cross_validation_folds': 6, }
        glm = h2o_cmd.runGLMOnly(parseKey=parseKey, timeoutSecs=300, **kwargs)
        h2o_glm.simpleCheckGLM(self, glm, 57, **kwargs)
        print 'glm end on ', csvPathname, 'took', (time.time() - start), 'seconds'
        print '\nTrial #', trial
