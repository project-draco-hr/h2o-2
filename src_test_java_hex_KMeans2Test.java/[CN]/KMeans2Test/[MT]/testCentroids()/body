{
  String data="1, 0, 0\n" + "0, 1, 0\n" + "0, 0, 1\n";
  Frame fr=null;
  try {
    Key k=FVecTest.makeByteVec("yada",data);
    fr=ParseDataset2.parse(Key.make(),new Key[]{k});
    for (    boolean normalize : new boolean[]{false,true}) {
      for (      Initialization init : new Initialization[]{Initialization.None,Initialization.PlusPlus,Initialization.Furthest}) {
        KMeans2 parms=new KMeans2();
        parms.source=fr;
        parms.k=3;
        parms.normalize=normalize;
        parms.max_iter=100;
        parms.initialization=init;
        parms.seed=0;
        parms.invoke();
        KMeans2Model kmm=UKV.get(parms.dest());
        Assert.assertTrue(kmm.centers[0][0] + kmm.centers[0][1] + kmm.centers[0][2] == 1);
        Assert.assertTrue(kmm.centers[1][0] + kmm.centers[1][1] + kmm.centers[1][2] == 1);
        Assert.assertTrue(kmm.centers[2][0] + kmm.centers[2][1] + kmm.centers[2][2] == 1);
        Assert.assertTrue(kmm.centers[0][0] + kmm.centers[1][0] + kmm.centers[2][0] == 1);
        Assert.assertTrue(kmm.centers[0][0] + kmm.centers[1][0] + kmm.centers[2][0] == 1);
        Assert.assertTrue(kmm.centers[0][0] + kmm.centers[1][0] + kmm.centers[2][0] == 1);
        testHTML(kmm);
        kmm.delete();
      }
    }
  }
  finally {
    if (fr != null)     fr.delete();
  }
}
