{
  Platform.runLater(new Runnable(){
    @Override public void run(){
      VBox v=new VBox();
      for (int i=ls.length - 1; i > 0; i--) {
        HBox h=new HBox();
        h.getChildren().add(new Histogram("Layer " + i + " A",ls[i]._a));
        h.getChildren().add(new Histogram("E",ls[i]._e));
        v.getChildren().add(h);
        h=new HBox();
        h.getChildren().add(new Histogram("Layer " + i + " W",ls[i]._w));
        h.getChildren().add(new Histogram("B",ls[i]._b));
        v.getChildren().add(h);
        h=new HBox();
        h.getChildren().add(new Histogram("Layer " + i + " W S",ls[i]._wSpeed));
        h.getChildren().add(new Histogram("W B",ls[i]._bSpeed));
        v.getChildren().add(h);
        if (ls[i]._v != null) {
          h=new HBox();
          h.getChildren().add(new Histogram("Layer " + i + " V",ls[i]._v));
          h.getChildren().add(new Histogram("Gradient " + i + " V",ls[i]._gv));
          v.getChildren().add(h);
        }
      }
      Stage stage=new Stage();
      BorderPane root=new BorderPane();
      ToolBar toolbar=new ToolBar();
      Button refresh=new Button("Refresh");
      refresh.setOnAction(new EventHandler<ActionEvent>(){
        @Override public void handle(        ActionEvent e){
          refresh();
        }
      }
);
      toolbar.getItems().add(refresh);
      _auto=new CheckBox("Auto");
      _auto.selectedProperty().addListener(new ChangeListener<Boolean>(){
        public void changed(        ObservableValue<? extends Boolean> ov,        Boolean old_val,        Boolean new_val){
          refresh();
        }
      }
);
      toolbar.getItems().add(_auto);
      root.setTop(toolbar);
      ScrollPane scroll=new ScrollPane();
      scroll.setContent(v);
      root.setCenter(scroll);
      Scene scene=new Scene(root);
      stage.setScene(scene);
      stage.setWidth(1500);
      stage.setHeight(1100);
      stage.show();
      scene.getWindow().onCloseRequestProperty().addListener(new ChangeListener(){
        @Override public void changed(        ObservableValue arg0,        Object arg1,        Object arg2){
          _auto.selectedProperty().set(false);
        }
      }
);
      refresh();
    }
  }
);
}
