{
  Config config=new Config();
  String[] remaining=new String[0];
  try {
    Arguments arguments=new Arguments(args);
    arguments.extract(config);
    if (args.length == 0 || config.help != null)     throw new Exception();
    if (arguments.firstFlag() >= 0)     remaining=Arrays.copyOfRange(args,arguments.firstFlag(),args.length);
  }
 catch (  Exception ex) {
    Config defaults=new Config();
    System.out.println("Usage: h2o_on_hadoop [options] args");
    System.out.println();
    System.out.println("Options and default values:");
    System.out.println("  -version=" + defaults.version + ": Hadoop version");
    System.out.println("  -user=" + defaults.user);
    System.out.println("  -password=" + defaults.password);
    System.out.println("  -name_server=" + defaults.name_server + ": Hadoop cluster name server");
    System.out.println("  -job_tracker=" + defaults.job_tracker + ": Hadoop cluster job tracker");
    System.out.println("  -port=" + defaults.port + ": H2O port on each machine");
    System.out.println("  -ice_root=" + defaults.ice_root + ": H2O ice location");
    System.out.println("  -memory=" + defaults.memory + ": Java heap and hadoop task memory limit");
    System.out.println("  -script=" + defaults.script + ": Optional script (C.f. Web UI->Admin->Get Script)");
    return;
  }
  H2O.OPT_ARGS.hdfs_version=config.version;
  HdfsLoader.loadJars();
  HadoopTool.main(config,remaining);
}
