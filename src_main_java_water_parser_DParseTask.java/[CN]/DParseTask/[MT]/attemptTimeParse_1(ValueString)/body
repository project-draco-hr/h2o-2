{
  final byte[] buf=str._buf;
  int i=str._off;
  final int end=i + str._length;
  while (i < end && buf[i] == ' ')   i++;
  if (i < end && buf[i] == '"')   i++;
  if ((end - i) < 8)   return Long.MIN_VALUE;
  int yy=0, MM=0, dd=0;
  dd=digit(dd,buf[i++]);
  if (buf[i] != '-')   dd=digit(dd,buf[i++]);
  if (dd < 1 || dd > 31)   return Long.MIN_VALUE;
  if (buf[i++] != '-')   return Long.MIN_VALUE;
  OUTER:   for (; MM < MMS.length; MM++) {
    for (int j=0; j < MMS[MM].length; j++)     if (MMS[MM][j] != buf[i + j])     continue OUTER;
    break;
  }
  if (MM == MMS.length)   return Long.MIN_VALUE;
  i+=MMS[MM].length;
  MM++;
  if (buf[i++] != '-')   return Long.MIN_VALUE;
  yy=digit(yy,buf[i++]);
  yy=digit(yy,buf[i++]);
  yy+=2000;
  if (i < end && buf[i] == '"')   i++;
  if (i < end)   return Long.MIN_VALUE;
  return new GregorianCalendar(yy,MM,dd).getTimeInMillis();
}
