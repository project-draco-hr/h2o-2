def find_cloud(ip_port=None, expectedSize=1, nodesJsonPathname='h2o_fc-nodes.json', hdfs_version='cdh4', hdfs_config=None, hdfs_name_node='172.16.1.176', **kwargs):
    if (not ip_port):
        ip_port = 'localhost:54321'
    possMembers = [ip_port]
    h2oNodes = {}
    probes = set()
    tries = 0
    for (n1, possMember) in enumerate(possMembers):
        tries += 1
        if (possMember not in probes):
            probes.add(possMember)
            members2 = probe_node(possMember, h2oNodes, expectedSize)
            for (n2, member2) in enumerate(members2):
                tries += 1
                if (member2 not in probes):
                    probes.add(member2)
                    probe_node(member2, h2oNodes)
    print ('\nDid %s tries' % tries)
    print 'len(probe):', len(probes)
    h2oNodesList = [v for (k, v) in h2oNodes.iteritems()]
    print 'Checking for two h2os at same ip address'
    ips = {}
    count = {}
    for h in h2oNodesList:
        ip = h['http_addr']
        if (ip in ips):
            count[ip] += 1
            print ("\nWARNING: appears to be %s h2o's at the same IP address" % count[ip])
            print 'initial:', ips[ip]
            print 'another:', h, '\n'
        else:
            ips[ip] = h
            count[ip] = 1
    print 'Writing', nodesJsonPathname
    expandedCloud = {'cloud_start': {'time': 'null', 'cwd': 'null', 'python_test_name': 'null', 'python_cmd_line': 'null', 'config_json': 'null', 'username': 'null', 'ip': 'null', }, 'h2o_nodes': h2oNodesList, }
    with open(nodesJsonPathname, 'w+') as f:
        f.write(json.dumps(expandedCloud, indent=4))
    return expandedCloud
