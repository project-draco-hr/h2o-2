{
  int keysetSize=H2O.keySet().size();
  int numNodes=H2O.CLOUD._memary.length;
  int nodeIdx=H2O.SELF.index();
  Log.info("Removing " + keysetSize + " keys on this node; nodeIdx("+ nodeIdx+ ") numNodes("+ numNodes+ ")");
  for (  Job job : Job.all()) {
    job.cancel();
    if (job.cancelled())     continue;
    Job.waitUntilJobEnded(job.self());
  }
  Futures fs=new Futures();
  for (  Key key : H2O.keySet())   DKV.remove(key,fs);
  fs.blockForPending();
  Log.info("Keys remaining: " + H2O.store_size());
  tryComplete();
}
