{
  if (Double.isNaN(objval))   return true;
  double f_hat=0;
  final double[] grad=_lastResult._glmt.gradient(l2pen());
  ADMMSolver.subgrad(alpha[0],lambda[_lambdaIdx],beta,grad);
  for (int i=0; i < beta.length; ++i) {
    double diff=beta[i] - _lastResult._glmt._beta[i];
    f_hat+=grad[i] * diff;
  }
  f_hat=_lastResult._objval + 0.5 * step * f_hat;
  return objval > f_hat;
}
