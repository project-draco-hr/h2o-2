{
  final double rhs=alpha[0] * (2 * l1 - l2);
  int[] cols=MemoryManager.malloc4(_dinfo.fullN());
  int selected=0;
  int j=0;
  if (_activeCols == null)   _activeCols=new int[]{-1};
  for (int i=0; i < _dinfo.fullN(); ++i)   if ((j < _activeCols.length && i == _activeCols[j]) || grad[i] > rhs || grad[i] < -rhs) {
    cols[selected++]=i;
    if (j < _activeCols.length && i == _activeCols[j])     ++j;
  }
  if (!strong_rules_enabled || selected == _dinfo.fullN()) {
    _activeCols=null;
    _activeData._adaptedFrame=_dinfo._adaptedFrame;
    _activeData=_dinfo;
  }
 else {
    _activeCols=Arrays.copyOf(cols,selected);
    _activeData=_dinfo.filterExpandedColumns(_activeCols);
  }
  Log.info("GLM2 strong rule at lambda_value=" + l1 + ", got "+ selected+ " active cols out of "+ _dinfo.fullN()+ " total.");
  return _activeCols;
}
