{
  if (_glm.family == Family.binomial && prior != -1 && prior != ymu && !Double.isNaN(prior)) {
    double ratio=prior / ymu;
    double pi0=1, pi1=1;
    if (ratio > 1) {
      pi1=1.0 / ratio;
    }
 else     if (ratio < 1) {
      pi0=ratio;
    }
    _iceptAdjust=Math.log(pi0 / pi1);
  }
 else   prior=ymu;
  if (highAccuracy() || lambda_search) {
    new LMAXTask(GLM2.this,_dinfo,_glm,ymu,alpha[0],new H2OCallback<LMAXTask>(GLM2.this){
      @Override public void callback(      LMAXTask t){
        run(ymu,nobs,t.lmax(),t._val);
      }
    }
).asyncExec(_dinfo._adaptedFrame);
  }
 else   run(ymu,nobs,Double.NaN,null);
}
