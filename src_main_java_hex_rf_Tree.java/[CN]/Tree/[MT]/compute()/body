{
  Timer timer=new Timer();
  _stats[0]=new ThreadLocal<Statistic>();
  _stats[1]=new ThreadLocal<Statistic>();
  Data d=(true && _stratify) ? _data.sample(_strata,_seed) : _data.sample(_sample,_seed,_numrows);
  Statistic left=getStatistic(0,d,_seed,_exclusiveSplitLimit);
  for (  Row r : d)   left.addQ(r);
  left.applyClassWeights();
  Statistic.Split spl=left.split(d,false);
  _tree=spl.isLeafNode() ? new LeafNode(spl._split,d.rows()) : new FJBuild(spl,d,0,_seed).compute();
  if (_verbose > 1)   Utils.pln(computeStatistics().toString());
  _stats=null;
  appendKey(_modelKey,toKey());
  StringBuilder sb=new StringBuilder("[RF] Tree : ").append(_data_id + 1);
  sb.append(" d=").append(_tree.depth()).append(" leaves=").append(_tree.leaves()).append(" done in ").append(timer).append('\n');
  Utils.pln(_tree.toString(sb,_verbose > 0 ? Integer.MAX_VALUE : 200).toString());
  tryComplete();
}
