def test_parse_all_S3_thru_hdfs(self):
    print '\nLoad a list of files from S3, parse it thru HDFS'
    print "In EC2, michal's config always passes the right config xml"
    print 'as arg to the java -jar h2o.jar. Only works in EC2'
    timeoutSecs = 200
    URI = 's3n://home-0xdiag-datasets'
    importHDFSResult = h2o.nodes[0].import_hdfs(URI)
    S3FullList = importHDFSResult['succeeded']
    print 'S3FullList:', h2o.dump_json(S3FullList)
    self.assertGreater(len(S3FullList), 8, "Didn't see more than 8 files in S3?")
    if (1 == 0):
        S3List = random.sample(S3FullList, 8)
    else:
        S3List = S3FullList
    for s in S3List:
        S3Key = s['key']
        S3Filename = s['file']
        print 'Loading S3 key: ', S3Key, 'thru HDFS'
        parseKey = h2o.nodes[0].parse(S3Key, (S3Filename + '.hex'), timeoutSecs=120, retryDelaySecs=5, pollTimeoutSecs=60)
        print S3Filename, 'parse time:', parseKey['response']['time']
        print 'parse result:', parseKey['destination_key']
        start = time.time()
        sys.stdout.flush()
