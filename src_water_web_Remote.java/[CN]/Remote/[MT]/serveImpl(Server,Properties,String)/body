{
  RString response=new RString(html);
  String addr=args.getProperty("Node");
  if (addr.charAt(0) == '/')   addr=addr.substring(1);
  String[] adrs=addr.split(":");
  H2ONode h2o=null;
  try {
    h2o=H2ONode.intern(InetAddress.getByName(adrs[0]),Integer.decode(adrs[1]) + 1);
  }
 catch (  UnknownHostException uhe) {
    return error("Unknown address " + addr);
  }
catch (  NumberFormatException nfe) {
    return error("Unknown port " + adrs[1]);
  }
  H2O cloud=H2O.CLOUD;
  if (h2o == null || !cloud._memset.contains(h2o))   return error("Unknown Node " + addr);
  if (h2o == H2O.SELF)   return ((H2OPage)Server.getPage("StoreView")).serveImpl(server,new Properties(),sessionID);
  Key[] keys=new RPC<GetKeys>(h2o,new GetKeys()).call().get()._keys;
  int alt=0;
  for (  Key key : keys) {
    Value val=DKV.get(key,100);
    if (val == null)     continue;
    RString row=response.restartGroup("tableRow");
    row.replace("key",key.toString());
    row.replace("value",val.getString(100,new StringBuilder()));
    row.append();
    alt++;
  }
  response.replace("noOfKeys",alt);
  return response.toString();
}
