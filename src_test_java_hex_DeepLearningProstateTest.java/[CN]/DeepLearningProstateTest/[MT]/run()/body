{
  Key file=NFSFileVec.make(find_test_file("smalldata/./logreg/prostate.csv"));
  Frame frame=ParseDataset2.parse(Key.make(),new Key[]{file});
  Key dest=Key.make("prostate");
{
    DeepLearning p=new DeepLearning();
    p.epochs=1000;
    p.source=frame;
    p.response=frame.vecs()[1];
    p.validation=frame;
    p.destination_key=dest;
    p.force_load_balance=false;
    p.balance_classes=false;
    p.shuffle_training_data=false;
    p.score_training_samples=0;
    p.score_validation_samples=0;
    p.execImpl();
  }
{
    DeepLearningModel mymodel=UKV.get(dest);
    Frame pred=mymodel.score(frame);
    water.api.ConfusionMatrix CM=new water.api.ConfusionMatrix();
    CM.actual=frame;
    CM.vactual=frame.vecs()[1];
    CM.predict=pred;
    CM.vpredict=pred.vecs()[0];
    CM.serve();
    StringBuilder sb=new StringBuilder();
    CM.toASCII(sb);
    double error=new ConfusionMatrix(CM.cm).err();
    Log.info(sb);
    pred.delete();
    mymodel.delete();
  }
  frame.delete();
}
