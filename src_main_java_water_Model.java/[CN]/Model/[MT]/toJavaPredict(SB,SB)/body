{
  ccsb.nl();
  ccsb.p("  // Pass in data in a double[], pre-aligned to the Model's requirements.\n");
  ccsb.p("  // Jam predictions into the preds[] array; preds[0] is reserved for the\n");
  ccsb.p("  // main prediction (class for classifiers or value for regression),\n");
  ccsb.p("  // and remaining columns hold a probability distribution for classifiers.\n");
  ccsb.p("  public final float[] predict( double[] data, float[] preds ) {\n");
  SB classCtxSb=new SB();
  toJavaPredictBody(ccsb.ii(2),classCtxSb,fileCtxSb);
  ccsb.di(1);
  ccsb.p("    return preds;").nl();
  ccsb.p("  }").nl();
  ccsb.p(classCtxSb);
  return ccsb;
}
