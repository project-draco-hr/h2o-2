{
  int ridx=fr.find(_names[_names.length - 1]);
  if (ridx != -1 && ridx != fr._names.length - 1) {
    String n=fr._names[ridx];
    fr.add(n,fr.remove(ridx));
  }
  int n=ridx == -1 ? _names.length - 1 : _names.length;
  String[] names=Arrays.copyOf(_names,n);
  fr=fr.subframe(names);
  Vec[] frvecs=fr.vecs();
  if (!exact)   for (int i=0; i < n; ++i)   if (_domains[i] != null && !frvecs[i].isEnum())   frvecs[i]=frvecs[i].toEnum();
  int map[][]=adapt(names,fr.domains(),exact);
  ArrayList<Vec> avecs=new ArrayList<Vec>();
  ArrayList<String> anames=new ArrayList<String>();
  for (int c=0; c < map.length; c++)   if (map[c] != null) {
    avecs.add(frvecs[c]=frvecs[c].makeTransf(map[c]));
    anames.add(names[c]);
  }
  return new Frame[]{new Frame(names,frvecs),new Frame(anames.toArray(new String[anames.size()]),avecs.toArray(new Vec[avecs.size()]))};
}
