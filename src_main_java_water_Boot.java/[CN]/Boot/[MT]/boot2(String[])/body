{
  boolean help=false;
  boolean version=false;
  for (int i=0; i < args.length; i++) {
    String arg=args[i];
    Log.POST(110,arg == null ? "(arg is null)" : "arg is: " + arg);
    if (arg.equals("-h") || arg.equals("--h") || arg.equals("-help")|| arg.equals("--help")) {
      help=true;
    }
    if (arg.equals("-version") || arg.equals("--version")) {
      version=true;
    }
  }
  if (help) {
    H2O.printHelp();
    H2O.exit(0);
  }
  if (version) {
    H2O.printAndLogVersion();
    H2O.exit(0);
  }
  _systemLoader=(URLClassLoader)getSystemClassLoader();
  _addUrl=URLClassLoader.class.getDeclaredMethod("addURL",URL.class);
  _addUrl.setAccessible(true);
  if (fromJar()) {
    String tmproottmpdir;
{
      String ice_root;
{
        ice_root=H2O.DEFAULT_ICE_ROOT();
        for (int i=0; i < args.length; i++)         if (args[i].startsWith("--ice_root="))         ice_root=args[i].substring(11);
 else         if (args[i].startsWith("-ice_root="))         ice_root=args[i].substring(10);
 else         if ((args[i].equals("--ice_root") || args[i].equals("-ice_root")) && (i < args.length - 1))         ice_root=args[i + 1];
      }
      File tmproot=new File(ice_root);
      if (!tmproot.mkdirs() && !tmproot.isDirectory())       throw new IOException("Unable to create ice root: " + tmproot.getAbsolutePath());
      long now;
      String randomChars;
      String pid;
{
        now=System.currentTimeMillis();
        pid="unknown";
        Random r=new Random();
        byte[] bytes=new byte[4];
        r.nextBytes(bytes);
        randomChars=String.format("%02x%02x%02x%02x",bytes[0],bytes[1],bytes[2],bytes[3]);
        try {
          String s=ManagementFactory.getRuntimeMXBean().getName();
          Pattern p=Pattern.compile("([0-9]*).*");
          Matcher m=p.matcher(s);
          boolean b=m.matches();
          if (b == true) {
            pid=m.group(1);
          }
        }
 catch (        Exception _) {
        }
      }
      tmproottmpdir=tmproot + File.separator + "h2o-temp-"+ now+ "-"+ randomChars+ "-"+ pid;
    }
    File dir=new File(tmproottmpdir);
    if (dir.exists()) {
      if (!dir.delete())       throw new IOException("Failed to remove tmp file: " + dir.getAbsolutePath());
    }
    if (!dir.mkdir())     throw new IOException("Failed to create tmp dir: " + dir.getAbsolutePath());
    Runtime.getRuntime().addShutdownHook(new DeleteDirHandler(dir.toString()));
    _parentDir=dir;
    Log.debug("Extracting jar into " + _parentDir);
    extractInternalFiles();
    addInternalJars("apache");
    addInternalJars("gson");
    addInternalJars("junit");
    addInternalJars("jama");
    addInternalJars("poi");
    addInternalJars("s3");
    addInternalJars("jets3t");
    addInternalJars("log4j");
  }
  run(args);
}
