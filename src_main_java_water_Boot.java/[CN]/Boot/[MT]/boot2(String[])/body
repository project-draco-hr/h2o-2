{
  boolean help=false;
  boolean version=false;
  for (int i=0; i < args.length; i++) {
    String arg=args[i];
    Log.POST(110,arg == null ? "(arg is null)" : "arg is: " + arg);
    if (arg.equals("-h") || arg.equals("--h") || arg.equals("-help")|| arg.equals("--help")) {
      help=true;
    }
    if (arg.equals("-version") || arg.equals("--version")) {
      version=true;
    }
  }
  if (help) {
    H2O.printHelp();
    H2O.exit(0);
  }
  if (version) {
    H2O.printAndLogVersion();
    H2O.exit(0);
  }
  if (fromJar()) {
    _systemLoader=(URLClassLoader)getSystemClassLoader();
    _addUrl=URLClassLoader.class.getDeclaredMethod("addURL",URL.class);
    _addUrl.setAccessible(true);
    String sroot=System.getProperty("java.io.tmpdir");
    for (int i=0; i < args.length; i++)     if (args[i].startsWith("--ice_root="))     sroot=args[i].substring(11);
 else     if (args[i].startsWith("-ice_root="))     sroot=args[i].substring(10);
 else     if ((args[i].equals("--ice_root") || args[i].startsWith("-ice_root")) && i < args.length - 1)     sroot=args[i + 1];
    File tmproot=new File(sroot);
    if (!tmproot.mkdirs() && !tmproot.isDirectory())     throw new IOException("Unable to create ice root: " + tmproot.getAbsolutePath());
    File dir=File.createTempFile("h2o-temp-","",tmproot);
    if (!dir.delete())     throw new IOException("Failed to remove tmp file: " + dir.getAbsolutePath());
    if (!dir.mkdir())     throw new IOException("Failed to create tmp dir: " + dir.getAbsolutePath());
    dir.deleteOnExit();
    _parentDir=dir;
    Log.debug("Extracting jar into " + _parentDir);
    extractInternalFiles();
    addInternalJars("apache");
    addInternalJars("gson");
    addInternalJars("junit");
    addInternalJars("jama");
    addInternalJars("poi");
    addInternalJars("s3");
    addInternalJars("jets3t");
    addInternalJars("log4j");
  }
  run(args);
}
