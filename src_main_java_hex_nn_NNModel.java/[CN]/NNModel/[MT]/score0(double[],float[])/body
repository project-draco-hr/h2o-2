{
  Neurons[] neurons=NNTask.makeNeuronsForTesting(model_info);
  ((Neurons.Input)neurons[0]).setInput(-1,data);
  NNTask.step(-1,neurons,model_info,false,null);
  double[] out=neurons[neurons.length - 1]._a;
  if (isClassifier()) {
    assert(preds.length == out.length + 1);
    for (int i=0; i < preds.length - 1; ++i)     preds[i + 1]=(float)out[i];
    preds[0]=getPrediction(preds,data);
  }
 else {
    assert(preds.length == 1 && out.length == 1);
    if (model_info().data_info()._normRespMul != null)     preds[0]=(float)(out[0] / model_info().data_info()._normRespMul[0] + model_info().data_info()._normRespSub[0]);
 else     preds[0]=(float)out[0];
  }
  return preds;
}
