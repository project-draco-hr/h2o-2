def test_exec2_sum(self):
    h2o.beta_features = True
    bucket = 'home-0xdiag-datasets'
    if localhost:
        csvPathname = '1B/reals_100000x1000_15f.data'
    else:
        csvPathname = '1B/reals_1000000x1000_15f.data'
    hex_key = 'r1'
    parseResult = h2i.import_parse(bucket=bucket, path=csvPathname, schema='local', hex_key=hex_key, timeoutSecs=3000, retryDelaySecs=2, doSummary=False)
    inspect = h2o_cmd.runInspect(key=hex_key)
    print 'numRows:', inspect['numRows']
    print 'numCols:', inspect['numCols']
    inspect = h2o_cmd.runInspect(key=hex_key, offset=(-1))
    print 'inspect offset = -1:', h2o.dump_json(inspect)
    xList = []
    eList = []
    fList = []
    for trial in range(300):
        for execExpr in exprList:
            execExpr = re.sub('Last.value', ('Last.value%s' % trial), execExpr)
            start = time.time()
            (execResult, result) = h2e.exec_expr(h2o.nodes[0], execExpr, resultKey=None, timeoutSecs=300)
            execTime = (time.time() - start)
            print 'exec took', execTime, 'seconds'
            if ('r1' in execExpr):
                xList.append(trial)
                eList.append(execTime)
            if ('log' in execExpr):
                fList.append(execTime)
    h2o.check_sandbox_for_errors()
    if DO_PLOT:
        xLabel = 'trial'
        eLabel = 'time: Last.value<trial>.4 = r1[,c(1)]'
        fLabel = 'time: Last.value<trial>.7 = log(Last.value<trial>.6)'
        eListTitle = ''
        fListTitle = ''
        h2o_gbm.plotLists(xList, xLabel, eListTitle, eList, eLabel, fListTitle, fList, fLabel, server=True)
