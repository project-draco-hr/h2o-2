{
  Log.info("\nGathering additional data before log collection.");
  Log.info("\nCollecting cloud status.");
  new Cloud().serve();
  Log.info("\nPerforming network test.");
  new NetworkTest().invoke();
  Log.info("\nCollecting stack traces.");
  new JStack().serve();
  Log.info("\nCollecting logs.");
  LogCollectorTask collector=new LogCollectorTask();
  collector.invokeOnAllNodes();
  String outputFileStem=getOutputLogStem();
  byte[] result=null;
  try {
    result=zipLogs(collector._result,outputFileStem);
  }
 catch (  IOException e) {
    result=e.toString().getBytes();
  }
  NanoHTTPD.Response res=server.new Response(NanoHTTPD.HTTP_OK,NanoHTTPD.MIME_DEFAULT_BINARY,new ByteArrayInputStream(result));
  res.addHeader("Content-Length",Long.toString(result.length));
  res.addHeader("Content-Disposition","attachment; filename=" + outputFileStem + ".zip");
  return res;
}
