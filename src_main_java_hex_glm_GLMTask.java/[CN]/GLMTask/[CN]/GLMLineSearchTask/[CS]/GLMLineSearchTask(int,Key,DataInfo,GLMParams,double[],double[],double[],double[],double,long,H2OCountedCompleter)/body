{
  super(jobKey,dinfo,glm,cmp);
  double[][] betas=new double[32][];
  double step=GLM2.LS_STEP;
  for (int i=0; i < betas.length; ++i) {
    betas[i]=MemoryManager.malloc8d(newBeta.length);
    for (int j=0; j < oldBeta.length; ++j) {
      betas[i][j]=oldBeta[j] + step * (newBeta[j] - oldBeta[j]);
      if (lowerBounds != null && betas[i][j] < lowerBounds[j])       betas[i][j]=lowerBounds[j];
      if (upperBounds != null && betas[i][j] > upperBounds[j])       betas[i][j]=upperBounds[j];
    }
    step*=GLM2.LS_STEP;
  }
  _glmts=new GLMIterationTask[betas.length];
  for (int i=0; i < _glmts.length; ++i)   _glmts[i]=new GLMIterationTask(noff,jobKey,dinfo,glm,false,true,true,betas[i],ymu,1.0 / nobs,new float[]{0},null);
}
