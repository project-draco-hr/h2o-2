{
  super(jobKey,dinfo,glm,cmp);
  _l2pen=0.5 * (1 - alpha) * lambda;
  _l1pen=alpha * lambda;
  _reg=1.0 / nobs;
  ArrayList<double[]> betas=new ArrayList<double[]>();
  double diff=1;
  while (diff > betaEps && betas.size() < 100) {
    diff=0;
    double[] b=MemoryManager.malloc8d(oldBeta.length);
    for (int i=0; i < oldBeta.length; ++i) {
      b[i]=0.5 * (oldBeta[i] + newBeta[i]);
      double d=b[i] - oldBeta[i];
      if (d > diff || -d > diff)       diff=d;
    }
    betas.add(b);
    newBeta=b;
  }
  _betas=new double[betas.size()][];
  betas.toArray(_betas);
}
