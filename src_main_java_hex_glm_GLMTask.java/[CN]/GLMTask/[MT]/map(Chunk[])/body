{
  final int nrows=chunks[0]._len;
  double[] nums=MemoryManager.malloc8d(_nums);
  int[] cats=MemoryManager.malloc4(_cats);
  OUTER:   for (int r=0; r < nrows; ++r) {
    for (    Chunk c : chunks)     if (c.isNA0(r))     continue OUTER;
    int i=0, ncats=0;
    for (; i < _cats; ++i) {
      int c=(int)chunks[i].at80(r);
      if (c != 0)       cats[ncats++]=c + _catOffsets[i] - 1;
    }
    for (; i < chunks.length - 1; ++i)     nums[i - _cats]=(chunks[i].at0(r) - _normSub[i - _cats]) * _normMul[i - _cats];
    processRow(nums,ncats,cats,chunks[chunks.length - 1].at0(r));
  }
}
