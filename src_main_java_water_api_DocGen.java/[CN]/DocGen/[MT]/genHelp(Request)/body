{
  final String name=R.getClass().getSimpleName();
  final FieldDoc docs[]=R.toDocField();
  final StringBuilder sb=new StringBuilder();
  bodyHead(sb);
  title(sb,name);
  paragraph(sb,"");
  section(sb,"Supported HTTP methods and descriptions");
  String gs=R.toDocGET();
  if (gs != null) {
    paragraph(sb,"GET");
    paragraph(sb,gs);
  }
  section(sb,"URL");
  paraTail(escape(paraHead(sb),"http://<h2oHost>:<h2oApiPort>/" + name + ".json"));
  if (docs == null)   return bodyTail(sb).toString();
  section(sb,"Input parameters");
  listHead(sb);
  for (  FieldDoc doc : docs) {
    if (doc.isInput()) {
      Argument arg=doc.arg(R);
      String help=doc._help;
      boolean required=doc._required;
      String[] errors=null;
      if (arg != null) {
        String description=arg.queryDescription();
        if (description != null && description.length() != 0)         help=description;
        required|=arg._required;
        errors=arg.errors();
      }
      listBullet(sb,bold(doc._name) + ", a " + doc._clazz.getSimpleName(),help + ".  " + doc.version(),0);
      if (errors != null || required) {
        paragraph(sb,"");
        paragraph(sb,bold("Possible JSON error field returns:"));
        listHead(sb);
        String argErr="Argument '" + doc._name + "' error: ";
        if (errors != null)         for (        String err : errors)         listBullet(sb,argErr + err,"",1);
        if (required)         listBullet(sb,argErr + "Argument '" + doc._name+ "' is required, but not specified","",1);
        listTail(sb);
      }
    }
  }
  listTail(sb);
  section(sb,"Output JSON elements");
  listJSONFields(sb,docs);
  section(sb,"HTTP response codes");
  paragraph(sb,"200 OK");
  paragraph(sb,"Success and error responses are identical.");
  String s[]=R.DocExampleSucc();
  if (s != null) {
    section(sb,"Success Example");
    paraHead(sb);
    url(sb,name,s);
    paraTail(sb);
    paragraph(sb,serve(name,s));
  }
  String f[]=R.DocExampleFail();
  if (f != null) {
    section(sb,"Error Example");
    paraHead(sb);
    url(sb,name,f);
    paraTail(sb);
    paragraph(sb,serve(name,f));
  }
  bodyTail(sb);
  return sb.toString();
}
