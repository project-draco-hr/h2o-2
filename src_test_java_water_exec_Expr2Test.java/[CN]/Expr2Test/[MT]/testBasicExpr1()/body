{
  Key dest=Key.make("h.hex");
  try {
    File file=TestUtil.find_test_file("smalldata/tnc3_10.csv");
    Key fkey=NFSFileVec.make(file);
    ParseDataset2.parse(dest,new Key[]{fkey});
    UKV.remove(fkey);
    checkStr("* + 1");
    checkStr("x<-+;x(2)");
    checkStr("x<-+;x(1,2)");
    checkStr("x<-*;x(2,3)");
    checkStr("!1");
    checkStr("(!)(1)");
    checkStr("(!!)(1)");
    checkStr("-1");
    checkStr("-(1)");
    checkStr("(-)(1)");
    checkStr("-T");
    checkStr("-(x = 3)");
    checkStr("x=c(0,1);!x+1");
    checkStr("x=c(1,-2);-+---x");
    checkStr("x=c(1,-2);--!--x");
    checkStr("!(y=c(3,4))");
    checkStr("!x!=1");
    checkStr("(!x)!=1");
    checkStr("1+x^2");
    checkStr("1+x**2");
    checkStr("x + 2/y");
    checkStr("x + (2/y)");
    checkStr("-x + y");
    checkStr("-(x + y)");
    checkStr("-x % y");
    checkStr("-(x % y)");
    checkStr("1.23");
    checkStr(" 1.23 + 2.34");
    checkStr(" 1.23 + 2.34 * 3");
    checkStr(" 1.23 2.34");
    checkStr("1.23 < 2.34");
    checkStr("1.23 <=2.34");
    checkStr("1.23 > 2.34");
    checkStr("1.23 >=2.34");
    checkStr("1.23 ==2.34");
    checkStr("1.23 !=2.34");
    checkStr("h.hex");
    checkStr("+(1.23,2.34)");
    checkStr("+(1.23)");
    checkStr("+(1.23,2,3)");
    checkStr("h.hex[2,3]");
    checkStr("h.hex[2,+]");
    checkStr("h.hex[2+4,-4]");
    checkStr("h.hex[1,-1]; h.hex[2,-2]; h.hex[3,-3]");
    checkStr("h.hex[2+3,h.hex]");
    checkStr("h.hex[2,]");
    checkStr("h.hex[,3]");
    checkStr("h.hex+1");
    checkStr("h.hex-h.hex");
    checkStr("1.23+(h.hex-h.hex)");
    checkStr("(1.23+h.hex)-h.hex");
    checkStr("min(h.hex,1+2)");
    checkStr("max(h.hex,1+2)");
    checkStr("min.na.rm(h.hex,NA)");
    checkStr("max.na.rm(h.hex,NA)");
    checkStr("min.na.rm(c(NA, 1), -1)");
    checkStr("max.na.rm(c(NA, 1), -1)");
    checkStr("max(c(Inf,1),2)");
    checkStr("min(c(Inf,1),-Inf)");
    checkStr("is.na(h.hex)");
    checkStr("sum(is.na(h.hex))");
    checkStr("nrow(h.hex)*3");
    checkStr("h.hex[nrow(h.hex)-1,ncol(h.hex)-1]");
    checkStr("1=2");
    checkStr("x");
    checkStr("x+2");
    checkStr("2+x");
    checkStr("x=1");
    checkStr("x<-1");
    checkStr("x=1;x=h.hex");
    checkStr("a=h.hex");
    checkStr("x<-+");
    checkStr("(h.hex+1)<-2");
    checkStr("h.hex[nrow(h.hex=1),]");
    checkStr("h.hex[2,3]<-4;");
    checkStr("c(1,3,5)");
    checkStr("function(=){x+1}(2)");
    checkStr("function(x,=){x+1}(2)");
    checkStr("function(x,<-){x+1}(2)");
    checkStr("function(x,x){x+1}(2)");
    checkStr("function(x,y,z){x[]}(h.hex,1,2)");
    checkStr("function(x){x[]}(2)");
    checkStr("function(x){x+1}(2)");
    checkStr("function(x){y=x+y}(2)");
    checkStr("function(x){}(2)");
    checkStr("function(x){y=x*2; y+1}(2)");
    checkStr("function(x){y=1+2}(2)");
    checkStr("function(x){y=1+2;y=c(1,2)}");
    checkStr("sum(1,2,3)");
    checkStr("sum(c(1,3,5))");
    checkStr("sum(4,c(1,3,5),2,6)");
    checkStr("sum(1,h.hex,3)");
    checkStr("h.hex[,c(1,3,5)]");
    checkStr("h.hex[c(1,3,5),]");
    checkStr("a=c(11,22,33,44,55,66); a[c(2,6,1),]");
    checkStr("function(a){a[];a=1}");
    checkStr("a=1;a=2;function(x){x=a;a=3}");
    checkStr("a=h.hex;function(x){x=a;a=3;nrow(x)*a}(a)");
    checkStr("a=h.hex;a[,1]=(a[,1]==8)");
    checkStr("function(funy){function(x){funy(x)*funy(x)}}(sgn)(-2)");
    checkStr("h.hex[h.hex[,2]>4,]");
    checkStr("a=c(1,2,3);a[a[,1]>10,1]");
    checkStr("apply(h.hex,2,sum)");
    checkStr("y=5;apply(h.hex,2,function(x){x[]+y})");
    checkStr("apply(h.hex,2,function(x){x=1;h.hex})");
    checkStr("apply(h.hex,2,function(x){h.hex})");
    checkStr("mean=function(x){apply(x,2,sum)/nrow(x)};mean(h.hex)");
    checkStr("ifelse(0,1,2)");
    checkStr("ifelse(0,h.hex+1,h.hex+2)");
    checkStr("ifelse(h.hex>3,99,h.hex)");
    checkStr("ifelse(0,+,*)(1,2)");
    checkStr("(0 ? + : *)(1,2)");
    checkStr("(1? h.hex : (h.hex+1))[1,2]");
    checkStr("apply(h.hex,2,function(x){total=sum(ifelse(is.na(x),0,x)); rcnt=nrow(x)-sum(is.na(x)); mean=total / rcnt; ifelse(is.na(x),mean,x)})");
    checkStr("factor(h.hex[,5])");
    checkStr("h.hex[,2]");
    checkStr("h.hex[,2]+1");
    checkStr("h.hex[,3]=3.3;h.hex");
    checkStr("h.hex[,3]=h.hex[,2]+1");
    checkStr("h.hex[,ncol(h.hex)+1]=4");
    checkStr("a=ncol(h.hex);h.hex[,c(a+1,a+2)]=5");
    checkStr("table(h.hex)");
    checkStr("table(h.hex[,3])");
    checkStr("h.hex[,4] != 29 | h.hex[,2] < 305 & h.hex[,2] < 81");
    checkStr("a=cbind(c(1,2,3), c(4,5,6))");
    checkStr("a[,1] = factor(a[,1])");
    checkStr("is.factor(a[,1])");
    checkStr("a=0;x=0;y=0");
  }
  finally {
    UKV.remove(dest);
  }
}
