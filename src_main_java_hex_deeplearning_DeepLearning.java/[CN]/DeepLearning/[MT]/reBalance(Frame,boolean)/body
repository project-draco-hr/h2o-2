{
  int cores=0;
  for (  H2ONode node : H2O.CLOUD._memary) {
    if (local)     cores=Math.max(cores,node._heartbeat._num_cpus);
 else     cores+=node._heartbeat._num_cpus;
  }
  final int chunks=4 * cores;
  if (force_load_balance && chunks < fr.numRows()) {
    Log.info("Starting load balancing into (at least) " + chunks + " chunks.");
    return MRUtils.shuffleAndBalance(fr,chunks,seed,local,shuffle_training_data);
  }
 else   return fr;
}
