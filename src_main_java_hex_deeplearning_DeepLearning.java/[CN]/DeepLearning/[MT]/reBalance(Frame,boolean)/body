{
  final int chunks=(int)Math.min(4 * H2O.NUMCPUS * (local ? 1 : H2O.CLOUD.size()),fr.numRows());
  if (force_load_balance) {
    Log.info("Starting load balancing into (at least) " + chunks + " chunks.");
    Key newKey=fr._key != null ? Key.make(fr._key.toString() + ".balanced") : Key.make();
    RebalanceDataSet rb=new RebalanceDataSet(fr,newKey,chunks);
    H2O.submitTask(rb);
    rb.join();
    Frame rebalanced=UKV.get(newKey);
    Log.info("Load balancing done.");
    return rebalanced;
  }
 else   return fr;
}
