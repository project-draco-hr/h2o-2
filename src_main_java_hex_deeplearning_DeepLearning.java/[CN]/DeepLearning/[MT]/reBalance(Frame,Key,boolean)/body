{
  final int chunks=(int)Math.min(4 * H2O.NUMCPUS * (local ? 1 : H2O.CLOUD.size()),fr.numRows());
  if (fr.anyVec().nChunks() > chunks) {
    Log.info("Dataset already contains " + fr.anyVec().nChunks() + " chunks. No need to rebalance.");
    return fr;
  }
  if (!quiet_mode)   Log.info("ReBalancing dataset into (at least) " + chunks + " chunks.");
  RebalanceDataSet rb=new RebalanceDataSet(fr,newKey,chunks);
  H2O.submitTask(rb);
  rb.join();
  Frame rebalanced=UKV.get(newKey);
  return rebalanced;
}
