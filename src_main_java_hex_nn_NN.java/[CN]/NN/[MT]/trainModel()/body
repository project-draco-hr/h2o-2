{
  NNModel model=UKV.get(dest());
  NNModel.NNModelInfo modelinfo=model.model_info;
  final Frame[] adapted=validation == null ? null : model.adapt(validation,false);
  for (int epoch=1; epoch <= epochs; ++epoch) {
    boolean training=true;
    NNTask nntask=new NNTask(this,_dinfo,this,modelinfo,training).doAll(_dinfo._adaptedFrame);
    modelinfo=nntask._output;
    if (diagnostics)     modelinfo.computeDiagnostics();
    final String label=(validation == null ? "Training" : "Validation") + " error after training for " + model.epoch_counter+ " epochs ("+ model.model_info.processed+ " samples):";
    doScoring(model,validation == null ? _dinfo._adaptedFrame : adapted[0],label,epoch == epochs);
    model.epoch_counter=epoch;
    DKV.put(dest(),model);
  }
  if (adapted != null)   adapted[1].remove();
  System.out.println("Job finished.\n\n");
}
