{
  long now=System.currentTimeMillis();
  if (_firstScore == 0)   _firstScore=now;
  long sinceLastScore=now - _timeLastScoreStart;
  if ((now - _firstScore < 4000) || (sinceLastScore > 4000 && (double)(_timeLastScoreEnd - _timeLastScoreStart) / sinceLastScore < 0.1)) {
    _timeLastScoreStart=now;
    final Frame[] score=model.adapt(fr,false);
    final Vec prediction=model.score(score[0]).lastVec();
    ConfusionMatrix CM=new ConfusionMatrix();
    CM.actual=fr;
    CM.vactual=fr.lastVec();
    CM.predict=score[0];
    CM.vpredict=prediction;
    CM.serve();
    long cm[][]=CM.cm;
    long acts[]=new long[cm.length];
    long preds[]=new long[cm[0].length];
    for (int a=0; a < cm.length; a++) {
      long sum=0;
      for (int p=0; p < cm[a].length; p++) {
        sum+=cm[a][p];
        preds[p]+=cm[a][p];
      }
      acts[a]=sum;
    }
    String adomain[]=ConfusionMatrix.show(acts,CM.vactual.toEnum().domain());
    String pdomain[]=ConfusionMatrix.show(preds,CM.vpredict.toEnum().domain());
    StringBuilder sb=new StringBuilder();
    sb.append("Act/Prd\t");
    for (    String s : pdomain)     if (s != null)     sb.append(s).append('\t');
    sb.append("Error\n");
    _timeLastScoreEnd=System.currentTimeMillis();
  }
}
