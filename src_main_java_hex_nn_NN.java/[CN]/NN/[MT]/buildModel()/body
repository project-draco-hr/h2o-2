{
  final Key outputKey=dest();
  UKV.remove(outputKey);
  NNModel.NNModelInfo modelinfo=null;
  NNModel model=new NNModel(outputKey,self(),_dinfo,this,modelinfo);
  DKV.put(outputKey,model);
  assert(model.isClassifier() == classification);
  final Frame[] adapted=validation == null ? null : model.adapt(validation,false);
  for (int epoch=1; epoch <= epochs; ++epoch) {
    boolean training=true;
    NNTask nntask=new NNTask(this,_dinfo,this,modelinfo,training).doAll(_dinfo._adaptedFrame);
    modelinfo=nntask._output;
    if (diagnostics)     modelinfo.computeDiagnostics();
    doScoring(model,validation == null ? _dinfo._adaptedFrame : adapted[0]);
    model.epoch_counter=epoch;
    DKV.put(outputKey,model);
  }
}
