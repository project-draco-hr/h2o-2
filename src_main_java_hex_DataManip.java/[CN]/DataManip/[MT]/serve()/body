{
  if (operation == Operation.cbind) {
    Vec[] v2=source2.vecs();
    String[] n2=source2.names();
    Set<String> n1=new HashSet<String>(Arrays.asList(source.names()));
    String[] nadd=new String[cols.length];
    Vec[] vadd=new Vec[cols.length];
    for (int i=0; i < cols.length; i++) {
      vadd[i]=v2[cols[i]];
      nadd[i]=n2[cols[i]];
      int count=0;
      while (n1.contains(nadd[i])) {
        nadd[i]+="_DF2";
        if (count > 0)         nadd[i]+="_" + count;
        count++;
      }
    }
    if (source.vecs()[0].length() != vadd[0].length())     throw new IllegalArgumentException("Data frames must have same number of rows!");
    String[] names=Utils.append(source.names(),nadd);
    Vec[] vecs=Utils.append(source.vecs(),vadd);
    Frame fr=new Frame(names,vecs);
    DKV.put(dest(),fr);
  }
 else   if (operation == Operation.rbind) {
    throw H2O.unimpl();
  }
  JsonObject res=new JsonObject();
  res.addProperty(RequestStatics.DEST_KEY,destination_key.toString());
  JsonObject redir=new JsonObject();
  redir.addProperty("src_key",destination_key.toString());
  return Response.redirect(res,Inspect2.class,redir);
}
