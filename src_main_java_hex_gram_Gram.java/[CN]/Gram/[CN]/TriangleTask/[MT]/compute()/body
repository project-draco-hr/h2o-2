{
  final int sparseN=_diag.length;
  if ((_j1 - _j0) * (_fullN << 2 - _j0 - _j1) >>> 2 > Gram.MIN_TSKSZ) {
    int mid=(_j0 + _j1) >>> 1;
    setPendingCount(1);
    new TriangleTask(this,_xx,_s0,_s1,mid,_j1).fork();
    new TriangleTask(this,_xx,_s0,_s1,_j0,mid).compute();
  }
 else {
    for (int j=_j0; j < _j1; j++) {
      int k=j - sparseN;
      for (int i=k; i < _denseN; i++)       for (int s=_s0; s < _s1; s++)       _xx[i][j]-=_xx[k][s] * _xx[i][s];
    }
    tryComplete();
  }
}
