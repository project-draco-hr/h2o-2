{
  Key key=Key.make("iris.hex");
  Frame fr=parseFrame(key,"./smalldata/iris/iris.csv");
  int[] nfolds=new int[]{2,3,10,11};
  long nrows=fr.numRows();
  try {
    for (int i=0; i < nfolds.length; i++) {
      int n=nfolds[i];
      for (int f=0; f < n; f++) {
        Frame[] splits=null;
        try {
          NFoldFrameExtractor nffe=new NFoldFrameExtractor(fr,n,f,null,null);
          H2O.submitTask(nffe);
          splits=nffe.getResult();
          Arrays.deepToString(splits);
          Assert.assertEquals("N-Fold extract should always produce 2 frames!",2,splits.length);
          Assert.assertEquals("N-Fold extract should not modify input frame!",nrows,fr.numRows());
          Assert.assertEquals(nrows,splits[0].numRows() + splits[1].numRows());
        }
  finally {
          if (splits != null)           for (          Frame fs : splits)           fs.delete();
        }
      }
    }
  }
  finally {
    if (fr != null)     fr.delete();
  }
}
