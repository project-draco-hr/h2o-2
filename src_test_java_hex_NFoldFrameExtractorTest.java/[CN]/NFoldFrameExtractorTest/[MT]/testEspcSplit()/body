{
  NFoldFrameExtractor fe=null;
  long[][] espc=null;
  for (int i=0; i < 3; i++) {
    fe=new NFoldFrameExtractor(null,3,i,null,null);
    espc=fe.computeEspcPerSplit(ar(0,2,4,6,8,10,12),12L);
    assertArrayEquals(ar(0L,2L,4L,6L,8L),espc[0]);
    assertArrayEquals(ar(0L,2L,4L),espc[1]);
  }
  fe=new NFoldFrameExtractor(null,3,1,null,null);
  espc=fe.computeEspcPerSplit(ar(0,2,4,6,8,10),10L);
  assertArrayEquals(ar(0L,2L,3L,5L,7L),espc[0]);
  assertArrayEquals(ar(0L,1L,3L),espc[1]);
  fe=new NFoldFrameExtractor(null,3,0,null,null);
  espc=fe.computeEspcPerSplit(ar(0,3,6),6L);
  assertArrayEquals(ar(0L,1L,4L),espc[0]);
  assertArrayEquals(ar(0L,2L),espc[1]);
  fe=new NFoldFrameExtractor(null,3,1,null,null);
  espc=fe.computeEspcPerSplit(ar(0,3,6),6L);
  assertArrayEquals(ar(0L,2L,4L),espc[0]);
  assertArrayEquals(ar(0L,1L,2L),espc[1]);
  fe=new NFoldFrameExtractor(null,3,2,null,null);
  espc=fe.computeEspcPerSplit(ar(0,3,6),6L);
  assertArrayEquals(ar(0L,3L,4L),espc[0]);
  assertArrayEquals(ar(0L,2L),espc[1]);
  fe=new NFoldFrameExtractor(null,3,0,null,null);
  espc=fe.computeEspcPerSplit(ar(0,6),6L);
  assertArrayEquals(ar(0L,4L),espc[0]);
  assertArrayEquals(ar(0L,2L),espc[1]);
  fe=new NFoldFrameExtractor(null,3,1,null,null);
  espc=fe.computeEspcPerSplit(ar(0,6),6L);
  assertArrayEquals(ar(0L,2L,4L),espc[0]);
  assertArrayEquals(ar(0L,2L),espc[1]);
  fe=new NFoldFrameExtractor(null,3,2,null,null);
  espc=fe.computeEspcPerSplit(ar(0,6),6L);
  assertArrayEquals(ar(0L,4L),espc[0]);
  assertArrayEquals(ar(0L,2L),espc[1]);
}
