{
  File file1=TestUtil.find_test_file("smalldata/gbm_test/ecology_model.csv");
  if (file1 == null)   return;
  Key fkey1=NFSFileVec.make(file1);
  Key dest1=Key.make("train.hex");
  File file2=TestUtil.find_test_file("smalldata/gbm_test/ecology_eval.csv");
  Key fkey2=NFSFileVec.make(file2);
  Key dest2=Key.make("test.hex");
  GBM gbm=null;
  GBM.GBMModel gbmmodel=null;
  Frame ftest=null, fpreds=null;
  try {
    gbm=new GBM();
    Frame fr=ParseDataset2.parse(dest1,new Key[]{fkey1});
    UKV.remove(fr.remove("Site")._key);
    gbm.response=fr.vecs()[fr.find("Angaus")];
    gbm.source=fr;
    gbm.ntrees=5;
    gbm.max_depth=10;
    gbm.learn_rate=0.2f;
    gbm.min_rows=10;
    gbm.nbins=100;
    gbm.invoke();
    gbmmodel=UKV.get(gbm.dest());
    testHTML(gbmmodel);
    ftest=ParseDataset2.parse(dest2,new Key[]{fkey2});
    fpreds=gbm.score(ftest);
    ConfusionMatrix CM=new ConfusionMatrix();
    CM.actual=ftest;
    CM.vactual=ftest.vecs()[ftest.find("Angaus")];
    CM.predict=fpreds;
    CM.vpredict=fpreds.vecs()[fpreds.find("predict")];
    CM.invoke();
    StringBuilder sb=new StringBuilder();
    CM.toASCII(sb);
    System.out.println(sb);
  }
  finally {
    gbm.source.delete();
    if (ftest != null)     ftest.delete();
    if (fpreds != null)     fpreds.delete();
    if (gbmmodel != null)     gbmmodel.delete();
    UKV.remove(gbm.response._key);
    gbm.remove();
  }
}
