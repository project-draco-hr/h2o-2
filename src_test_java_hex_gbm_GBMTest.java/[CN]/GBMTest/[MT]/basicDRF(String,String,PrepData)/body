{
  File file=TestUtil.find_test_file(fname);
  if (file == null)   return;
  Key fkey=NFSFileVec.make(file);
  Key dest=Key.make(hexname);
  DRF drf=null;
  Frame fr=null;
  SharedTreeModelBuilder mb=null;
  try {
    drf=new DRF();
    drf.classification=true;
    fr=drf.source=ParseDataset2.parse(dest,new Key[]{fkey});
    UKV.remove(fkey);
    int idx=prep.prep(fr);
    if (idx < 0) {
      drf.classification=false;
      idx=~idx;
    }
    String rname=fr._names[idx];
    drf.response=fr.vecs()[idx];
    fr.remove(idx);
    fr.add(rname,drf.response);
    drf.ntrees=2;
    drf.max_depth=50;
    drf.min_rows=1;
    drf.nbins=100;
    drf.mtries=-1;
    drf.sample_rate=0.66667f;
    drf.seed=(1L << 32) | 2;
    drf.invoke();
    fr=drf.score(drf.source);
  }
  finally {
    UKV.remove(dest);
    if (drf != null) {
      UKV.remove(drf.dest());
      UKV.remove(drf.response._key);
      drf.remove();
      if (fr != null)       fr.remove();
    }
  }
}
