{
  GBM gbm=new GBM();
  try {
    Frame fr=gbm.source=parseFrame(Key.make("air.hex"),"./smalldata/airlines/allyears2k_headers.zip");
    for (    String s : ignored_aircols)     UKV.remove(fr.remove(s)._key);
    int idx=fr.find("IsArrDelayed");
    gbm.response=fr.vecs()[idx];
    gbm.ntrees=10;
    gbm.max_depth=5;
    gbm.min_rows=1;
    gbm.nbins=20;
    gbm.cols=new int[fr.numCols()];
    for (int i=0; i < gbm.cols.length; i++)     gbm.cols[i]=i;
    gbm.learn_rate=.2f;
    gbm.fork();
    try {
      Thread.sleep(100);
    }
 catch (    Exception _) {
    }
    try {
      fr.delete();
      H2O.fail();
    }
 catch (    IllegalArgumentException _) {
    }
catch (    DException.DistributedException de) {
      assertTrue(de.getMessage().indexOf("java.lang.IllegalArgumentException") != -1);
    }
    GBM.GBMModel model=gbm.get();
    if (model != null)     model.delete();
  }
  finally {
    if (gbm.source != null)     gbm.source.delete(gbm.self(),0.0f);
    gbm.remove();
  }
}
