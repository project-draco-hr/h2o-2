{
  File file=TestUtil.find_test_file(fname);
  if (file == null)   return;
  Key fkey=NFSFileVec.make(file);
  Key dest=Key.make(hexname);
  GBM gbm=null;
  Frame fr=null;
  try {
    gbm=new GBM();
    gbm.source=fr=ParseDataset2.parse(dest,new Key[]{fkey});
    UKV.remove(fkey);
    int idx=prep.prep(fr);
    if (idx < 0) {
      gbm.classification=false;
      idx=~idx;
    }
    String rname=fr._names[idx];
    gbm.response=fr.vecs()[idx];
    fr.remove(idx);
    fr.add(rname,gbm.response);
    gbm.ntrees=4;
    gbm.max_depth=4;
    gbm.min_rows=1;
    gbm.nbins=50;
    gbm.cols=new int[fr.numCols()];
    for (int i=0; i < gbm.cols.length; i++)     gbm.cols[i]=i;
    gbm.learn_rate=.2f;
    gbm.invoke();
    fr=gbm.score(gbm.source);
    GBM.GBMModel gbmmodel=UKV.get(gbm.dest());
  }
  finally {
    UKV.remove(dest);
    if (gbm != null) {
      UKV.remove(gbm.dest());
      UKV.remove(gbm.response._key);
      gbm.remove();
      if (fr != null)       fr.remove();
    }
  }
}
