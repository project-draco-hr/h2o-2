{
  for (  char separator : SEPARATORS) {
    double[][] exp=new double[101][1];
    exp[50][0]=1;
    StringBuilder sb=new StringBuilder();
    for (int i=0; i < 50; i++)     sb.append("0.0\n");
    sb.append("1.0\n");
    for (int i=0; i < 50; i++)     sb.append("0.0\n");
    Key k=FVecTest.makeByteVec(Key.make().toString(),sb.toString());
    testParsed(k,exp);
    exp=new double[101][1];
    exp[50][0]=2;
    sb=new StringBuilder();
    for (int i=0; i < 50; i++)     sb.append("0\n");
    sb.append("2\n");
    for (int i=0; i < 50; i++)     sb.append("0\n");
    k=FVecTest.makeByteVec(Key.make().toString(),sb.toString());
    testParsed(k,exp);
    exp=new double[101][2];
    exp[50][0]=2;
    exp[50][1]=3;
    exp[100][0]=0;
    exp[100][1]=Double.NaN;
    sb=new StringBuilder();
    for (int i=0; i < 50; i++)     sb.append("0,0\n");
    sb.append("2,3\n");
    for (int i=0; i < 49; i++)     sb.append("0,0\n");
    sb.append("0");
    k=FVecTest.makeByteVec(Key.make().toString(),sb.toString());
    testParsed(k,exp);
    sb=new StringBuilder();
    exp=new double[100100][1];
    for (int i=0; i < 100; i++) {
      for (int j=0; j < 1000; j++)       sb.append("0\n");
      sb.append("1\n");
      exp[i * 1001 + 1000][0]=1;
    }
    k=FVecTest.makeByteVec(Key.make().toString(),sb.toString());
    testParsed(k,exp);
    sb=new StringBuilder();
    for (int i=0; i < 100; i++)     sb.append("0\n");
    for (int i=0; i < 100; i+=2)     sb.append("-1001\n1001\n");
    exp=new double[200][1];
    for (int i=0; i < 100; i+=2) {
      exp[i + 100][0]=-1001;
      exp[i + 101][0]=1001;
    }
    k=FVecTest.makeByteVec(Key.make().toString(),sb.toString());
    testParsed(k,exp);
  }
}
