{
  Key destTrain=Key.make("credit");
  Frame fr=parseFrame(destTrain,"smalldata/kaggle/creditsample-training.csv.gz");
  final int n=1;
  assertEquals("Number of chunks",n,fr.anyVec().nChunks());
  assertEquals("Number of rows",150000,fr.numRows());
  assertEquals("Number of cols",12,fr.numCols());
  Vec response=fr.vecs()[1];
  int[] ignored_cols=new int[]{6};
  SpeeDRF spdrf=new SpeeDRF();
  spdrf.source=fr;
  spdrf.response=response;
  spdrf.ignored_cols=ignored_cols;
  spdrf.num_trees=3;
  spdrf.max_depth=30;
  spdrf.select_stat_type=Tree.SelectStatType.GINI;
  spdrf.seed=42;
  Log.info("Invoking the SpeeDRF task.");
  spdrf.invoke();
  SpeeDRFModel m=UKV.get(spdrf.dest());
  Assert.assertTrue(m.get_params().state == Job.JobState.DONE);
  assertEquals("Number of classes",2,m.classes());
  assertEquals("Number of trees",3,m.size());
  m.delete();
  fr.delete();
}
