{
  sb.append("<div class='alert'>Actions: " + PCAScore.link(m._selfKey,"Score on dataset") + ", "+ PCA.link(m._dataKey,"Compute new model")+ "</div>");
  sb.append("<span style='display: inline-block;'>");
  sb.append("<table class='table table-striped table-bordered'>");
  sb.append("<tr>");
  sb.append("<th>Feature</th>");
  for (int i=0; i < m._num_pc; i++)   sb.append("<th>").append("PC" + i).append("</th>");
  sb.append("</tr>");
  sb.append("<tr class='warning'>");
  sb.append("<td>").append("Std Dev").append("</td>");
  for (int c=0; c < m._num_pc; c++)   sb.append("<td>").append(ElementBuilder.format(m._sdev[c])).append("</td>");
  sb.append("</tr>");
  sb.append("<tr class='warning'>");
  sb.append("<td>").append("Prop Var").append("</td>");
  for (int c=0; c < m._num_pc; c++)   sb.append("<td>").append(ElementBuilder.format(m._propVar[c])).append("</td>");
  sb.append("</tr>");
  for (int r=0; r < m._va._cols.length; r++) {
    sb.append("<tr>");
    sb.append("<th>").append(m._va._cols[r]._name).append("</th>");
    for (int c=0; c < m._num_pc; c++) {
      double e=m._eigVec[r][c];
      sb.append("<td>").append(ElementBuilder.format(e)).append("</td>");
    }
    sb.append("</tr>");
  }
  sb.append("</table></span>");
}
